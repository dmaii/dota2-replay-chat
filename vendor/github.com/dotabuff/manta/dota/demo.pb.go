// Code generated by protoc-gen-go.
// source: demo.proto
// DO NOT EDIT!

package dota

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type EDemoCommands int32

const (
	EDemoCommands_DEM_Error               EDemoCommands = -1
	EDemoCommands_DEM_Stop                EDemoCommands = 0
	EDemoCommands_DEM_FileHeader          EDemoCommands = 1
	EDemoCommands_DEM_FileInfo            EDemoCommands = 2
	EDemoCommands_DEM_SyncTick            EDemoCommands = 3
	EDemoCommands_DEM_SendTables          EDemoCommands = 4
	EDemoCommands_DEM_ClassInfo           EDemoCommands = 5
	EDemoCommands_DEM_StringTables        EDemoCommands = 6
	EDemoCommands_DEM_Packet              EDemoCommands = 7
	EDemoCommands_DEM_SignonPacket        EDemoCommands = 8
	EDemoCommands_DEM_ConsoleCmd          EDemoCommands = 9
	EDemoCommands_DEM_CustomData          EDemoCommands = 10
	EDemoCommands_DEM_CustomDataCallbacks EDemoCommands = 11
	EDemoCommands_DEM_UserCmd             EDemoCommands = 12
	EDemoCommands_DEM_FullPacket          EDemoCommands = 13
	EDemoCommands_DEM_SaveGame            EDemoCommands = 14
	EDemoCommands_DEM_SpawnGroups         EDemoCommands = 15
	EDemoCommands_DEM_Max                 EDemoCommands = 16
	EDemoCommands_DEM_IsCompressed        EDemoCommands = 64
)

var EDemoCommands_name = map[int32]string{
	-1: "DEM_Error",
	0:  "DEM_Stop",
	1:  "DEM_FileHeader",
	2:  "DEM_FileInfo",
	3:  "DEM_SyncTick",
	4:  "DEM_SendTables",
	5:  "DEM_ClassInfo",
	6:  "DEM_StringTables",
	7:  "DEM_Packet",
	8:  "DEM_SignonPacket",
	9:  "DEM_ConsoleCmd",
	10: "DEM_CustomData",
	11: "DEM_CustomDataCallbacks",
	12: "DEM_UserCmd",
	13: "DEM_FullPacket",
	14: "DEM_SaveGame",
	15: "DEM_SpawnGroups",
	16: "DEM_Max",
	64: "DEM_IsCompressed",
}
var EDemoCommands_value = map[string]int32{
	"DEM_Error":               -1,
	"DEM_Stop":                0,
	"DEM_FileHeader":          1,
	"DEM_FileInfo":            2,
	"DEM_SyncTick":            3,
	"DEM_SendTables":          4,
	"DEM_ClassInfo":           5,
	"DEM_StringTables":        6,
	"DEM_Packet":              7,
	"DEM_SignonPacket":        8,
	"DEM_ConsoleCmd":          9,
	"DEM_CustomData":          10,
	"DEM_CustomDataCallbacks": 11,
	"DEM_UserCmd":             12,
	"DEM_FullPacket":          13,
	"DEM_SaveGame":            14,
	"DEM_SpawnGroups":         15,
	"DEM_Max":                 16,
	"DEM_IsCompressed":        64,
}

func (x EDemoCommands) Enum() *EDemoCommands {
	p := new(EDemoCommands)
	*p = x
	return p
}
func (x EDemoCommands) String() string {
	return proto.EnumName(EDemoCommands_name, int32(x))
}
func (x *EDemoCommands) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EDemoCommands_value, data, "EDemoCommands")
	if err != nil {
		return err
	}
	*x = EDemoCommands(value)
	return nil
}
func (EDemoCommands) EnumDescriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

type CDemoFileHeader struct {
	DemoFileStamp            *string `protobuf:"bytes,1,req,name=demo_file_stamp" json:"demo_file_stamp,omitempty"`
	NetworkProtocol          *int32  `protobuf:"varint,2,opt,name=network_protocol" json:"network_protocol,omitempty"`
	ServerName               *string `protobuf:"bytes,3,opt,name=server_name" json:"server_name,omitempty"`
	ClientName               *string `protobuf:"bytes,4,opt,name=client_name" json:"client_name,omitempty"`
	MapName                  *string `protobuf:"bytes,5,opt,name=map_name" json:"map_name,omitempty"`
	GameDirectory            *string `protobuf:"bytes,6,opt,name=game_directory" json:"game_directory,omitempty"`
	FullpacketsVersion       *int32  `protobuf:"varint,7,opt,name=fullpackets_version" json:"fullpackets_version,omitempty"`
	AllowClientsideEntities  *bool   `protobuf:"varint,8,opt,name=allow_clientside_entities" json:"allow_clientside_entities,omitempty"`
	AllowClientsideParticles *bool   `protobuf:"varint,9,opt,name=allow_clientside_particles" json:"allow_clientside_particles,omitempty"`
	Addons                   *string `protobuf:"bytes,10,opt,name=addons" json:"addons,omitempty"`
	XXX_unrecognized         []byte  `json:"-"`
}

func (m *CDemoFileHeader) Reset()                    { *m = CDemoFileHeader{} }
func (m *CDemoFileHeader) String() string            { return proto.CompactTextString(m) }
func (*CDemoFileHeader) ProtoMessage()               {}
func (*CDemoFileHeader) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *CDemoFileHeader) GetDemoFileStamp() string {
	if m != nil && m.DemoFileStamp != nil {
		return *m.DemoFileStamp
	}
	return ""
}

func (m *CDemoFileHeader) GetNetworkProtocol() int32 {
	if m != nil && m.NetworkProtocol != nil {
		return *m.NetworkProtocol
	}
	return 0
}

func (m *CDemoFileHeader) GetServerName() string {
	if m != nil && m.ServerName != nil {
		return *m.ServerName
	}
	return ""
}

func (m *CDemoFileHeader) GetClientName() string {
	if m != nil && m.ClientName != nil {
		return *m.ClientName
	}
	return ""
}

func (m *CDemoFileHeader) GetMapName() string {
	if m != nil && m.MapName != nil {
		return *m.MapName
	}
	return ""
}

func (m *CDemoFileHeader) GetGameDirectory() string {
	if m != nil && m.GameDirectory != nil {
		return *m.GameDirectory
	}
	return ""
}

func (m *CDemoFileHeader) GetFullpacketsVersion() int32 {
	if m != nil && m.FullpacketsVersion != nil {
		return *m.FullpacketsVersion
	}
	return 0
}

func (m *CDemoFileHeader) GetAllowClientsideEntities() bool {
	if m != nil && m.AllowClientsideEntities != nil {
		return *m.AllowClientsideEntities
	}
	return false
}

func (m *CDemoFileHeader) GetAllowClientsideParticles() bool {
	if m != nil && m.AllowClientsideParticles != nil {
		return *m.AllowClientsideParticles
	}
	return false
}

func (m *CDemoFileHeader) GetAddons() string {
	if m != nil && m.Addons != nil {
		return *m.Addons
	}
	return ""
}

type CGameInfo struct {
	Dota             *CGameInfo_CDotaGameInfo `protobuf:"bytes,4,opt,name=dota" json:"dota,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *CGameInfo) Reset()                    { *m = CGameInfo{} }
func (m *CGameInfo) String() string            { return proto.CompactTextString(m) }
func (*CGameInfo) ProtoMessage()               {}
func (*CGameInfo) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

func (m *CGameInfo) GetDota() *CGameInfo_CDotaGameInfo {
	if m != nil {
		return m.Dota
	}
	return nil
}

type CGameInfo_CDotaGameInfo struct {
	MatchId          *uint64                                     `protobuf:"varint,1,opt,name=match_id" json:"match_id,omitempty"`
	GameMode         *int32                                      `protobuf:"varint,2,opt,name=game_mode" json:"game_mode,omitempty"`
	GameWinner       *int32                                      `protobuf:"varint,3,opt,name=game_winner" json:"game_winner,omitempty"`
	PlayerInfo       []*CGameInfo_CDotaGameInfo_CPlayerInfo      `protobuf:"bytes,4,rep,name=player_info" json:"player_info,omitempty"`
	Leagueid         *uint32                                     `protobuf:"varint,5,opt,name=leagueid" json:"leagueid,omitempty"`
	PicksBans        []*CGameInfo_CDotaGameInfo_CHeroSelectEvent `protobuf:"bytes,6,rep,name=picks_bans" json:"picks_bans,omitempty"`
	RadiantTeamId    *uint32                                     `protobuf:"varint,7,opt,name=radiant_team_id" json:"radiant_team_id,omitempty"`
	DireTeamId       *uint32                                     `protobuf:"varint,8,opt,name=dire_team_id" json:"dire_team_id,omitempty"`
	RadiantTeamTag   *string                                     `protobuf:"bytes,9,opt,name=radiant_team_tag" json:"radiant_team_tag,omitempty"`
	DireTeamTag      *string                                     `protobuf:"bytes,10,opt,name=dire_team_tag" json:"dire_team_tag,omitempty"`
	EndTime          *uint32                                     `protobuf:"varint,11,opt,name=end_time" json:"end_time,omitempty"`
	XXX_unrecognized []byte                                      `json:"-"`
}

func (m *CGameInfo_CDotaGameInfo) Reset()                    { *m = CGameInfo_CDotaGameInfo{} }
func (m *CGameInfo_CDotaGameInfo) String() string            { return proto.CompactTextString(m) }
func (*CGameInfo_CDotaGameInfo) ProtoMessage()               {}
func (*CGameInfo_CDotaGameInfo) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{1, 0} }

func (m *CGameInfo_CDotaGameInfo) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CGameInfo_CDotaGameInfo) GetGameMode() int32 {
	if m != nil && m.GameMode != nil {
		return *m.GameMode
	}
	return 0
}

func (m *CGameInfo_CDotaGameInfo) GetGameWinner() int32 {
	if m != nil && m.GameWinner != nil {
		return *m.GameWinner
	}
	return 0
}

func (m *CGameInfo_CDotaGameInfo) GetPlayerInfo() []*CGameInfo_CDotaGameInfo_CPlayerInfo {
	if m != nil {
		return m.PlayerInfo
	}
	return nil
}

func (m *CGameInfo_CDotaGameInfo) GetLeagueid() uint32 {
	if m != nil && m.Leagueid != nil {
		return *m.Leagueid
	}
	return 0
}

func (m *CGameInfo_CDotaGameInfo) GetPicksBans() []*CGameInfo_CDotaGameInfo_CHeroSelectEvent {
	if m != nil {
		return m.PicksBans
	}
	return nil
}

func (m *CGameInfo_CDotaGameInfo) GetRadiantTeamId() uint32 {
	if m != nil && m.RadiantTeamId != nil {
		return *m.RadiantTeamId
	}
	return 0
}

func (m *CGameInfo_CDotaGameInfo) GetDireTeamId() uint32 {
	if m != nil && m.DireTeamId != nil {
		return *m.DireTeamId
	}
	return 0
}

func (m *CGameInfo_CDotaGameInfo) GetRadiantTeamTag() string {
	if m != nil && m.RadiantTeamTag != nil {
		return *m.RadiantTeamTag
	}
	return ""
}

func (m *CGameInfo_CDotaGameInfo) GetDireTeamTag() string {
	if m != nil && m.DireTeamTag != nil {
		return *m.DireTeamTag
	}
	return ""
}

func (m *CGameInfo_CDotaGameInfo) GetEndTime() uint32 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

type CGameInfo_CDotaGameInfo_CPlayerInfo struct {
	HeroName         *string `protobuf:"bytes,1,opt,name=hero_name" json:"hero_name,omitempty"`
	PlayerName       *string `protobuf:"bytes,2,opt,name=player_name" json:"player_name,omitempty"`
	IsFakeClient     *bool   `protobuf:"varint,3,opt,name=is_fake_client" json:"is_fake_client,omitempty"`
	Steamid          *uint64 `protobuf:"varint,4,opt,name=steamid" json:"steamid,omitempty"`
	GameTeam         *int32  `protobuf:"varint,5,opt,name=game_team" json:"game_team,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CGameInfo_CDotaGameInfo_CPlayerInfo) Reset()         { *m = CGameInfo_CDotaGameInfo_CPlayerInfo{} }
func (m *CGameInfo_CDotaGameInfo_CPlayerInfo) String() string { return proto.CompactTextString(m) }
func (*CGameInfo_CDotaGameInfo_CPlayerInfo) ProtoMessage()    {}
func (*CGameInfo_CDotaGameInfo_CPlayerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor4, []int{1, 0, 0}
}

func (m *CGameInfo_CDotaGameInfo_CPlayerInfo) GetHeroName() string {
	if m != nil && m.HeroName != nil {
		return *m.HeroName
	}
	return ""
}

func (m *CGameInfo_CDotaGameInfo_CPlayerInfo) GetPlayerName() string {
	if m != nil && m.PlayerName != nil {
		return *m.PlayerName
	}
	return ""
}

func (m *CGameInfo_CDotaGameInfo_CPlayerInfo) GetIsFakeClient() bool {
	if m != nil && m.IsFakeClient != nil {
		return *m.IsFakeClient
	}
	return false
}

func (m *CGameInfo_CDotaGameInfo_CPlayerInfo) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

func (m *CGameInfo_CDotaGameInfo_CPlayerInfo) GetGameTeam() int32 {
	if m != nil && m.GameTeam != nil {
		return *m.GameTeam
	}
	return 0
}

type CGameInfo_CDotaGameInfo_CHeroSelectEvent struct {
	IsPick           *bool   `protobuf:"varint,1,opt,name=is_pick" json:"is_pick,omitempty"`
	Team             *uint32 `protobuf:"varint,2,opt,name=team" json:"team,omitempty"`
	HeroId           *uint32 `protobuf:"varint,3,opt,name=hero_id" json:"hero_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CGameInfo_CDotaGameInfo_CHeroSelectEvent) Reset() {
	*m = CGameInfo_CDotaGameInfo_CHeroSelectEvent{}
}
func (m *CGameInfo_CDotaGameInfo_CHeroSelectEvent) String() string { return proto.CompactTextString(m) }
func (*CGameInfo_CDotaGameInfo_CHeroSelectEvent) ProtoMessage()    {}
func (*CGameInfo_CDotaGameInfo_CHeroSelectEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor4, []int{1, 0, 1}
}

func (m *CGameInfo_CDotaGameInfo_CHeroSelectEvent) GetIsPick() bool {
	if m != nil && m.IsPick != nil {
		return *m.IsPick
	}
	return false
}

func (m *CGameInfo_CDotaGameInfo_CHeroSelectEvent) GetTeam() uint32 {
	if m != nil && m.Team != nil {
		return *m.Team
	}
	return 0
}

func (m *CGameInfo_CDotaGameInfo_CHeroSelectEvent) GetHeroId() uint32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

type CDemoFileInfo struct {
	PlaybackTime     *float32   `protobuf:"fixed32,1,opt,name=playback_time" json:"playback_time,omitempty"`
	PlaybackTicks    *int32     `protobuf:"varint,2,opt,name=playback_ticks" json:"playback_ticks,omitempty"`
	PlaybackFrames   *int32     `protobuf:"varint,3,opt,name=playback_frames" json:"playback_frames,omitempty"`
	GameInfo         *CGameInfo `protobuf:"bytes,4,opt,name=game_info" json:"game_info,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *CDemoFileInfo) Reset()                    { *m = CDemoFileInfo{} }
func (m *CDemoFileInfo) String() string            { return proto.CompactTextString(m) }
func (*CDemoFileInfo) ProtoMessage()               {}
func (*CDemoFileInfo) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{2} }

func (m *CDemoFileInfo) GetPlaybackTime() float32 {
	if m != nil && m.PlaybackTime != nil {
		return *m.PlaybackTime
	}
	return 0
}

func (m *CDemoFileInfo) GetPlaybackTicks() int32 {
	if m != nil && m.PlaybackTicks != nil {
		return *m.PlaybackTicks
	}
	return 0
}

func (m *CDemoFileInfo) GetPlaybackFrames() int32 {
	if m != nil && m.PlaybackFrames != nil {
		return *m.PlaybackFrames
	}
	return 0
}

func (m *CDemoFileInfo) GetGameInfo() *CGameInfo {
	if m != nil {
		return m.GameInfo
	}
	return nil
}

type CDemoPacket struct {
	SequenceIn       *int32 `protobuf:"varint,1,opt,name=sequence_in" json:"sequence_in,omitempty"`
	SequenceOutAck   *int32 `protobuf:"varint,2,opt,name=sequence_out_ack" json:"sequence_out_ack,omitempty"`
	Data             []byte `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDemoPacket) Reset()                    { *m = CDemoPacket{} }
func (m *CDemoPacket) String() string            { return proto.CompactTextString(m) }
func (*CDemoPacket) ProtoMessage()               {}
func (*CDemoPacket) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{3} }

func (m *CDemoPacket) GetSequenceIn() int32 {
	if m != nil && m.SequenceIn != nil {
		return *m.SequenceIn
	}
	return 0
}

func (m *CDemoPacket) GetSequenceOutAck() int32 {
	if m != nil && m.SequenceOutAck != nil {
		return *m.SequenceOutAck
	}
	return 0
}

func (m *CDemoPacket) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type CDemoFullPacket struct {
	StringTable      *CDemoStringTables `protobuf:"bytes,1,opt,name=string_table" json:"string_table,omitempty"`
	Packet           *CDemoPacket       `protobuf:"bytes,2,opt,name=packet" json:"packet,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *CDemoFullPacket) Reset()                    { *m = CDemoFullPacket{} }
func (m *CDemoFullPacket) String() string            { return proto.CompactTextString(m) }
func (*CDemoFullPacket) ProtoMessage()               {}
func (*CDemoFullPacket) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{4} }

func (m *CDemoFullPacket) GetStringTable() *CDemoStringTables {
	if m != nil {
		return m.StringTable
	}
	return nil
}

func (m *CDemoFullPacket) GetPacket() *CDemoPacket {
	if m != nil {
		return m.Packet
	}
	return nil
}

type CDemoSaveGame struct {
	Data             []byte  `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	SteamId          *uint64 `protobuf:"fixed64,2,opt,name=steam_id" json:"steam_id,omitempty"`
	Signature        *uint64 `protobuf:"fixed64,3,opt,name=signature" json:"signature,omitempty"`
	Version          *int32  `protobuf:"varint,4,opt,name=version" json:"version,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDemoSaveGame) Reset()                    { *m = CDemoSaveGame{} }
func (m *CDemoSaveGame) String() string            { return proto.CompactTextString(m) }
func (*CDemoSaveGame) ProtoMessage()               {}
func (*CDemoSaveGame) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{5} }

func (m *CDemoSaveGame) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CDemoSaveGame) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

func (m *CDemoSaveGame) GetSignature() uint64 {
	if m != nil && m.Signature != nil {
		return *m.Signature
	}
	return 0
}

func (m *CDemoSaveGame) GetVersion() int32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

type CDemoSyncTick struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDemoSyncTick) Reset()                    { *m = CDemoSyncTick{} }
func (m *CDemoSyncTick) String() string            { return proto.CompactTextString(m) }
func (*CDemoSyncTick) ProtoMessage()               {}
func (*CDemoSyncTick) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{6} }

type CDemoConsoleCmd struct {
	Cmdstring        *string `protobuf:"bytes,1,opt,name=cmdstring" json:"cmdstring,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDemoConsoleCmd) Reset()                    { *m = CDemoConsoleCmd{} }
func (m *CDemoConsoleCmd) String() string            { return proto.CompactTextString(m) }
func (*CDemoConsoleCmd) ProtoMessage()               {}
func (*CDemoConsoleCmd) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{7} }

func (m *CDemoConsoleCmd) GetCmdstring() string {
	if m != nil && m.Cmdstring != nil {
		return *m.Cmdstring
	}
	return ""
}

type CDemoSendTables struct {
	Data             []byte `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDemoSendTables) Reset()                    { *m = CDemoSendTables{} }
func (m *CDemoSendTables) String() string            { return proto.CompactTextString(m) }
func (*CDemoSendTables) ProtoMessage()               {}
func (*CDemoSendTables) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{8} }

func (m *CDemoSendTables) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type CDemoClassInfo struct {
	Classes          []*CDemoClassInfoClassT `protobuf:"bytes,1,rep,name=classes" json:"classes,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *CDemoClassInfo) Reset()                    { *m = CDemoClassInfo{} }
func (m *CDemoClassInfo) String() string            { return proto.CompactTextString(m) }
func (*CDemoClassInfo) ProtoMessage()               {}
func (*CDemoClassInfo) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{9} }

func (m *CDemoClassInfo) GetClasses() []*CDemoClassInfoClassT {
	if m != nil {
		return m.Classes
	}
	return nil
}

type CDemoClassInfoClassT struct {
	ClassId          *int32  `protobuf:"varint,1,opt,name=class_id" json:"class_id,omitempty"`
	NetworkName      *string `protobuf:"bytes,2,opt,name=network_name" json:"network_name,omitempty"`
	TableName        *string `protobuf:"bytes,3,opt,name=table_name" json:"table_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDemoClassInfoClassT) Reset()                    { *m = CDemoClassInfoClassT{} }
func (m *CDemoClassInfoClassT) String() string            { return proto.CompactTextString(m) }
func (*CDemoClassInfoClassT) ProtoMessage()               {}
func (*CDemoClassInfoClassT) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{9, 0} }

func (m *CDemoClassInfoClassT) GetClassId() int32 {
	if m != nil && m.ClassId != nil {
		return *m.ClassId
	}
	return 0
}

func (m *CDemoClassInfoClassT) GetNetworkName() string {
	if m != nil && m.NetworkName != nil {
		return *m.NetworkName
	}
	return ""
}

func (m *CDemoClassInfoClassT) GetTableName() string {
	if m != nil && m.TableName != nil {
		return *m.TableName
	}
	return ""
}

type CDemoCustomData struct {
	CallbackIndex    *int32 `protobuf:"varint,1,opt,name=callback_index" json:"callback_index,omitempty"`
	Data             []byte `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDemoCustomData) Reset()                    { *m = CDemoCustomData{} }
func (m *CDemoCustomData) String() string            { return proto.CompactTextString(m) }
func (*CDemoCustomData) ProtoMessage()               {}
func (*CDemoCustomData) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{10} }

func (m *CDemoCustomData) GetCallbackIndex() int32 {
	if m != nil && m.CallbackIndex != nil {
		return *m.CallbackIndex
	}
	return 0
}

func (m *CDemoCustomData) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type CDemoCustomDataCallbacks struct {
	SaveId           []string `protobuf:"bytes,1,rep,name=save_id" json:"save_id,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CDemoCustomDataCallbacks) Reset()                    { *m = CDemoCustomDataCallbacks{} }
func (m *CDemoCustomDataCallbacks) String() string            { return proto.CompactTextString(m) }
func (*CDemoCustomDataCallbacks) ProtoMessage()               {}
func (*CDemoCustomDataCallbacks) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{11} }

func (m *CDemoCustomDataCallbacks) GetSaveId() []string {
	if m != nil {
		return m.SaveId
	}
	return nil
}

type CDemoStringTables struct {
	Tables           []*CDemoStringTablesTableT `protobuf:"bytes,1,rep,name=tables" json:"tables,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *CDemoStringTables) Reset()                    { *m = CDemoStringTables{} }
func (m *CDemoStringTables) String() string            { return proto.CompactTextString(m) }
func (*CDemoStringTables) ProtoMessage()               {}
func (*CDemoStringTables) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{12} }

func (m *CDemoStringTables) GetTables() []*CDemoStringTablesTableT {
	if m != nil {
		return m.Tables
	}
	return nil
}

type CDemoStringTablesItemsT struct {
	Str              *string `protobuf:"bytes,1,opt,name=str" json:"str,omitempty"`
	Data             []byte  `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDemoStringTablesItemsT) Reset()                    { *m = CDemoStringTablesItemsT{} }
func (m *CDemoStringTablesItemsT) String() string            { return proto.CompactTextString(m) }
func (*CDemoStringTablesItemsT) ProtoMessage()               {}
func (*CDemoStringTablesItemsT) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{12, 0} }

func (m *CDemoStringTablesItemsT) GetStr() string {
	if m != nil && m.Str != nil {
		return *m.Str
	}
	return ""
}

func (m *CDemoStringTablesItemsT) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type CDemoStringTablesTableT struct {
	TableName        *string                    `protobuf:"bytes,1,opt,name=table_name" json:"table_name,omitempty"`
	Items            []*CDemoStringTablesItemsT `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	ItemsClientside  []*CDemoStringTablesItemsT `protobuf:"bytes,3,rep,name=items_clientside" json:"items_clientside,omitempty"`
	TableFlags       *int32                     `protobuf:"varint,4,opt,name=table_flags" json:"table_flags,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *CDemoStringTablesTableT) Reset()                    { *m = CDemoStringTablesTableT{} }
func (m *CDemoStringTablesTableT) String() string            { return proto.CompactTextString(m) }
func (*CDemoStringTablesTableT) ProtoMessage()               {}
func (*CDemoStringTablesTableT) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{12, 1} }

func (m *CDemoStringTablesTableT) GetTableName() string {
	if m != nil && m.TableName != nil {
		return *m.TableName
	}
	return ""
}

func (m *CDemoStringTablesTableT) GetItems() []*CDemoStringTablesItemsT {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *CDemoStringTablesTableT) GetItemsClientside() []*CDemoStringTablesItemsT {
	if m != nil {
		return m.ItemsClientside
	}
	return nil
}

func (m *CDemoStringTablesTableT) GetTableFlags() int32 {
	if m != nil && m.TableFlags != nil {
		return *m.TableFlags
	}
	return 0
}

type CDemoStop struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDemoStop) Reset()                    { *m = CDemoStop{} }
func (m *CDemoStop) String() string            { return proto.CompactTextString(m) }
func (*CDemoStop) ProtoMessage()               {}
func (*CDemoStop) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{13} }

type CDemoUserCmd struct {
	CmdNumber        *int32 `protobuf:"varint,1,opt,name=cmd_number" json:"cmd_number,omitempty"`
	Data             []byte `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDemoUserCmd) Reset()                    { *m = CDemoUserCmd{} }
func (m *CDemoUserCmd) String() string            { return proto.CompactTextString(m) }
func (*CDemoUserCmd) ProtoMessage()               {}
func (*CDemoUserCmd) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{14} }

func (m *CDemoUserCmd) GetCmdNumber() int32 {
	if m != nil && m.CmdNumber != nil {
		return *m.CmdNumber
	}
	return 0
}

func (m *CDemoUserCmd) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type CDemoSpawnGroups struct {
	Msgs             [][]byte `protobuf:"bytes,3,rep,name=msgs" json:"msgs,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CDemoSpawnGroups) Reset()                    { *m = CDemoSpawnGroups{} }
func (m *CDemoSpawnGroups) String() string            { return proto.CompactTextString(m) }
func (*CDemoSpawnGroups) ProtoMessage()               {}
func (*CDemoSpawnGroups) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{15} }

func (m *CDemoSpawnGroups) GetMsgs() [][]byte {
	if m != nil {
		return m.Msgs
	}
	return nil
}

func init() {
	proto.RegisterType((*CDemoFileHeader)(nil), "dota.CDemoFileHeader")
	proto.RegisterType((*CGameInfo)(nil), "dota.CGameInfo")
	proto.RegisterType((*CGameInfo_CDotaGameInfo)(nil), "dota.CGameInfo.CDotaGameInfo")
	proto.RegisterType((*CGameInfo_CDotaGameInfo_CPlayerInfo)(nil), "dota.CGameInfo.CDotaGameInfo.CPlayerInfo")
	proto.RegisterType((*CGameInfo_CDotaGameInfo_CHeroSelectEvent)(nil), "dota.CGameInfo.CDotaGameInfo.CHeroSelectEvent")
	proto.RegisterType((*CDemoFileInfo)(nil), "dota.CDemoFileInfo")
	proto.RegisterType((*CDemoPacket)(nil), "dota.CDemoPacket")
	proto.RegisterType((*CDemoFullPacket)(nil), "dota.CDemoFullPacket")
	proto.RegisterType((*CDemoSaveGame)(nil), "dota.CDemoSaveGame")
	proto.RegisterType((*CDemoSyncTick)(nil), "dota.CDemoSyncTick")
	proto.RegisterType((*CDemoConsoleCmd)(nil), "dota.CDemoConsoleCmd")
	proto.RegisterType((*CDemoSendTables)(nil), "dota.CDemoSendTables")
	proto.RegisterType((*CDemoClassInfo)(nil), "dota.CDemoClassInfo")
	proto.RegisterType((*CDemoClassInfoClassT)(nil), "dota.CDemoClassInfo.class_t")
	proto.RegisterType((*CDemoCustomData)(nil), "dota.CDemoCustomData")
	proto.RegisterType((*CDemoCustomDataCallbacks)(nil), "dota.CDemoCustomDataCallbacks")
	proto.RegisterType((*CDemoStringTables)(nil), "dota.CDemoStringTables")
	proto.RegisterType((*CDemoStringTablesItemsT)(nil), "dota.CDemoStringTables.items_t")
	proto.RegisterType((*CDemoStringTablesTableT)(nil), "dota.CDemoStringTables.table_t")
	proto.RegisterType((*CDemoStop)(nil), "dota.CDemoStop")
	proto.RegisterType((*CDemoUserCmd)(nil), "dota.CDemoUserCmd")
	proto.RegisterType((*CDemoSpawnGroups)(nil), "dota.CDemoSpawnGroups")
	proto.RegisterEnum("dota.EDemoCommands", EDemoCommands_name, EDemoCommands_value)
}

func init() { proto.RegisterFile("demo.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 1122 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x55, 0xdd, 0x6e, 0x1b, 0x45,
	0x14, 0xee, 0xfa, 0xdf, 0x67, 0xed, 0x78, 0x32, 0xa1, 0xcd, 0xe2, 0x82, 0xea, 0xae, 0x7a, 0x61,
	0xa8, 0x6a, 0x50, 0x6e, 0x10, 0x37, 0x08, 0xd5, 0x09, 0x6d, 0x91, 0x2a, 0x55, 0x4a, 0xb9, 0x5e,
	0x4d, 0x76, 0x8f, 0xdd, 0x91, 0x77, 0x67, 0xdc, 0x99, 0x71, 0xd2, 0x8a, 0x1b, 0x2e, 0x10, 0x42,
	0x88, 0x57, 0xe0, 0x69, 0x78, 0x30, 0xd0, 0xfc, 0xec, 0x3a, 0x69, 0xa1, 0x90, 0xab, 0xcc, 0xb7,
	0xe7, 0xef, 0x3b, 0xe7, 0x3b, 0xc7, 0x00, 0x05, 0x56, 0x72, 0xb1, 0x55, 0xd2, 0x48, 0xda, 0x29,
	0xa4, 0x61, 0xe9, 0xef, 0x2d, 0x98, 0x2c, 0x4f, 0xb1, 0x92, 0xdf, 0xf1, 0x12, 0x9f, 0x22, 0x2b,
	0x50, 0xd1, 0x63, 0x98, 0x58, 0xbb, 0x6c, 0xc5, 0x4b, 0xcc, 0xb4, 0x61, 0xd5, 0x36, 0x89, 0x66,
	0xad, 0xf9, 0x90, 0x26, 0x40, 0x04, 0x9a, 0x2b, 0xa9, 0x36, 0x99, 0x8b, 0x91, 0xcb, 0x32, 0x69,
	0xcd, 0xa2, 0x79, 0x97, 0x1e, 0x41, 0xac, 0x51, 0x5d, 0xa2, 0xca, 0x04, 0xab, 0x30, 0x69, 0xcf,
	0xa2, 0xf9, 0xd0, 0x82, 0x79, 0xc9, 0x51, 0x18, 0x0f, 0x76, 0x1c, 0x48, 0x60, 0x50, 0xb1, 0xad,
	0x47, 0xba, 0x0e, 0xb9, 0x03, 0x07, 0x6b, 0x56, 0x61, 0x56, 0x70, 0x85, 0xb9, 0x91, 0xea, 0x6d,
	0xd2, 0x73, 0xf8, 0x5d, 0x38, 0x5a, 0xed, 0xca, 0x72, 0xcb, 0xf2, 0x0d, 0x1a, 0x9d, 0x5d, 0xa2,
	0xd2, 0x5c, 0x8a, 0xa4, 0xef, 0x12, 0xde, 0x87, 0x8f, 0x59, 0x59, 0xca, 0xab, 0xcc, 0x67, 0xd0,
	0xbc, 0xc0, 0x0c, 0x85, 0xe1, 0x86, 0xa3, 0x4e, 0x06, 0xb3, 0x68, 0x3e, 0xa0, 0x29, 0x4c, 0xdf,
	0x33, 0xd9, 0x32, 0x65, 0x78, 0x5e, 0xa2, 0x4e, 0x86, 0xce, 0xe6, 0x00, 0x7a, 0xac, 0x28, 0xa4,
	0xd0, 0x09, 0xd8, 0x9c, 0xe9, 0x9f, 0x1d, 0x18, 0x2e, 0x9f, 0xb0, 0x0a, 0x9f, 0x89, 0x95, 0xa4,
	0x0f, 0xc1, 0x35, 0xc9, 0x55, 0x1e, 0x9f, 0x7c, 0xba, 0xb0, 0x8f, 0x45, 0xf3, 0x79, 0xb1, 0x3c,
	0x95, 0x86, 0xd5, 0xaf, 0xe9, 0xaf, 0x1d, 0x18, 0xdf, 0x40, 0x3c, 0x55, 0x93, 0xbf, 0xca, 0x78,
	0x91, 0x44, 0xb3, 0x68, 0xde, 0xa1, 0x87, 0x30, 0x74, 0x54, 0x2b, 0x59, 0xe0, 0xbe, 0x73, 0x0e,
	0xba, 0xe2, 0x42, 0xa0, 0x72, 0x9d, 0xeb, 0xd2, 0x6f, 0x20, 0xde, 0x96, 0xec, 0x2d, 0xaa, 0x8c,
	0x8b, 0x95, 0x4c, 0x3a, 0xb3, 0xf6, 0x3c, 0x3e, 0xf9, 0xec, 0x83, 0xf9, 0x17, 0xcb, 0x17, 0xce,
	0xa3, 0xce, 0x5c, 0x22, 0x5b, 0xef, 0x90, 0x17, 0xae, 0xc9, 0x63, 0xfa, 0x18, 0x60, 0xcb, 0xf3,
	0x8d, 0xce, 0x2e, 0x98, 0xd0, 0x49, 0xcf, 0x05, 0x5c, 0xfc, 0x47, 0xc0, 0xa7, 0xa8, 0xe4, 0x39,
	0x96, 0x98, 0x9b, 0xb3, 0x4b, 0x14, 0xc6, 0xea, 0x42, 0xb1, 0x82, 0x33, 0x61, 0x32, 0x83, 0xac,
	0xb2, 0xb4, 0xfa, 0x2e, 0xf8, 0x47, 0x30, 0xb2, 0xc3, 0x6b, 0xd0, 0x81, 0x43, 0x13, 0x20, 0x37,
	0xcc, 0x0d, 0x5b, 0xbb, 0xae, 0x0f, 0xe9, 0x6d, 0x18, 0xef, 0xed, 0x2d, 0x0c, 0xb5, 0x34, 0x50,
	0x14, 0x99, 0xe1, 0x15, 0x26, 0xb1, 0x0d, 0x31, 0x7d, 0x0d, 0xf1, 0x75, 0x5a, 0x87, 0x30, 0x7c,
	0x85, 0x4a, 0x7a, 0xf1, 0x44, 0xb5, 0xc6, 0x42, 0xa7, 0x1c, 0xd8, 0xaa, 0x15, 0xc5, 0x75, 0xb6,
	0x62, 0x1b, 0x0c, 0xb3, 0x77, 0x6d, 0x1d, 0xd0, 0x09, 0xf4, 0xb5, 0xcd, 0xc9, 0x0b, 0x37, 0xd2,
	0xfd, 0x3c, 0x2c, 0xe8, 0x1a, 0xd5, 0x9d, 0x3e, 0x06, 0xf2, 0x1e, 0xf1, 0x09, 0xf4, 0xb9, 0xce,
	0x6c, 0xff, 0x5c, 0xd6, 0x01, 0x1d, 0x41, 0xc7, 0xb9, 0xb4, 0x1c, 0xd1, 0x09, 0xf4, 0x5d, 0x59,
	0xbc, 0x70, 0x79, 0xc6, 0xe9, 0x8f, 0x56, 0x09, 0x61, 0xa7, 0x5c, 0xe1, 0xb7, 0x61, 0x6c, 0xab,
	0xbc, 0x60, 0xf9, 0xc6, 0xd3, 0xb3, 0x61, 0x5a, 0xb6, 0xce, 0x6b, 0x70, 0xbe, 0xd1, 0x41, 0x13,
	0xc7, 0x30, 0x69, 0xf0, 0x95, 0x62, 0x15, 0xea, 0xa0, 0x8b, 0x34, 0xd4, 0x1b, 0x54, 0x61, 0x55,
	0x39, 0x79, 0x67, 0x88, 0xe9, 0xf7, 0x10, 0xbb, 0xe4, 0x2f, 0xdc, 0xde, 0xf8, 0xcd, 0x7c, 0xbd,
	0x43, 0x91, 0x5b, 0x37, 0x97, 0xb8, 0x6b, 0x47, 0xd3, 0x80, 0x72, 0x67, 0x32, 0x96, 0x6f, 0x42,
	0xea, 0x11, 0x74, 0x0a, 0x66, 0x98, 0xcb, 0x37, 0x4a, 0xf3, 0xfa, 0x38, 0xec, 0xca, 0x32, 0xc4,
	0x7b, 0x04, 0x23, 0x6d, 0x14, 0x17, 0xeb, 0xcc, 0xb0, 0x8b, 0xd2, 0x33, 0x89, 0x4f, 0x8e, 0x43,
	0x15, 0xd6, 0xf8, 0xdc, 0x7d, 0x7e, 0x69, 0xbf, 0x6a, 0x7a, 0x1f, 0x7a, 0x7e, 0x81, 0x5d, 0xfc,
	0xf8, 0xe4, 0xf0, 0x9a, 0xa1, 0x8f, 0x98, 0x9e, 0x87, 0x6e, 0x9d, 0xb3, 0x4b, 0xb4, 0x2c, 0x9a,
	0x1a, 0x6c, 0xe8, 0x91, 0x55, 0x85, 0xae, 0x85, 0x65, 0x63, 0xf4, 0xec, 0xd4, 0x34, 0x5f, 0x0b,
	0x66, 0x76, 0xca, 0x9f, 0x9a, 0x9e, 0x1d, 0x41, 0x7d, 0x1f, 0x6c, 0x5b, 0xba, 0xe9, 0xa4, 0x0e,
	0xfa, 0x56, 0xe4, 0x2f, 0x79, 0xbe, 0x49, 0x1f, 0x04, 0x2a, 0x4b, 0x29, 0xb4, 0x2c, 0x71, 0x59,
	0x15, 0x36, 0x4e, 0x5e, 0x15, 0x9e, 0x8d, 0x97, 0x53, 0x7a, 0x2f, 0x58, 0x9d, 0xa3, 0x28, 0x02,
	0x83, 0x1b, 0xd5, 0xa4, 0xbf, 0x44, 0x70, 0xe0, 0xe3, 0x94, 0x4c, 0x6b, 0x37, 0xdc, 0x47, 0xd0,
	0xcf, 0xed, 0x03, 0x75, 0x12, 0xb9, 0xbd, 0xfa, 0xe4, 0x1a, 0xc7, 0xc6, 0x6c, 0xe1, 0x6c, 0x32,
	0x33, 0x3d, 0x0b, 0xe6, 0x99, 0xb1, 0xd4, 0xfc, 0xbf, 0xe1, 0x40, 0x74, 0xed, 0x26, 0xd5, 0x17,
	0xf6, 0x9a, 0x9e, 0x29, 0x80, 0x6b, 0xf6, 0xb5, 0xe3, 0x9a, 0x7e, 0x55, 0xf3, 0xd9, 0x69, 0x23,
	0xab, 0x53, 0x66, 0x98, 0x95, 0x53, 0xce, 0xca, 0xd2, 0xc9, 0x86, 0x8b, 0x02, 0xdf, 0x84, 0xa0,
	0x35, 0x83, 0x96, 0x63, 0xf0, 0x10, 0x92, 0x77, 0x1c, 0x97, 0xc1, 0x49, 0xbb, 0x05, 0x61, 0x97,
	0xe8, 0xeb, 0x69, 0xcf, 0x87, 0xe9, 0x6f, 0x2d, 0x38, 0x7c, 0x7f, 0xa8, 0x5f, 0x40, 0xcf, 0xd5,
	0x53, 0x13, 0xbe, 0xf7, 0x2f, 0xd3, 0x5f, 0xf8, 0xaa, 0xcd, 0xf4, 0x01, 0xf4, 0xb9, 0xc1, 0xca,
	0x72, 0x8e, 0xa1, 0xad, 0x8d, 0x0a, 0xdb, 0x7b, 0xa3, 0xb2, 0xe9, 0x1f, 0x11, 0xf4, 0x83, 0xc7,
	0x3b, 0x94, 0xbd, 0xf5, 0x02, 0xba, 0x2e, 0x4a, 0xd2, 0xfa, 0x70, 0xd6, 0x3a, 0xd5, 0xd7, 0x40,
	0xfc, 0xbf, 0xfb, 0x1f, 0x80, 0xa4, 0xfd, 0xff, 0x5c, 0x8f, 0x20, 0xf6, 0xe9, 0x57, 0x25, 0x5b,
	0xeb, 0xa0, 0xa9, 0x18, 0x86, 0xc1, 0x43, 0x6e, 0xd3, 0x2f, 0x61, 0xe4, 0x1e, 0x3f, 0x68, 0x54,
	0x56, 0x4c, 0x14, 0x20, 0xaf, 0x8a, 0x4c, 0xec, 0xaa, 0x0b, 0x54, 0xff, 0xd8, 0xf8, 0x19, 0x10,
	0xef, 0xbe, 0x65, 0x57, 0xe2, 0x89, 0x92, 0xbb, 0xad, 0x13, 0x57, 0xa5, 0xd7, 0xda, 0x95, 0x35,
	0xfa, 0xfc, 0xe7, 0x36, 0x8c, 0xcf, 0xbc, 0x48, 0xab, 0x8a, 0x89, 0x42, 0xd3, 0x3b, 0x30, 0x3c,
	0x3d, 0x7b, 0x9e, 0x9d, 0x29, 0x25, 0x15, 0xf9, 0xab, 0xfe, 0x8b, 0xe8, 0x08, 0x06, 0x16, 0xb7,
	0x95, 0x90, 0x5b, 0x94, 0xc2, 0x81, 0x7d, 0xed, 0x7f, 0xc2, 0x49, 0x44, 0x09, 0x8c, 0x6a, 0xcc,
	0xca, 0x8f, 0xb4, 0x6a, 0xa4, 0xde, 0x08, 0xd2, 0xae, 0xfd, 0xf6, 0x62, 0x27, 0xf6, 0x24, 0x8e,
	0x2d, 0xd6, 0xe8, 0x96, 0x58, 0x51, 0x12, 0x9f, 0x6c, 0xdf, 0x28, 0xd2, 0xa3, 0x07, 0x00, 0x16,
	0xf5, 0x4b, 0x4c, 0xfa, 0x8d, 0x15, 0x5f, 0x0b, 0x29, 0x02, 0x3a, 0xa8, 0x53, 0xec, 0xb7, 0x8e,
	0x0c, 0x1b, 0xac, 0x11, 0x20, 0x01, 0x7a, 0x17, 0x8e, 0x6f, 0x62, 0x8d, 0x28, 0x49, 0x4c, 0x27,
	0x10, 0xdb, 0x8f, 0xa1, 0xd5, 0x64, 0xd4, 0x10, 0x6e, 0xce, 0x12, 0x19, 0x37, 0xf4, 0xc2, 0x15,
	0x21, 0x07, 0xf4, 0x08, 0x26, 0x0e, 0xd9, 0xf7, 0x9b, 0x4c, 0x68, 0x0c, 0x7d, 0x0b, 0x3e, 0x67,
	0x6f, 0x08, 0xa9, 0x6b, 0x7e, 0xa6, 0x97, 0xb2, 0xda, 0x2a, 0xd4, 0x1a, 0x0b, 0xf2, 0xed, 0xe3,
	0xf6, 0x4f, 0xd1, 0xad, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x0f, 0xc5, 0x8c, 0x76, 0x2b, 0x09,
	0x00, 0x00,
}
