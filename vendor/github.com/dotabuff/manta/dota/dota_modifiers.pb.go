// Code generated by protoc-gen-go.
// source: dota_modifiers.proto
// DO NOT EDIT!

package dota

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type DOTA_MODIFIER_ENTRY_TYPE int32

const (
	DOTA_MODIFIER_ENTRY_TYPE_DOTA_MODIFIER_ENTRY_TYPE_ACTIVE  DOTA_MODIFIER_ENTRY_TYPE = 1
	DOTA_MODIFIER_ENTRY_TYPE_DOTA_MODIFIER_ENTRY_TYPE_REMOVED DOTA_MODIFIER_ENTRY_TYPE = 2
)

var DOTA_MODIFIER_ENTRY_TYPE_name = map[int32]string{
	1: "DOTA_MODIFIER_ENTRY_TYPE_ACTIVE",
	2: "DOTA_MODIFIER_ENTRY_TYPE_REMOVED",
}
var DOTA_MODIFIER_ENTRY_TYPE_value = map[string]int32{
	"DOTA_MODIFIER_ENTRY_TYPE_ACTIVE":  1,
	"DOTA_MODIFIER_ENTRY_TYPE_REMOVED": 2,
}

func (x DOTA_MODIFIER_ENTRY_TYPE) Enum() *DOTA_MODIFIER_ENTRY_TYPE {
	p := new(DOTA_MODIFIER_ENTRY_TYPE)
	*p = x
	return p
}
func (x DOTA_MODIFIER_ENTRY_TYPE) String() string {
	return proto.EnumName(DOTA_MODIFIER_ENTRY_TYPE_name, int32(x))
}
func (x *DOTA_MODIFIER_ENTRY_TYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DOTA_MODIFIER_ENTRY_TYPE_value, data, "DOTA_MODIFIER_ENTRY_TYPE")
	if err != nil {
		return err
	}
	*x = DOTA_MODIFIER_ENTRY_TYPE(value)
	return nil
}
func (DOTA_MODIFIER_ENTRY_TYPE) EnumDescriptor() ([]byte, []int) { return fileDescriptor22, []int{0} }

type CDOTAModifierBuffTableEntry struct {
	EntryType           *DOTA_MODIFIER_ENTRY_TYPE `protobuf:"varint,1,req,name=entry_type,enum=dota.DOTA_MODIFIER_ENTRY_TYPE,def=1" json:"entry_type,omitempty"`
	Parent              *int32                    `protobuf:"varint,2,req,name=parent" json:"parent,omitempty"`
	Index               *int32                    `protobuf:"varint,3,req,name=index" json:"index,omitempty"`
	SerialNum           *int32                    `protobuf:"varint,4,req,name=serial_num" json:"serial_num,omitempty"`
	ModifierClass       *int32                    `protobuf:"varint,5,opt,name=modifier_class" json:"modifier_class,omitempty"`
	AbilityLevel        *int32                    `protobuf:"varint,6,opt,name=ability_level" json:"ability_level,omitempty"`
	StackCount          *int32                    `protobuf:"varint,7,opt,name=stack_count" json:"stack_count,omitempty"`
	CreationTime        *float32                  `protobuf:"fixed32,8,opt,name=creation_time" json:"creation_time,omitempty"`
	Duration            *float32                  `protobuf:"fixed32,9,opt,name=duration,def=-1" json:"duration,omitempty"`
	Caster              *int32                    `protobuf:"varint,10,opt,name=caster" json:"caster,omitempty"`
	Ability             *int32                    `protobuf:"varint,11,opt,name=ability" json:"ability,omitempty"`
	Armor               *int32                    `protobuf:"varint,12,opt,name=armor" json:"armor,omitempty"`
	FadeTime            *float32                  `protobuf:"fixed32,13,opt,name=fade_time" json:"fade_time,omitempty"`
	Subtle              *bool                     `protobuf:"varint,14,opt,name=subtle" json:"subtle,omitempty"`
	ChannelTime         *float32                  `protobuf:"fixed32,15,opt,name=channel_time" json:"channel_time,omitempty"`
	VStart              *CMsgVector               `protobuf:"bytes,16,opt,name=v_start" json:"v_start,omitempty"`
	VEnd                *CMsgVector               `protobuf:"bytes,17,opt,name=v_end" json:"v_end,omitempty"`
	PortalLoopAppear    *string                   `protobuf:"bytes,18,opt,name=portal_loop_appear" json:"portal_loop_appear,omitempty"`
	PortalLoopDisappear *string                   `protobuf:"bytes,19,opt,name=portal_loop_disappear" json:"portal_loop_disappear,omitempty"`
	HeroLoopAppear      *string                   `protobuf:"bytes,20,opt,name=hero_loop_appear" json:"hero_loop_appear,omitempty"`
	HeroLoopDisappear   *string                   `protobuf:"bytes,21,opt,name=hero_loop_disappear" json:"hero_loop_disappear,omitempty"`
	MovementSpeed       *int32                    `protobuf:"varint,22,opt,name=movement_speed" json:"movement_speed,omitempty"`
	Aura                *bool                     `protobuf:"varint,23,opt,name=aura" json:"aura,omitempty"`
	Activity            *int32                    `protobuf:"varint,24,opt,name=activity" json:"activity,omitempty"`
	Damage              *int32                    `protobuf:"varint,25,opt,name=damage" json:"damage,omitempty"`
	Range               *int32                    `protobuf:"varint,26,opt,name=range" json:"range,omitempty"`
	DdModifierIndex     *int32                    `protobuf:"varint,27,opt,name=dd_modifier_index" json:"dd_modifier_index,omitempty"`
	DdAbilityIndex      *int32                    `protobuf:"varint,28,opt,name=dd_ability_index" json:"dd_ability_index,omitempty"`
	IllusionLabel       *string                   `protobuf:"bytes,29,opt,name=illusion_label" json:"illusion_label,omitempty"`
	Active              *bool                     `protobuf:"varint,30,opt,name=active" json:"active,omitempty"`
	PlayerIds           *string                   `protobuf:"bytes,31,opt,name=player_ids" json:"player_ids,omitempty"`
	LuaName             *string                   `protobuf:"bytes,32,opt,name=lua_name" json:"lua_name,omitempty"`
	XXX_unrecognized    []byte                    `json:"-"`
}

func (m *CDOTAModifierBuffTableEntry) Reset()                    { *m = CDOTAModifierBuffTableEntry{} }
func (m *CDOTAModifierBuffTableEntry) String() string            { return proto.CompactTextString(m) }
func (*CDOTAModifierBuffTableEntry) ProtoMessage()               {}
func (*CDOTAModifierBuffTableEntry) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{0} }

const Default_CDOTAModifierBuffTableEntry_EntryType DOTA_MODIFIER_ENTRY_TYPE = DOTA_MODIFIER_ENTRY_TYPE_DOTA_MODIFIER_ENTRY_TYPE_ACTIVE
const Default_CDOTAModifierBuffTableEntry_Duration float32 = -1

func (m *CDOTAModifierBuffTableEntry) GetEntryType() DOTA_MODIFIER_ENTRY_TYPE {
	if m != nil && m.EntryType != nil {
		return *m.EntryType
	}
	return Default_CDOTAModifierBuffTableEntry_EntryType
}

func (m *CDOTAModifierBuffTableEntry) GetParent() int32 {
	if m != nil && m.Parent != nil {
		return *m.Parent
	}
	return 0
}

func (m *CDOTAModifierBuffTableEntry) GetIndex() int32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *CDOTAModifierBuffTableEntry) GetSerialNum() int32 {
	if m != nil && m.SerialNum != nil {
		return *m.SerialNum
	}
	return 0
}

func (m *CDOTAModifierBuffTableEntry) GetModifierClass() int32 {
	if m != nil && m.ModifierClass != nil {
		return *m.ModifierClass
	}
	return 0
}

func (m *CDOTAModifierBuffTableEntry) GetAbilityLevel() int32 {
	if m != nil && m.AbilityLevel != nil {
		return *m.AbilityLevel
	}
	return 0
}

func (m *CDOTAModifierBuffTableEntry) GetStackCount() int32 {
	if m != nil && m.StackCount != nil {
		return *m.StackCount
	}
	return 0
}

func (m *CDOTAModifierBuffTableEntry) GetCreationTime() float32 {
	if m != nil && m.CreationTime != nil {
		return *m.CreationTime
	}
	return 0
}

func (m *CDOTAModifierBuffTableEntry) GetDuration() float32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return Default_CDOTAModifierBuffTableEntry_Duration
}

func (m *CDOTAModifierBuffTableEntry) GetCaster() int32 {
	if m != nil && m.Caster != nil {
		return *m.Caster
	}
	return 0
}

func (m *CDOTAModifierBuffTableEntry) GetAbility() int32 {
	if m != nil && m.Ability != nil {
		return *m.Ability
	}
	return 0
}

func (m *CDOTAModifierBuffTableEntry) GetArmor() int32 {
	if m != nil && m.Armor != nil {
		return *m.Armor
	}
	return 0
}

func (m *CDOTAModifierBuffTableEntry) GetFadeTime() float32 {
	if m != nil && m.FadeTime != nil {
		return *m.FadeTime
	}
	return 0
}

func (m *CDOTAModifierBuffTableEntry) GetSubtle() bool {
	if m != nil && m.Subtle != nil {
		return *m.Subtle
	}
	return false
}

func (m *CDOTAModifierBuffTableEntry) GetChannelTime() float32 {
	if m != nil && m.ChannelTime != nil {
		return *m.ChannelTime
	}
	return 0
}

func (m *CDOTAModifierBuffTableEntry) GetVStart() *CMsgVector {
	if m != nil {
		return m.VStart
	}
	return nil
}

func (m *CDOTAModifierBuffTableEntry) GetVEnd() *CMsgVector {
	if m != nil {
		return m.VEnd
	}
	return nil
}

func (m *CDOTAModifierBuffTableEntry) GetPortalLoopAppear() string {
	if m != nil && m.PortalLoopAppear != nil {
		return *m.PortalLoopAppear
	}
	return ""
}

func (m *CDOTAModifierBuffTableEntry) GetPortalLoopDisappear() string {
	if m != nil && m.PortalLoopDisappear != nil {
		return *m.PortalLoopDisappear
	}
	return ""
}

func (m *CDOTAModifierBuffTableEntry) GetHeroLoopAppear() string {
	if m != nil && m.HeroLoopAppear != nil {
		return *m.HeroLoopAppear
	}
	return ""
}

func (m *CDOTAModifierBuffTableEntry) GetHeroLoopDisappear() string {
	if m != nil && m.HeroLoopDisappear != nil {
		return *m.HeroLoopDisappear
	}
	return ""
}

func (m *CDOTAModifierBuffTableEntry) GetMovementSpeed() int32 {
	if m != nil && m.MovementSpeed != nil {
		return *m.MovementSpeed
	}
	return 0
}

func (m *CDOTAModifierBuffTableEntry) GetAura() bool {
	if m != nil && m.Aura != nil {
		return *m.Aura
	}
	return false
}

func (m *CDOTAModifierBuffTableEntry) GetActivity() int32 {
	if m != nil && m.Activity != nil {
		return *m.Activity
	}
	return 0
}

func (m *CDOTAModifierBuffTableEntry) GetDamage() int32 {
	if m != nil && m.Damage != nil {
		return *m.Damage
	}
	return 0
}

func (m *CDOTAModifierBuffTableEntry) GetRange() int32 {
	if m != nil && m.Range != nil {
		return *m.Range
	}
	return 0
}

func (m *CDOTAModifierBuffTableEntry) GetDdModifierIndex() int32 {
	if m != nil && m.DdModifierIndex != nil {
		return *m.DdModifierIndex
	}
	return 0
}

func (m *CDOTAModifierBuffTableEntry) GetDdAbilityIndex() int32 {
	if m != nil && m.DdAbilityIndex != nil {
		return *m.DdAbilityIndex
	}
	return 0
}

func (m *CDOTAModifierBuffTableEntry) GetIllusionLabel() string {
	if m != nil && m.IllusionLabel != nil {
		return *m.IllusionLabel
	}
	return ""
}

func (m *CDOTAModifierBuffTableEntry) GetActive() bool {
	if m != nil && m.Active != nil {
		return *m.Active
	}
	return false
}

func (m *CDOTAModifierBuffTableEntry) GetPlayerIds() string {
	if m != nil && m.PlayerIds != nil {
		return *m.PlayerIds
	}
	return ""
}

func (m *CDOTAModifierBuffTableEntry) GetLuaName() string {
	if m != nil && m.LuaName != nil {
		return *m.LuaName
	}
	return ""
}

type CDOTALuaModifierEntry struct {
	ModifierType     *int32  `protobuf:"varint,1,req,name=modifier_type" json:"modifier_type,omitempty"`
	ModifierFilename *string `protobuf:"bytes,2,req,name=modifier_filename" json:"modifier_filename,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTALuaModifierEntry) Reset()                    { *m = CDOTALuaModifierEntry{} }
func (m *CDOTALuaModifierEntry) String() string            { return proto.CompactTextString(m) }
func (*CDOTALuaModifierEntry) ProtoMessage()               {}
func (*CDOTALuaModifierEntry) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{1} }

func (m *CDOTALuaModifierEntry) GetModifierType() int32 {
	if m != nil && m.ModifierType != nil {
		return *m.ModifierType
	}
	return 0
}

func (m *CDOTALuaModifierEntry) GetModifierFilename() string {
	if m != nil && m.ModifierFilename != nil {
		return *m.ModifierFilename
	}
	return ""
}

func init() {
	proto.RegisterType((*CDOTAModifierBuffTableEntry)(nil), "dota.CDOTAModifierBuffTableEntry")
	proto.RegisterType((*CDOTALuaModifierEntry)(nil), "dota.CDOTALuaModifierEntry")
	proto.RegisterEnum("dota.DOTA_MODIFIER_ENTRY_TYPE", DOTA_MODIFIER_ENTRY_TYPE_name, DOTA_MODIFIER_ENTRY_TYPE_value)
}

func init() { proto.RegisterFile("dota_modifiers.proto", fileDescriptor22) }

var fileDescriptor22 = []byte{
	// 607 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x93, 0xcf, 0x4f, 0xdb, 0x4a,
	0x10, 0xc7, 0x9f, 0xf3, 0x48, 0x48, 0x06, 0x62, 0xcc, 0x92, 0xe4, 0x0d, 0xf0, 0x00, 0x97, 0xf6,
	0x10, 0x55, 0x2a, 0x52, 0x39, 0x72, 0xe3, 0x47, 0xaa, 0x46, 0x6a, 0x4a, 0x45, 0x23, 0x24, 0x4e,
	0xab, 0x89, 0x3d, 0x01, 0x8b, 0x8d, 0x6d, 0xed, 0xae, 0xd3, 0xe6, 0xd6, 0xff, 0xa0, 0xff, 0x72,
	0xe5, 0xcd, 0x0f, 0xda, 0x43, 0xd4, 0x9b, 0xf7, 0xfb, 0x99, 0x19, 0xcf, 0xce, 0xce, 0x17, 0x5a,
	0x71, 0x66, 0x49, 0x4e, 0xb2, 0x38, 0x19, 0x27, 0xac, 0xcd, 0x59, 0xae, 0x33, 0x9b, 0x89, 0x8d,
	0x52, 0x3d, 0xe8, 0xa4, 0x6c, 0xbf, 0x65, 0xfa, 0x79, 0x44, 0x86, 0xed, 0x2c, 0xe7, 0x05, 0x3d,
	0xfd, 0x59, 0x83, 0xc3, 0xeb, 0x9b, 0xdb, 0xe1, 0xe5, 0x60, 0x91, 0x76, 0x55, 0x8c, 0xc7, 0x43,
	0x1a, 0x29, 0xee, 0xa5, 0x56, 0xcf, 0xc4, 0x57, 0x00, 0x2e, 0x3f, 0x64, 0x99, 0x84, 0x5e, 0x58,
	0xe9, 0xfa, 0xe7, 0xc7, 0x67, 0x65, 0xc9, 0xb3, 0x32, 0x4b, 0x0e, 0x6e, 0x6f, 0xfa, 0x1f, 0xfa,
	0xbd, 0x3b, 0xd9, 0xfb, 0x3c, 0xbc, 0x7b, 0x90, 0xc3, 0x87, 0x2f, 0xbd, 0x8b, 0x93, 0x75, 0x44,
	0x5e, 0x5e, 0x0f, 0xfb, 0xf7, 0x3d, 0xe1, 0x43, 0x2d, 0x27, 0xcd, 0xa9, 0xc5, 0x4a, 0x58, 0xe9,
	0x56, 0x45, 0x13, 0xaa, 0x49, 0x1a, 0xf3, 0x77, 0xfc, 0xd7, 0x1d, 0x05, 0x80, 0x61, 0x9d, 0x90,
	0x92, 0x69, 0x31, 0xc1, 0x0d, 0xa7, 0x75, 0xc0, 0x5f, 0x5e, 0x4c, 0x46, 0x8a, 0x8c, 0xc1, 0x6a,
	0xe8, 0x75, 0xab, 0xa2, 0x0d, 0x4d, 0x1a, 0x25, 0x2a, 0xb1, 0x33, 0xa9, 0x78, 0xca, 0x0a, 0x6b,
	0x4e, 0xde, 0x83, 0x2d, 0x63, 0x29, 0x7a, 0x96, 0x51, 0x56, 0xa4, 0x16, 0x37, 0x97, 0xb1, 0x91,
	0x66, 0xb2, 0x49, 0x96, 0x4a, 0x9b, 0x4c, 0x18, 0xeb, 0xa1, 0xd7, 0xad, 0x88, 0x16, 0xd4, 0xe3,
	0x42, 0x3b, 0x19, 0x1b, 0xa5, 0x72, 0x51, 0x79, 0xf7, 0xbe, 0xec, 0x31, 0x22, 0x63, 0x59, 0x23,
	0xb8, 0xe4, 0x1d, 0xd8, 0x5c, 0xfc, 0x08, 0xb7, 0x9c, 0xd0, 0x84, 0x2a, 0xe9, 0x49, 0xa6, 0x71,
	0xdb, 0x1d, 0x77, 0xa1, 0x31, 0xa6, 0x98, 0xe7, 0x85, 0x9b, 0xae, 0xb0, 0x0f, 0x35, 0x53, 0x8c,
	0xac, 0x62, 0xf4, 0x43, 0xaf, 0x5b, 0x17, 0x2d, 0xd8, 0x8e, 0x9e, 0x28, 0x4d, 0x59, 0xcd, 0xa3,
	0x76, 0x5c, 0xd4, 0x2b, 0xd8, 0x9c, 0x4a, 0x63, 0x49, 0x5b, 0x0c, 0x42, 0xaf, 0xbb, 0x75, 0x1e,
	0xcc, 0xc7, 0x7b, 0x3d, 0x30, 0x8f, 0xf7, 0x1c, 0xd9, 0x4c, 0x8b, 0x13, 0xa8, 0x4e, 0x25, 0xa7,
	0x31, 0xee, 0xae, 0x09, 0x38, 0x00, 0x91, 0x67, 0xda, 0x92, 0x92, 0x2a, 0xcb, 0x72, 0x49, 0x79,
	0xce, 0xa4, 0x51, 0x84, 0x5e, 0xb7, 0x21, 0x8e, 0xa0, 0xfd, 0x3b, 0x8b, 0x13, 0xb3, 0xc0, 0x7b,
	0x0e, 0x23, 0x04, 0x4f, 0xac, 0xb3, 0x3f, 0x12, 0x5b, 0x8e, 0x1c, 0xc2, 0xde, 0x0b, 0x79, 0x49,
	0x6b, 0x3b, 0xe8, 0xde, 0x63, 0xca, 0x13, 0x4e, 0xad, 0x34, 0x39, 0x73, 0x8c, 0x1d, 0x37, 0x86,
	0x6d, 0xd8, 0xa0, 0x42, 0x13, 0xfe, 0xe7, 0x6e, 0x1c, 0x40, 0x9d, 0x22, 0x9b, 0x4c, 0xcb, 0xa9,
	0xa1, 0xe3, 0x3e, 0xd4, 0x62, 0x9a, 0xd0, 0x23, 0xe3, 0xfe, 0x72, 0x8a, 0x9a, 0xd2, 0x47, 0xc6,
	0x03, 0x77, 0xdc, 0x87, 0xdd, 0x38, 0x5e, 0xad, 0xb0, 0x9c, 0x6f, 0xc5, 0xa1, 0x43, 0x08, 0x41,
	0x1c, 0xcb, 0xe5, 0x63, 0xcf, 0xc9, 0xff, 0x8e, 0x74, 0xc0, 0x4f, 0x94, 0x2a, 0x4c, 0xf9, 0xae,
	0x8a, 0x46, 0xac, 0xf0, 0xc8, 0xf5, 0xe8, 0x43, 0xcd, 0xfd, 0x9d, 0xf1, 0xd8, 0x75, 0x23, 0x00,
	0x72, 0x45, 0xb3, 0xb2, 0x6e, 0x6c, 0xf0, 0xc4, 0xc5, 0x04, 0x50, 0x57, 0x05, 0xc9, 0x94, 0x26,
	0x8c, 0x61, 0xa9, 0x9c, 0xf6, 0xa1, 0xed, 0x0c, 0xf1, 0xa9, 0xa0, 0xa5, 0x27, 0xe6, 0x56, 0x68,
	0x43, 0x73, 0xd5, 0xd8, 0xca, 0x0d, 0xae, 0xe5, 0x95, 0x3c, 0x4e, 0x14, 0xbb, 0x52, 0xe5, 0x5e,
	0x37, 0xde, 0x32, 0xe0, 0x3a, 0x2b, 0x88, 0xd7, 0xf0, 0x37, 0x9b, 0x04, 0x9e, 0x78, 0x03, 0xe1,
	0xda, 0xa0, 0xbb, 0xde, 0xe0, 0xf6, 0xbe, 0x77, 0x13, 0x54, 0xae, 0xaa, 0x1f, 0xbd, 0x1f, 0xde,
	0x3f, 0xbf, 0x02, 0x00, 0x00, 0xff, 0xff, 0x95, 0x0f, 0x42, 0x87, 0xff, 0x03, 0x00, 0x00,
}
