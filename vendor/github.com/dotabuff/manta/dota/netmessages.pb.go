// Code generated by protoc-gen-go.
// source: netmessages.proto
// DO NOT EDIT!

package dota

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CLC_Messages int32

const (
	CLC_Messages_clc_ClientInfo            CLC_Messages = 20
	CLC_Messages_clc_Move                  CLC_Messages = 21
	CLC_Messages_clc_VoiceData             CLC_Messages = 22
	CLC_Messages_clc_BaselineAck           CLC_Messages = 23
	CLC_Messages_clc_ListenEvents          CLC_Messages = 24
	CLC_Messages_clc_RespondCvarValue      CLC_Messages = 25
	CLC_Messages_clc_FileCRCCheck          CLC_Messages = 26
	CLC_Messages_clc_LoadingProgress       CLC_Messages = 27
	CLC_Messages_clc_SplitPlayerConnect    CLC_Messages = 28
	CLC_Messages_clc_ClientMessage         CLC_Messages = 29
	CLC_Messages_clc_SplitPlayerDisconnect CLC_Messages = 30
	CLC_Messages_clc_ServerStatus          CLC_Messages = 31
	CLC_Messages_clc_ServerPing            CLC_Messages = 32
	CLC_Messages_clc_RequestPause          CLC_Messages = 33
	CLC_Messages_clc_CmdKeyValues          CLC_Messages = 34
)

var CLC_Messages_name = map[int32]string{
	20: "clc_ClientInfo",
	21: "clc_Move",
	22: "clc_VoiceData",
	23: "clc_BaselineAck",
	24: "clc_ListenEvents",
	25: "clc_RespondCvarValue",
	26: "clc_FileCRCCheck",
	27: "clc_LoadingProgress",
	28: "clc_SplitPlayerConnect",
	29: "clc_ClientMessage",
	30: "clc_SplitPlayerDisconnect",
	31: "clc_ServerStatus",
	32: "clc_ServerPing",
	33: "clc_RequestPause",
	34: "clc_CmdKeyValues",
}
var CLC_Messages_value = map[string]int32{
	"clc_ClientInfo":            20,
	"clc_Move":                  21,
	"clc_VoiceData":             22,
	"clc_BaselineAck":           23,
	"clc_ListenEvents":          24,
	"clc_RespondCvarValue":      25,
	"clc_FileCRCCheck":          26,
	"clc_LoadingProgress":       27,
	"clc_SplitPlayerConnect":    28,
	"clc_ClientMessage":         29,
	"clc_SplitPlayerDisconnect": 30,
	"clc_ServerStatus":          31,
	"clc_ServerPing":            32,
	"clc_RequestPause":          33,
	"clc_CmdKeyValues":          34,
}

func (x CLC_Messages) Enum() *CLC_Messages {
	p := new(CLC_Messages)
	*p = x
	return p
}
func (x CLC_Messages) String() string {
	return proto.EnumName(CLC_Messages_name, int32(x))
}
func (x *CLC_Messages) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CLC_Messages_value, data, "CLC_Messages")
	if err != nil {
		return err
	}
	*x = CLC_Messages(value)
	return nil
}
func (CLC_Messages) EnumDescriptor() ([]byte, []int) { return fileDescriptor30, []int{0} }

type SVC_Messages int32

const (
	SVC_Messages_svc_ServerInfo           SVC_Messages = 40
	SVC_Messages_svc_FlattenedSerializer  SVC_Messages = 41
	SVC_Messages_svc_ClassInfo            SVC_Messages = 42
	SVC_Messages_svc_SetPause             SVC_Messages = 43
	SVC_Messages_svc_CreateStringTable    SVC_Messages = 44
	SVC_Messages_svc_UpdateStringTable    SVC_Messages = 45
	SVC_Messages_svc_VoiceInit            SVC_Messages = 46
	SVC_Messages_svc_VoiceData            SVC_Messages = 47
	SVC_Messages_svc_Print                SVC_Messages = 48
	SVC_Messages_svc_Sounds               SVC_Messages = 49
	SVC_Messages_svc_SetView              SVC_Messages = 50
	SVC_Messages_svc_ClearAllStringTables SVC_Messages = 51
	SVC_Messages_svc_CmdKeyValues         SVC_Messages = 52
	SVC_Messages_svc_BSPDecal             SVC_Messages = 53
	SVC_Messages_svc_SplitScreen          SVC_Messages = 54
	SVC_Messages_svc_PacketEntities       SVC_Messages = 55
	SVC_Messages_svc_Prefetch             SVC_Messages = 56
	SVC_Messages_svc_Menu                 SVC_Messages = 57
	SVC_Messages_svc_GetCvarValue         SVC_Messages = 58
	SVC_Messages_svc_StopSound            SVC_Messages = 59
	SVC_Messages_svc_PeerList             SVC_Messages = 60
	SVC_Messages_svc_PacketReliable       SVC_Messages = 61
	SVC_Messages_svc_HLTVStatus           SVC_Messages = 62
	SVC_Messages_svc_ServerSteamID        SVC_Messages = 63
	SVC_Messages_svc_FullFrameSplit       SVC_Messages = 70
)

var SVC_Messages_name = map[int32]string{
	40: "svc_ServerInfo",
	41: "svc_FlattenedSerializer",
	42: "svc_ClassInfo",
	43: "svc_SetPause",
	44: "svc_CreateStringTable",
	45: "svc_UpdateStringTable",
	46: "svc_VoiceInit",
	47: "svc_VoiceData",
	48: "svc_Print",
	49: "svc_Sounds",
	50: "svc_SetView",
	51: "svc_ClearAllStringTables",
	52: "svc_CmdKeyValues",
	53: "svc_BSPDecal",
	54: "svc_SplitScreen",
	55: "svc_PacketEntities",
	56: "svc_Prefetch",
	57: "svc_Menu",
	58: "svc_GetCvarValue",
	59: "svc_StopSound",
	60: "svc_PeerList",
	61: "svc_PacketReliable",
	62: "svc_HLTVStatus",
	63: "svc_ServerSteamID",
	70: "svc_FullFrameSplit",
}
var SVC_Messages_value = map[string]int32{
	"svc_ServerInfo":           40,
	"svc_FlattenedSerializer":  41,
	"svc_ClassInfo":            42,
	"svc_SetPause":             43,
	"svc_CreateStringTable":    44,
	"svc_UpdateStringTable":    45,
	"svc_VoiceInit":            46,
	"svc_VoiceData":            47,
	"svc_Print":                48,
	"svc_Sounds":               49,
	"svc_SetView":              50,
	"svc_ClearAllStringTables": 51,
	"svc_CmdKeyValues":         52,
	"svc_BSPDecal":             53,
	"svc_SplitScreen":          54,
	"svc_PacketEntities":       55,
	"svc_Prefetch":             56,
	"svc_Menu":                 57,
	"svc_GetCvarValue":         58,
	"svc_StopSound":            59,
	"svc_PeerList":             60,
	"svc_PacketReliable":       61,
	"svc_HLTVStatus":           62,
	"svc_ServerSteamID":        63,
	"svc_FullFrameSplit":       70,
}

func (x SVC_Messages) Enum() *SVC_Messages {
	p := new(SVC_Messages)
	*p = x
	return p
}
func (x SVC_Messages) String() string {
	return proto.EnumName(SVC_Messages_name, int32(x))
}
func (x *SVC_Messages) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SVC_Messages_value, data, "SVC_Messages")
	if err != nil {
		return err
	}
	*x = SVC_Messages(value)
	return nil
}
func (SVC_Messages) EnumDescriptor() ([]byte, []int) { return fileDescriptor30, []int{1} }

type VoiceDataFormatT int32

const (
	VoiceDataFormatT_VOICEDATA_FORMAT_STEAM  VoiceDataFormatT = 0
	VoiceDataFormatT_VOICEDATA_FORMAT_ENGINE VoiceDataFormatT = 1
)

var VoiceDataFormatT_name = map[int32]string{
	0: "VOICEDATA_FORMAT_STEAM",
	1: "VOICEDATA_FORMAT_ENGINE",
}
var VoiceDataFormatT_value = map[string]int32{
	"VOICEDATA_FORMAT_STEAM":  0,
	"VOICEDATA_FORMAT_ENGINE": 1,
}

func (x VoiceDataFormatT) Enum() *VoiceDataFormatT {
	p := new(VoiceDataFormatT)
	*p = x
	return p
}
func (x VoiceDataFormatT) String() string {
	return proto.EnumName(VoiceDataFormatT_name, int32(x))
}
func (x *VoiceDataFormatT) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(VoiceDataFormatT_value, data, "VoiceDataFormatT")
	if err != nil {
		return err
	}
	*x = VoiceDataFormatT(value)
	return nil
}
func (VoiceDataFormatT) EnumDescriptor() ([]byte, []int) { return fileDescriptor30, []int{2} }

type RequestPauseT int32

const (
	RequestPauseT_RP_PAUSE       RequestPauseT = 0
	RequestPauseT_RP_UNPAUSE     RequestPauseT = 1
	RequestPauseT_RP_TOGGLEPAUSE RequestPauseT = 2
)

var RequestPauseT_name = map[int32]string{
	0: "RP_PAUSE",
	1: "RP_UNPAUSE",
	2: "RP_TOGGLEPAUSE",
}
var RequestPauseT_value = map[string]int32{
	"RP_PAUSE":       0,
	"RP_UNPAUSE":     1,
	"RP_TOGGLEPAUSE": 2,
}

func (x RequestPauseT) Enum() *RequestPauseT {
	p := new(RequestPauseT)
	*p = x
	return p
}
func (x RequestPauseT) String() string {
	return proto.EnumName(RequestPauseT_name, int32(x))
}
func (x *RequestPauseT) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RequestPauseT_value, data, "RequestPauseT")
	if err != nil {
		return err
	}
	*x = RequestPauseT(value)
	return nil
}
func (RequestPauseT) EnumDescriptor() ([]byte, []int) { return fileDescriptor30, []int{3} }

type PrefetchType int32

const (
	PrefetchType_PFT_SOUND PrefetchType = 0
)

var PrefetchType_name = map[int32]string{
	0: "PFT_SOUND",
}
var PrefetchType_value = map[string]int32{
	"PFT_SOUND": 0,
}

func (x PrefetchType) Enum() *PrefetchType {
	p := new(PrefetchType)
	*p = x
	return p
}
func (x PrefetchType) String() string {
	return proto.EnumName(PrefetchType_name, int32(x))
}
func (x *PrefetchType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PrefetchType_value, data, "PrefetchType")
	if err != nil {
		return err
	}
	*x = PrefetchType(value)
	return nil
}
func (PrefetchType) EnumDescriptor() ([]byte, []int) { return fileDescriptor30, []int{4} }

type ESplitScreenMessageType int32

const (
	ESplitScreenMessageType_MSG_SPLITSCREEN_ADDUSER    ESplitScreenMessageType = 0
	ESplitScreenMessageType_MSG_SPLITSCREEN_REMOVEUSER ESplitScreenMessageType = 1
)

var ESplitScreenMessageType_name = map[int32]string{
	0: "MSG_SPLITSCREEN_ADDUSER",
	1: "MSG_SPLITSCREEN_REMOVEUSER",
}
var ESplitScreenMessageType_value = map[string]int32{
	"MSG_SPLITSCREEN_ADDUSER":    0,
	"MSG_SPLITSCREEN_REMOVEUSER": 1,
}

func (x ESplitScreenMessageType) Enum() *ESplitScreenMessageType {
	p := new(ESplitScreenMessageType)
	*p = x
	return p
}
func (x ESplitScreenMessageType) String() string {
	return proto.EnumName(ESplitScreenMessageType_name, int32(x))
}
func (x *ESplitScreenMessageType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ESplitScreenMessageType_value, data, "ESplitScreenMessageType")
	if err != nil {
		return err
	}
	*x = ESplitScreenMessageType(value)
	return nil
}
func (ESplitScreenMessageType) EnumDescriptor() ([]byte, []int) { return fileDescriptor30, []int{5} }

type EQueryCvarValueStatus int32

const (
	EQueryCvarValueStatus_eQueryCvarValueStatus_ValueIntact   EQueryCvarValueStatus = 0
	EQueryCvarValueStatus_eQueryCvarValueStatus_CvarNotFound  EQueryCvarValueStatus = 1
	EQueryCvarValueStatus_eQueryCvarValueStatus_NotACvar      EQueryCvarValueStatus = 2
	EQueryCvarValueStatus_eQueryCvarValueStatus_CvarProtected EQueryCvarValueStatus = 3
)

var EQueryCvarValueStatus_name = map[int32]string{
	0: "eQueryCvarValueStatus_ValueIntact",
	1: "eQueryCvarValueStatus_CvarNotFound",
	2: "eQueryCvarValueStatus_NotACvar",
	3: "eQueryCvarValueStatus_CvarProtected",
}
var EQueryCvarValueStatus_value = map[string]int32{
	"eQueryCvarValueStatus_ValueIntact":   0,
	"eQueryCvarValueStatus_CvarNotFound":  1,
	"eQueryCvarValueStatus_NotACvar":      2,
	"eQueryCvarValueStatus_CvarProtected": 3,
}

func (x EQueryCvarValueStatus) Enum() *EQueryCvarValueStatus {
	p := new(EQueryCvarValueStatus)
	*p = x
	return p
}
func (x EQueryCvarValueStatus) String() string {
	return proto.EnumName(EQueryCvarValueStatus_name, int32(x))
}
func (x *EQueryCvarValueStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EQueryCvarValueStatus_value, data, "EQueryCvarValueStatus")
	if err != nil {
		return err
	}
	*x = EQueryCvarValueStatus(value)
	return nil
}
func (EQueryCvarValueStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor30, []int{6} }

type DIALOG_TYPE int32

const (
	DIALOG_TYPE_DIALOG_MSG        DIALOG_TYPE = 0
	DIALOG_TYPE_DIALOG_MENU       DIALOG_TYPE = 1
	DIALOG_TYPE_DIALOG_TEXT       DIALOG_TYPE = 2
	DIALOG_TYPE_DIALOG_ENTRY      DIALOG_TYPE = 3
	DIALOG_TYPE_DIALOG_ASKCONNECT DIALOG_TYPE = 4
)

var DIALOG_TYPE_name = map[int32]string{
	0: "DIALOG_MSG",
	1: "DIALOG_MENU",
	2: "DIALOG_TEXT",
	3: "DIALOG_ENTRY",
	4: "DIALOG_ASKCONNECT",
}
var DIALOG_TYPE_value = map[string]int32{
	"DIALOG_MSG":        0,
	"DIALOG_MENU":       1,
	"DIALOG_TEXT":       2,
	"DIALOG_ENTRY":      3,
	"DIALOG_ASKCONNECT": 4,
}

func (x DIALOG_TYPE) Enum() *DIALOG_TYPE {
	p := new(DIALOG_TYPE)
	*p = x
	return p
}
func (x DIALOG_TYPE) String() string {
	return proto.EnumName(DIALOG_TYPE_name, int32(x))
}
func (x *DIALOG_TYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DIALOG_TYPE_value, data, "DIALOG_TYPE")
	if err != nil {
		return err
	}
	*x = DIALOG_TYPE(value)
	return nil
}
func (DIALOG_TYPE) EnumDescriptor() ([]byte, []int) { return fileDescriptor30, []int{7} }

type SVC_Messages_LowFrequency int32

const (
	SVC_Messages_LowFrequency_svc_dummy SVC_Messages_LowFrequency = 600
)

var SVC_Messages_LowFrequency_name = map[int32]string{
	600: "svc_dummy",
}
var SVC_Messages_LowFrequency_value = map[string]int32{
	"svc_dummy": 600,
}

func (x SVC_Messages_LowFrequency) Enum() *SVC_Messages_LowFrequency {
	p := new(SVC_Messages_LowFrequency)
	*p = x
	return p
}
func (x SVC_Messages_LowFrequency) String() string {
	return proto.EnumName(SVC_Messages_LowFrequency_name, int32(x))
}
func (x *SVC_Messages_LowFrequency) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SVC_Messages_LowFrequency_value, data, "SVC_Messages_LowFrequency")
	if err != nil {
		return err
	}
	*x = SVC_Messages_LowFrequency(value)
	return nil
}
func (SVC_Messages_LowFrequency) EnumDescriptor() ([]byte, []int) { return fileDescriptor30, []int{8} }

type Bidirectional_Messages int32

const (
	Bidirectional_Messages_bi_RebroadcastGameEvent Bidirectional_Messages = 16
	Bidirectional_Messages_bi_RebroadcastSource    Bidirectional_Messages = 17
	Bidirectional_Messages_bi_GameEvent            Bidirectional_Messages = 18
)

var Bidirectional_Messages_name = map[int32]string{
	16: "bi_RebroadcastGameEvent",
	17: "bi_RebroadcastSource",
	18: "bi_GameEvent",
}
var Bidirectional_Messages_value = map[string]int32{
	"bi_RebroadcastGameEvent": 16,
	"bi_RebroadcastSource":    17,
	"bi_GameEvent":            18,
}

func (x Bidirectional_Messages) Enum() *Bidirectional_Messages {
	p := new(Bidirectional_Messages)
	*p = x
	return p
}
func (x Bidirectional_Messages) String() string {
	return proto.EnumName(Bidirectional_Messages_name, int32(x))
}
func (x *Bidirectional_Messages) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Bidirectional_Messages_value, data, "Bidirectional_Messages")
	if err != nil {
		return err
	}
	*x = Bidirectional_Messages(value)
	return nil
}
func (Bidirectional_Messages) EnumDescriptor() ([]byte, []int) { return fileDescriptor30, []int{9} }

type Bidirectional_Messages_LowFrequency int32

const (
	Bidirectional_Messages_LowFrequency_bi_RelayInfo   Bidirectional_Messages_LowFrequency = 700
	Bidirectional_Messages_LowFrequency_bi_RelayPacket Bidirectional_Messages_LowFrequency = 701
)

var Bidirectional_Messages_LowFrequency_name = map[int32]string{
	700: "bi_RelayInfo",
	701: "bi_RelayPacket",
}
var Bidirectional_Messages_LowFrequency_value = map[string]int32{
	"bi_RelayInfo":   700,
	"bi_RelayPacket": 701,
}

func (x Bidirectional_Messages_LowFrequency) Enum() *Bidirectional_Messages_LowFrequency {
	p := new(Bidirectional_Messages_LowFrequency)
	*p = x
	return p
}
func (x Bidirectional_Messages_LowFrequency) String() string {
	return proto.EnumName(Bidirectional_Messages_LowFrequency_name, int32(x))
}
func (x *Bidirectional_Messages_LowFrequency) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Bidirectional_Messages_LowFrequency_value, data, "Bidirectional_Messages_LowFrequency")
	if err != nil {
		return err
	}
	*x = Bidirectional_Messages_LowFrequency(value)
	return nil
}
func (Bidirectional_Messages_LowFrequency) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor30, []int{10}
}

type CBidirMsg_RelayInfo_OperationT int32

const (
	CBidirMsg_RelayInfo_RIO_REQUEST_RELAY        CBidirMsg_RelayInfo_OperationT = 0
	CBidirMsg_RelayInfo_RIO_WILL_RELAY           CBidirMsg_RelayInfo_OperationT = 1
	CBidirMsg_RelayInfo_RIO_NO_ROUTE             CBidirMsg_RelayInfo_OperationT = 2
	CBidirMsg_RelayInfo_RIO_REJECT_RELAY         CBidirMsg_RelayInfo_OperationT = 3
	CBidirMsg_RelayInfo_RIO_ESTABLISH_CONNECTION CBidirMsg_RelayInfo_OperationT = 4
)

var CBidirMsg_RelayInfo_OperationT_name = map[int32]string{
	0: "RIO_REQUEST_RELAY",
	1: "RIO_WILL_RELAY",
	2: "RIO_NO_ROUTE",
	3: "RIO_REJECT_RELAY",
	4: "RIO_ESTABLISH_CONNECTION",
}
var CBidirMsg_RelayInfo_OperationT_value = map[string]int32{
	"RIO_REQUEST_RELAY":        0,
	"RIO_WILL_RELAY":           1,
	"RIO_NO_ROUTE":             2,
	"RIO_REJECT_RELAY":         3,
	"RIO_ESTABLISH_CONNECTION": 4,
}

func (x CBidirMsg_RelayInfo_OperationT) Enum() *CBidirMsg_RelayInfo_OperationT {
	p := new(CBidirMsg_RelayInfo_OperationT)
	*p = x
	return p
}
func (x CBidirMsg_RelayInfo_OperationT) String() string {
	return proto.EnumName(CBidirMsg_RelayInfo_OperationT_name, int32(x))
}
func (x *CBidirMsg_RelayInfo_OperationT) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CBidirMsg_RelayInfo_OperationT_value, data, "CBidirMsg_RelayInfo_OperationT")
	if err != nil {
		return err
	}
	*x = CBidirMsg_RelayInfo_OperationT(value)
	return nil
}
func (CBidirMsg_RelayInfo_OperationT) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor30, []int{53, 0}
}

type CCLCMsg_ClientInfo struct {
	SendTableCrc     *uint32 `protobuf:"fixed32,1,opt,name=send_table_crc" json:"send_table_crc,omitempty"`
	ServerCount      *uint32 `protobuf:"varint,2,opt,name=server_count" json:"server_count,omitempty"`
	IsHltv           *bool   `protobuf:"varint,3,opt,name=is_hltv" json:"is_hltv,omitempty"`
	IsReplay         *bool   `protobuf:"varint,4,opt,name=is_replay" json:"is_replay,omitempty"`
	FriendsId        *uint32 `protobuf:"varint,5,opt,name=friends_id" json:"friends_id,omitempty"`
	FriendsName      *string `protobuf:"bytes,6,opt,name=friends_name" json:"friends_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CCLCMsg_ClientInfo) Reset()                    { *m = CCLCMsg_ClientInfo{} }
func (m *CCLCMsg_ClientInfo) String() string            { return proto.CompactTextString(m) }
func (*CCLCMsg_ClientInfo) ProtoMessage()               {}
func (*CCLCMsg_ClientInfo) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{0} }

func (m *CCLCMsg_ClientInfo) GetSendTableCrc() uint32 {
	if m != nil && m.SendTableCrc != nil {
		return *m.SendTableCrc
	}
	return 0
}

func (m *CCLCMsg_ClientInfo) GetServerCount() uint32 {
	if m != nil && m.ServerCount != nil {
		return *m.ServerCount
	}
	return 0
}

func (m *CCLCMsg_ClientInfo) GetIsHltv() bool {
	if m != nil && m.IsHltv != nil {
		return *m.IsHltv
	}
	return false
}

func (m *CCLCMsg_ClientInfo) GetIsReplay() bool {
	if m != nil && m.IsReplay != nil {
		return *m.IsReplay
	}
	return false
}

func (m *CCLCMsg_ClientInfo) GetFriendsId() uint32 {
	if m != nil && m.FriendsId != nil {
		return *m.FriendsId
	}
	return 0
}

func (m *CCLCMsg_ClientInfo) GetFriendsName() string {
	if m != nil && m.FriendsName != nil {
		return *m.FriendsName
	}
	return ""
}

type CCLCMsg_Move struct {
	NumBackupCommands *uint32 `protobuf:"varint,1,opt,name=num_backup_commands" json:"num_backup_commands,omitempty"`
	NumNewCommands    *uint32 `protobuf:"varint,2,opt,name=num_new_commands" json:"num_new_commands,omitempty"`
	Data              []byte  `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *CCLCMsg_Move) Reset()                    { *m = CCLCMsg_Move{} }
func (m *CCLCMsg_Move) String() string            { return proto.CompactTextString(m) }
func (*CCLCMsg_Move) ProtoMessage()               {}
func (*CCLCMsg_Move) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{1} }

func (m *CCLCMsg_Move) GetNumBackupCommands() uint32 {
	if m != nil && m.NumBackupCommands != nil {
		return *m.NumBackupCommands
	}
	return 0
}

func (m *CCLCMsg_Move) GetNumNewCommands() uint32 {
	if m != nil && m.NumNewCommands != nil {
		return *m.NumNewCommands
	}
	return 0
}

func (m *CCLCMsg_Move) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type CMsgVoiceAudio struct {
	Format                   *VoiceDataFormatT `protobuf:"varint,1,opt,name=format,enum=dota.VoiceDataFormatT,def=0" json:"format,omitempty"`
	VoiceData                []byte            `protobuf:"bytes,2,opt,name=voice_data" json:"voice_data,omitempty"`
	SequenceBytes            *int32            `protobuf:"varint,3,opt,name=sequence_bytes" json:"sequence_bytes,omitempty"`
	SectionNumber            *uint32           `protobuf:"varint,4,opt,name=section_number" json:"section_number,omitempty"`
	SampleRate               *uint32           `protobuf:"varint,5,opt,name=sample_rate" json:"sample_rate,omitempty"`
	UncompressedSampleOffset *uint32           `protobuf:"varint,6,opt,name=uncompressed_sample_offset" json:"uncompressed_sample_offset,omitempty"`
	XXX_unrecognized         []byte            `json:"-"`
}

func (m *CMsgVoiceAudio) Reset()                    { *m = CMsgVoiceAudio{} }
func (m *CMsgVoiceAudio) String() string            { return proto.CompactTextString(m) }
func (*CMsgVoiceAudio) ProtoMessage()               {}
func (*CMsgVoiceAudio) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{2} }

const Default_CMsgVoiceAudio_Format VoiceDataFormatT = VoiceDataFormatT_VOICEDATA_FORMAT_STEAM

func (m *CMsgVoiceAudio) GetFormat() VoiceDataFormatT {
	if m != nil && m.Format != nil {
		return *m.Format
	}
	return Default_CMsgVoiceAudio_Format
}

func (m *CMsgVoiceAudio) GetVoiceData() []byte {
	if m != nil {
		return m.VoiceData
	}
	return nil
}

func (m *CMsgVoiceAudio) GetSequenceBytes() int32 {
	if m != nil && m.SequenceBytes != nil {
		return *m.SequenceBytes
	}
	return 0
}

func (m *CMsgVoiceAudio) GetSectionNumber() uint32 {
	if m != nil && m.SectionNumber != nil {
		return *m.SectionNumber
	}
	return 0
}

func (m *CMsgVoiceAudio) GetSampleRate() uint32 {
	if m != nil && m.SampleRate != nil {
		return *m.SampleRate
	}
	return 0
}

func (m *CMsgVoiceAudio) GetUncompressedSampleOffset() uint32 {
	if m != nil && m.UncompressedSampleOffset != nil {
		return *m.UncompressedSampleOffset
	}
	return 0
}

type CCLCMsg_VoiceData struct {
	Audio            *CMsgVoiceAudio `protobuf:"bytes,1,opt,name=audio" json:"audio,omitempty"`
	Xuid             *uint64         `protobuf:"fixed64,2,opt,name=xuid" json:"xuid,omitempty"`
	Tick             *uint32         `protobuf:"varint,3,opt,name=tick" json:"tick,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *CCLCMsg_VoiceData) Reset()                    { *m = CCLCMsg_VoiceData{} }
func (m *CCLCMsg_VoiceData) String() string            { return proto.CompactTextString(m) }
func (*CCLCMsg_VoiceData) ProtoMessage()               {}
func (*CCLCMsg_VoiceData) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{3} }

func (m *CCLCMsg_VoiceData) GetAudio() *CMsgVoiceAudio {
	if m != nil {
		return m.Audio
	}
	return nil
}

func (m *CCLCMsg_VoiceData) GetXuid() uint64 {
	if m != nil && m.Xuid != nil {
		return *m.Xuid
	}
	return 0
}

func (m *CCLCMsg_VoiceData) GetTick() uint32 {
	if m != nil && m.Tick != nil {
		return *m.Tick
	}
	return 0
}

type CCLCMsg_BaselineAck struct {
	BaselineTick     *int32 `protobuf:"varint,1,opt,name=baseline_tick" json:"baseline_tick,omitempty"`
	BaselineNr       *int32 `protobuf:"varint,2,opt,name=baseline_nr" json:"baseline_nr,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCLCMsg_BaselineAck) Reset()                    { *m = CCLCMsg_BaselineAck{} }
func (m *CCLCMsg_BaselineAck) String() string            { return proto.CompactTextString(m) }
func (*CCLCMsg_BaselineAck) ProtoMessage()               {}
func (*CCLCMsg_BaselineAck) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{4} }

func (m *CCLCMsg_BaselineAck) GetBaselineTick() int32 {
	if m != nil && m.BaselineTick != nil {
		return *m.BaselineTick
	}
	return 0
}

func (m *CCLCMsg_BaselineAck) GetBaselineNr() int32 {
	if m != nil && m.BaselineNr != nil {
		return *m.BaselineNr
	}
	return 0
}

type CCLCMsg_ListenEvents struct {
	EventMask        []uint32 `protobuf:"fixed32,1,rep,name=event_mask" json:"event_mask,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CCLCMsg_ListenEvents) Reset()                    { *m = CCLCMsg_ListenEvents{} }
func (m *CCLCMsg_ListenEvents) String() string            { return proto.CompactTextString(m) }
func (*CCLCMsg_ListenEvents) ProtoMessage()               {}
func (*CCLCMsg_ListenEvents) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{5} }

func (m *CCLCMsg_ListenEvents) GetEventMask() []uint32 {
	if m != nil {
		return m.EventMask
	}
	return nil
}

type CCLCMsg_RespondCvarValue struct {
	Cookie           *int32  `protobuf:"varint,1,opt,name=cookie" json:"cookie,omitempty"`
	StatusCode       *int32  `protobuf:"varint,2,opt,name=status_code" json:"status_code,omitempty"`
	Name             *string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Value            *string `protobuf:"bytes,4,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CCLCMsg_RespondCvarValue) Reset()                    { *m = CCLCMsg_RespondCvarValue{} }
func (m *CCLCMsg_RespondCvarValue) String() string            { return proto.CompactTextString(m) }
func (*CCLCMsg_RespondCvarValue) ProtoMessage()               {}
func (*CCLCMsg_RespondCvarValue) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{6} }

func (m *CCLCMsg_RespondCvarValue) GetCookie() int32 {
	if m != nil && m.Cookie != nil {
		return *m.Cookie
	}
	return 0
}

func (m *CCLCMsg_RespondCvarValue) GetStatusCode() int32 {
	if m != nil && m.StatusCode != nil {
		return *m.StatusCode
	}
	return 0
}

func (m *CCLCMsg_RespondCvarValue) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CCLCMsg_RespondCvarValue) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type CCLCMsg_FileCRCCheck struct {
	CodePath         *int32  `protobuf:"varint,1,opt,name=code_path" json:"code_path,omitempty"`
	Path             *string `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	CodeFilename     *int32  `protobuf:"varint,3,opt,name=code_filename" json:"code_filename,omitempty"`
	Filename         *string `protobuf:"bytes,4,opt,name=filename" json:"filename,omitempty"`
	Crc              *uint32 `protobuf:"fixed32,5,opt,name=crc" json:"crc,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CCLCMsg_FileCRCCheck) Reset()                    { *m = CCLCMsg_FileCRCCheck{} }
func (m *CCLCMsg_FileCRCCheck) String() string            { return proto.CompactTextString(m) }
func (*CCLCMsg_FileCRCCheck) ProtoMessage()               {}
func (*CCLCMsg_FileCRCCheck) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{7} }

func (m *CCLCMsg_FileCRCCheck) GetCodePath() int32 {
	if m != nil && m.CodePath != nil {
		return *m.CodePath
	}
	return 0
}

func (m *CCLCMsg_FileCRCCheck) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

func (m *CCLCMsg_FileCRCCheck) GetCodeFilename() int32 {
	if m != nil && m.CodeFilename != nil {
		return *m.CodeFilename
	}
	return 0
}

func (m *CCLCMsg_FileCRCCheck) GetFilename() string {
	if m != nil && m.Filename != nil {
		return *m.Filename
	}
	return ""
}

func (m *CCLCMsg_FileCRCCheck) GetCrc() uint32 {
	if m != nil && m.Crc != nil {
		return *m.Crc
	}
	return 0
}

type CCLCMsg_LoadingProgress struct {
	Progress         *int32 `protobuf:"varint,1,opt,name=progress" json:"progress,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCLCMsg_LoadingProgress) Reset()                    { *m = CCLCMsg_LoadingProgress{} }
func (m *CCLCMsg_LoadingProgress) String() string            { return proto.CompactTextString(m) }
func (*CCLCMsg_LoadingProgress) ProtoMessage()               {}
func (*CCLCMsg_LoadingProgress) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{8} }

func (m *CCLCMsg_LoadingProgress) GetProgress() int32 {
	if m != nil && m.Progress != nil {
		return *m.Progress
	}
	return 0
}

type CCLCMsg_SplitPlayerConnect struct {
	Playername       *string `protobuf:"bytes,1,opt,name=playername" json:"playername,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CCLCMsg_SplitPlayerConnect) Reset()                    { *m = CCLCMsg_SplitPlayerConnect{} }
func (m *CCLCMsg_SplitPlayerConnect) String() string            { return proto.CompactTextString(m) }
func (*CCLCMsg_SplitPlayerConnect) ProtoMessage()               {}
func (*CCLCMsg_SplitPlayerConnect) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{9} }

func (m *CCLCMsg_SplitPlayerConnect) GetPlayername() string {
	if m != nil && m.Playername != nil {
		return *m.Playername
	}
	return ""
}

type CCLCMsg_ClientMessage struct {
	MsgType          *int32 `protobuf:"varint,1,opt,name=msg_type" json:"msg_type,omitempty"`
	Data             []byte `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCLCMsg_ClientMessage) Reset()                    { *m = CCLCMsg_ClientMessage{} }
func (m *CCLCMsg_ClientMessage) String() string            { return proto.CompactTextString(m) }
func (*CCLCMsg_ClientMessage) ProtoMessage()               {}
func (*CCLCMsg_ClientMessage) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{10} }

func (m *CCLCMsg_ClientMessage) GetMsgType() int32 {
	if m != nil && m.MsgType != nil {
		return *m.MsgType
	}
	return 0
}

func (m *CCLCMsg_ClientMessage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type CCLCMsg_SplitPlayerDisconnect struct {
	Slot             *int32 `protobuf:"varint,1,opt,name=slot" json:"slot,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCLCMsg_SplitPlayerDisconnect) Reset()                    { *m = CCLCMsg_SplitPlayerDisconnect{} }
func (m *CCLCMsg_SplitPlayerDisconnect) String() string            { return proto.CompactTextString(m) }
func (*CCLCMsg_SplitPlayerDisconnect) ProtoMessage()               {}
func (*CCLCMsg_SplitPlayerDisconnect) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{11} }

func (m *CCLCMsg_SplitPlayerDisconnect) GetSlot() int32 {
	if m != nil && m.Slot != nil {
		return *m.Slot
	}
	return 0
}

type CCLCMsg_ServerStatus struct {
	Simplified       *bool  `protobuf:"varint,1,opt,name=simplified" json:"simplified,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCLCMsg_ServerStatus) Reset()                    { *m = CCLCMsg_ServerStatus{} }
func (m *CCLCMsg_ServerStatus) String() string            { return proto.CompactTextString(m) }
func (*CCLCMsg_ServerStatus) ProtoMessage()               {}
func (*CCLCMsg_ServerStatus) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{12} }

func (m *CCLCMsg_ServerStatus) GetSimplified() bool {
	if m != nil && m.Simplified != nil {
		return *m.Simplified
	}
	return false
}

type CCLCMsg_ServerPing struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCLCMsg_ServerPing) Reset()                    { *m = CCLCMsg_ServerPing{} }
func (m *CCLCMsg_ServerPing) String() string            { return proto.CompactTextString(m) }
func (*CCLCMsg_ServerPing) ProtoMessage()               {}
func (*CCLCMsg_ServerPing) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{13} }

type CCLCMsg_RequestPause struct {
	PauseType        *RequestPauseT `protobuf:"varint,1,opt,name=pause_type,enum=dota.RequestPauseT,def=0" json:"pause_type,omitempty"`
	PauseGroup       *int32         `protobuf:"varint,2,opt,name=pause_group" json:"pause_group,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *CCLCMsg_RequestPause) Reset()                    { *m = CCLCMsg_RequestPause{} }
func (m *CCLCMsg_RequestPause) String() string            { return proto.CompactTextString(m) }
func (*CCLCMsg_RequestPause) ProtoMessage()               {}
func (*CCLCMsg_RequestPause) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{14} }

const Default_CCLCMsg_RequestPause_PauseType RequestPauseT = RequestPauseT_RP_PAUSE

func (m *CCLCMsg_RequestPause) GetPauseType() RequestPauseT {
	if m != nil && m.PauseType != nil {
		return *m.PauseType
	}
	return Default_CCLCMsg_RequestPause_PauseType
}

func (m *CCLCMsg_RequestPause) GetPauseGroup() int32 {
	if m != nil && m.PauseGroup != nil {
		return *m.PauseGroup
	}
	return 0
}

type CCLCMsg_CmdKeyValues struct {
	Data             []byte `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCLCMsg_CmdKeyValues) Reset()                    { *m = CCLCMsg_CmdKeyValues{} }
func (m *CCLCMsg_CmdKeyValues) String() string            { return proto.CompactTextString(m) }
func (*CCLCMsg_CmdKeyValues) ProtoMessage()               {}
func (*CCLCMsg_CmdKeyValues) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{15} }

func (m *CCLCMsg_CmdKeyValues) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type CSVCMsg_ServerInfo struct {
	Protocol            *int32                            `protobuf:"varint,1,opt,name=protocol" json:"protocol,omitempty"`
	ServerCount         *int32                            `protobuf:"varint,2,opt,name=server_count" json:"server_count,omitempty"`
	IsDedicated         *bool                             `protobuf:"varint,3,opt,name=is_dedicated" json:"is_dedicated,omitempty"`
	IsHltv              *bool                             `protobuf:"varint,4,opt,name=is_hltv" json:"is_hltv,omitempty"`
	IsReplay            *bool                             `protobuf:"varint,5,opt,name=is_replay" json:"is_replay,omitempty"`
	COs                 *int32                            `protobuf:"varint,6,opt,name=c_os" json:"c_os,omitempty"`
	MapCrc              *uint32                           `protobuf:"fixed32,7,opt,name=map_crc" json:"map_crc,omitempty"`
	ClientCrc           *uint32                           `protobuf:"fixed32,8,opt,name=client_crc" json:"client_crc,omitempty"`
	StringTableCrc      *uint32                           `protobuf:"fixed32,9,opt,name=string_table_crc" json:"string_table_crc,omitempty"`
	MaxClients          *int32                            `protobuf:"varint,10,opt,name=max_clients" json:"max_clients,omitempty"`
	MaxClasses          *int32                            `protobuf:"varint,11,opt,name=max_classes" json:"max_classes,omitempty"`
	PlayerSlot          *int32                            `protobuf:"varint,12,opt,name=player_slot" json:"player_slot,omitempty"`
	TickInterval        *float32                          `protobuf:"fixed32,13,opt,name=tick_interval" json:"tick_interval,omitempty"`
	GameDir             *string                           `protobuf:"bytes,14,opt,name=game_dir" json:"game_dir,omitempty"`
	MapName             *string                           `protobuf:"bytes,15,opt,name=map_name" json:"map_name,omitempty"`
	SkyName             *string                           `protobuf:"bytes,16,opt,name=sky_name" json:"sky_name,omitempty"`
	HostName            *string                           `protobuf:"bytes,17,opt,name=host_name" json:"host_name,omitempty"`
	AddonName           *string                           `protobuf:"bytes,18,opt,name=addon_name" json:"addon_name,omitempty"`
	GameSessionConfig   *CSVCMsg_GameSessionConfiguration `protobuf:"bytes,19,opt,name=game_session_config" json:"game_session_config,omitempty"`
	GameSessionManifest []byte                            `protobuf:"bytes,20,opt,name=game_session_manifest" json:"game_session_manifest,omitempty"`
	XXX_unrecognized    []byte                            `json:"-"`
}

func (m *CSVCMsg_ServerInfo) Reset()                    { *m = CSVCMsg_ServerInfo{} }
func (m *CSVCMsg_ServerInfo) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_ServerInfo) ProtoMessage()               {}
func (*CSVCMsg_ServerInfo) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{16} }

func (m *CSVCMsg_ServerInfo) GetProtocol() int32 {
	if m != nil && m.Protocol != nil {
		return *m.Protocol
	}
	return 0
}

func (m *CSVCMsg_ServerInfo) GetServerCount() int32 {
	if m != nil && m.ServerCount != nil {
		return *m.ServerCount
	}
	return 0
}

func (m *CSVCMsg_ServerInfo) GetIsDedicated() bool {
	if m != nil && m.IsDedicated != nil {
		return *m.IsDedicated
	}
	return false
}

func (m *CSVCMsg_ServerInfo) GetIsHltv() bool {
	if m != nil && m.IsHltv != nil {
		return *m.IsHltv
	}
	return false
}

func (m *CSVCMsg_ServerInfo) GetIsReplay() bool {
	if m != nil && m.IsReplay != nil {
		return *m.IsReplay
	}
	return false
}

func (m *CSVCMsg_ServerInfo) GetCOs() int32 {
	if m != nil && m.COs != nil {
		return *m.COs
	}
	return 0
}

func (m *CSVCMsg_ServerInfo) GetMapCrc() uint32 {
	if m != nil && m.MapCrc != nil {
		return *m.MapCrc
	}
	return 0
}

func (m *CSVCMsg_ServerInfo) GetClientCrc() uint32 {
	if m != nil && m.ClientCrc != nil {
		return *m.ClientCrc
	}
	return 0
}

func (m *CSVCMsg_ServerInfo) GetStringTableCrc() uint32 {
	if m != nil && m.StringTableCrc != nil {
		return *m.StringTableCrc
	}
	return 0
}

func (m *CSVCMsg_ServerInfo) GetMaxClients() int32 {
	if m != nil && m.MaxClients != nil {
		return *m.MaxClients
	}
	return 0
}

func (m *CSVCMsg_ServerInfo) GetMaxClasses() int32 {
	if m != nil && m.MaxClasses != nil {
		return *m.MaxClasses
	}
	return 0
}

func (m *CSVCMsg_ServerInfo) GetPlayerSlot() int32 {
	if m != nil && m.PlayerSlot != nil {
		return *m.PlayerSlot
	}
	return 0
}

func (m *CSVCMsg_ServerInfo) GetTickInterval() float32 {
	if m != nil && m.TickInterval != nil {
		return *m.TickInterval
	}
	return 0
}

func (m *CSVCMsg_ServerInfo) GetGameDir() string {
	if m != nil && m.GameDir != nil {
		return *m.GameDir
	}
	return ""
}

func (m *CSVCMsg_ServerInfo) GetMapName() string {
	if m != nil && m.MapName != nil {
		return *m.MapName
	}
	return ""
}

func (m *CSVCMsg_ServerInfo) GetSkyName() string {
	if m != nil && m.SkyName != nil {
		return *m.SkyName
	}
	return ""
}

func (m *CSVCMsg_ServerInfo) GetHostName() string {
	if m != nil && m.HostName != nil {
		return *m.HostName
	}
	return ""
}

func (m *CSVCMsg_ServerInfo) GetAddonName() string {
	if m != nil && m.AddonName != nil {
		return *m.AddonName
	}
	return ""
}

func (m *CSVCMsg_ServerInfo) GetGameSessionConfig() *CSVCMsg_GameSessionConfiguration {
	if m != nil {
		return m.GameSessionConfig
	}
	return nil
}

func (m *CSVCMsg_ServerInfo) GetGameSessionManifest() []byte {
	if m != nil {
		return m.GameSessionManifest
	}
	return nil
}

type CSVCMsg_ClassInfo struct {
	CreateOnClient   *bool                      `protobuf:"varint,1,opt,name=create_on_client" json:"create_on_client,omitempty"`
	Classes          []*CSVCMsg_ClassInfoClassT `protobuf:"bytes,2,rep,name=classes" json:"classes,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *CSVCMsg_ClassInfo) Reset()                    { *m = CSVCMsg_ClassInfo{} }
func (m *CSVCMsg_ClassInfo) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_ClassInfo) ProtoMessage()               {}
func (*CSVCMsg_ClassInfo) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{17} }

func (m *CSVCMsg_ClassInfo) GetCreateOnClient() bool {
	if m != nil && m.CreateOnClient != nil {
		return *m.CreateOnClient
	}
	return false
}

func (m *CSVCMsg_ClassInfo) GetClasses() []*CSVCMsg_ClassInfoClassT {
	if m != nil {
		return m.Classes
	}
	return nil
}

type CSVCMsg_ClassInfoClassT struct {
	ClassId          *int32  `protobuf:"varint,1,opt,name=class_id" json:"class_id,omitempty"`
	DataTableName    *string `protobuf:"bytes,2,opt,name=data_table_name" json:"data_table_name,omitempty"`
	ClassName        *string `protobuf:"bytes,3,opt,name=class_name" json:"class_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSVCMsg_ClassInfoClassT) Reset()                    { *m = CSVCMsg_ClassInfoClassT{} }
func (m *CSVCMsg_ClassInfoClassT) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_ClassInfoClassT) ProtoMessage()               {}
func (*CSVCMsg_ClassInfoClassT) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{17, 0} }

func (m *CSVCMsg_ClassInfoClassT) GetClassId() int32 {
	if m != nil && m.ClassId != nil {
		return *m.ClassId
	}
	return 0
}

func (m *CSVCMsg_ClassInfoClassT) GetDataTableName() string {
	if m != nil && m.DataTableName != nil {
		return *m.DataTableName
	}
	return ""
}

func (m *CSVCMsg_ClassInfoClassT) GetClassName() string {
	if m != nil && m.ClassName != nil {
		return *m.ClassName
	}
	return ""
}

type CSVCMsg_SetPause struct {
	Paused           *bool  `protobuf:"varint,1,opt,name=paused" json:"paused,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSVCMsg_SetPause) Reset()                    { *m = CSVCMsg_SetPause{} }
func (m *CSVCMsg_SetPause) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_SetPause) ProtoMessage()               {}
func (*CSVCMsg_SetPause) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{18} }

func (m *CSVCMsg_SetPause) GetPaused() bool {
	if m != nil && m.Paused != nil {
		return *m.Paused
	}
	return false
}

type CSVCMsg_VoiceInit struct {
	Quality          *int32  `protobuf:"varint,1,opt,name=quality" json:"quality,omitempty"`
	Codec            *string `protobuf:"bytes,2,opt,name=codec" json:"codec,omitempty"`
	Version          *int32  `protobuf:"varint,3,opt,name=version,def=0" json:"version,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSVCMsg_VoiceInit) Reset()                    { *m = CSVCMsg_VoiceInit{} }
func (m *CSVCMsg_VoiceInit) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_VoiceInit) ProtoMessage()               {}
func (*CSVCMsg_VoiceInit) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{19} }

const Default_CSVCMsg_VoiceInit_Version int32 = 0

func (m *CSVCMsg_VoiceInit) GetQuality() int32 {
	if m != nil && m.Quality != nil {
		return *m.Quality
	}
	return 0
}

func (m *CSVCMsg_VoiceInit) GetCodec() string {
	if m != nil && m.Codec != nil {
		return *m.Codec
	}
	return ""
}

func (m *CSVCMsg_VoiceInit) GetVersion() int32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return Default_CSVCMsg_VoiceInit_Version
}

type CSVCMsg_Print struct {
	Text             *string `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSVCMsg_Print) Reset()                    { *m = CSVCMsg_Print{} }
func (m *CSVCMsg_Print) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_Print) ProtoMessage()               {}
func (*CSVCMsg_Print) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{20} }

func (m *CSVCMsg_Print) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

type CSVCMsg_Sounds struct {
	ReliableSound    *bool                       `protobuf:"varint,1,opt,name=reliable_sound" json:"reliable_sound,omitempty"`
	Sounds           []*CSVCMsg_SoundsSounddataT `protobuf:"bytes,2,rep,name=sounds" json:"sounds,omitempty"`
	XXX_unrecognized []byte                      `json:"-"`
}

func (m *CSVCMsg_Sounds) Reset()                    { *m = CSVCMsg_Sounds{} }
func (m *CSVCMsg_Sounds) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_Sounds) ProtoMessage()               {}
func (*CSVCMsg_Sounds) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{21} }

func (m *CSVCMsg_Sounds) GetReliableSound() bool {
	if m != nil && m.ReliableSound != nil {
		return *m.ReliableSound
	}
	return false
}

func (m *CSVCMsg_Sounds) GetSounds() []*CSVCMsg_SoundsSounddataT {
	if m != nil {
		return m.Sounds
	}
	return nil
}

type CSVCMsg_SoundsSounddataT struct {
	OriginX          *int32   `protobuf:"zigzag32,1,opt,name=origin_x" json:"origin_x,omitempty"`
	OriginY          *int32   `protobuf:"zigzag32,2,opt,name=origin_y" json:"origin_y,omitempty"`
	OriginZ          *int32   `protobuf:"zigzag32,3,opt,name=origin_z" json:"origin_z,omitempty"`
	Volume           *uint32  `protobuf:"varint,4,opt,name=volume" json:"volume,omitempty"`
	DelayValue       *float32 `protobuf:"fixed32,5,opt,name=delay_value" json:"delay_value,omitempty"`
	SequenceNumber   *int32   `protobuf:"varint,6,opt,name=sequence_number" json:"sequence_number,omitempty"`
	EntityIndex      *int32   `protobuf:"varint,7,opt,name=entity_index" json:"entity_index,omitempty"`
	Channel          *int32   `protobuf:"varint,8,opt,name=channel" json:"channel,omitempty"`
	Pitch            *int32   `protobuf:"varint,9,opt,name=pitch" json:"pitch,omitempty"`
	Flags            *int32   `protobuf:"varint,10,opt,name=flags" json:"flags,omitempty"`
	SoundNum         *uint32  `protobuf:"varint,11,opt,name=sound_num" json:"sound_num,omitempty"`
	SoundNumHandle   *uint32  `protobuf:"fixed32,12,opt,name=sound_num_handle" json:"sound_num_handle,omitempty"`
	SpeakerEntity    *int32   `protobuf:"varint,13,opt,name=speaker_entity" json:"speaker_entity,omitempty"`
	RandomSeed       *int32   `protobuf:"varint,14,opt,name=random_seed" json:"random_seed,omitempty"`
	SoundLevel       *int32   `protobuf:"varint,15,opt,name=sound_level" json:"sound_level,omitempty"`
	IsSentence       *bool    `protobuf:"varint,16,opt,name=is_sentence" json:"is_sentence,omitempty"`
	IsAmbient        *bool    `protobuf:"varint,17,opt,name=is_ambient" json:"is_ambient,omitempty"`
	Guid             *uint32  `protobuf:"varint,18,opt,name=guid" json:"guid,omitempty"`
	SoundResourceId  *uint64  `protobuf:"fixed64,19,opt,name=sound_resource_id" json:"sound_resource_id,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CSVCMsg_SoundsSounddataT) Reset()                    { *m = CSVCMsg_SoundsSounddataT{} }
func (m *CSVCMsg_SoundsSounddataT) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_SoundsSounddataT) ProtoMessage()               {}
func (*CSVCMsg_SoundsSounddataT) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{21, 0} }

func (m *CSVCMsg_SoundsSounddataT) GetOriginX() int32 {
	if m != nil && m.OriginX != nil {
		return *m.OriginX
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetOriginY() int32 {
	if m != nil && m.OriginY != nil {
		return *m.OriginY
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetOriginZ() int32 {
	if m != nil && m.OriginZ != nil {
		return *m.OriginZ
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetVolume() uint32 {
	if m != nil && m.Volume != nil {
		return *m.Volume
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetDelayValue() float32 {
	if m != nil && m.DelayValue != nil {
		return *m.DelayValue
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetSequenceNumber() int32 {
	if m != nil && m.SequenceNumber != nil {
		return *m.SequenceNumber
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetEntityIndex() int32 {
	if m != nil && m.EntityIndex != nil {
		return *m.EntityIndex
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetChannel() int32 {
	if m != nil && m.Channel != nil {
		return *m.Channel
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetPitch() int32 {
	if m != nil && m.Pitch != nil {
		return *m.Pitch
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetFlags() int32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetSoundNum() uint32 {
	if m != nil && m.SoundNum != nil {
		return *m.SoundNum
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetSoundNumHandle() uint32 {
	if m != nil && m.SoundNumHandle != nil {
		return *m.SoundNumHandle
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetSpeakerEntity() int32 {
	if m != nil && m.SpeakerEntity != nil {
		return *m.SpeakerEntity
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetRandomSeed() int32 {
	if m != nil && m.RandomSeed != nil {
		return *m.RandomSeed
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetSoundLevel() int32 {
	if m != nil && m.SoundLevel != nil {
		return *m.SoundLevel
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetIsSentence() bool {
	if m != nil && m.IsSentence != nil {
		return *m.IsSentence
	}
	return false
}

func (m *CSVCMsg_SoundsSounddataT) GetIsAmbient() bool {
	if m != nil && m.IsAmbient != nil {
		return *m.IsAmbient
	}
	return false
}

func (m *CSVCMsg_SoundsSounddataT) GetGuid() uint32 {
	if m != nil && m.Guid != nil {
		return *m.Guid
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetSoundResourceId() uint64 {
	if m != nil && m.SoundResourceId != nil {
		return *m.SoundResourceId
	}
	return 0
}

type CSVCMsg_Prefetch struct {
	SoundIndex       *int32        `protobuf:"varint,1,opt,name=sound_index" json:"sound_index,omitempty"`
	ResourceType     *PrefetchType `protobuf:"varint,2,opt,name=resource_type,enum=dota.PrefetchType,def=0" json:"resource_type,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *CSVCMsg_Prefetch) Reset()                    { *m = CSVCMsg_Prefetch{} }
func (m *CSVCMsg_Prefetch) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_Prefetch) ProtoMessage()               {}
func (*CSVCMsg_Prefetch) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{22} }

const Default_CSVCMsg_Prefetch_ResourceType PrefetchType = PrefetchType_PFT_SOUND

func (m *CSVCMsg_Prefetch) GetSoundIndex() int32 {
	if m != nil && m.SoundIndex != nil {
		return *m.SoundIndex
	}
	return 0
}

func (m *CSVCMsg_Prefetch) GetResourceType() PrefetchType {
	if m != nil && m.ResourceType != nil {
		return *m.ResourceType
	}
	return Default_CSVCMsg_Prefetch_ResourceType
}

type CSVCMsg_SetView struct {
	EntityIndex      *int32 `protobuf:"varint,1,opt,name=entity_index" json:"entity_index,omitempty"`
	Slot             *int32 `protobuf:"varint,2,opt,name=slot" json:"slot,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSVCMsg_SetView) Reset()                    { *m = CSVCMsg_SetView{} }
func (m *CSVCMsg_SetView) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_SetView) ProtoMessage()               {}
func (*CSVCMsg_SetView) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{23} }

func (m *CSVCMsg_SetView) GetEntityIndex() int32 {
	if m != nil && m.EntityIndex != nil {
		return *m.EntityIndex
	}
	return 0
}

func (m *CSVCMsg_SetView) GetSlot() int32 {
	if m != nil && m.Slot != nil {
		return *m.Slot
	}
	return 0
}

type CSVCMsg_FixAngle struct {
	Relative         *bool       `protobuf:"varint,1,opt,name=relative" json:"relative,omitempty"`
	Angle            *CMsgQAngle `protobuf:"bytes,2,opt,name=angle" json:"angle,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *CSVCMsg_FixAngle) Reset()                    { *m = CSVCMsg_FixAngle{} }
func (m *CSVCMsg_FixAngle) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_FixAngle) ProtoMessage()               {}
func (*CSVCMsg_FixAngle) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{24} }

func (m *CSVCMsg_FixAngle) GetRelative() bool {
	if m != nil && m.Relative != nil {
		return *m.Relative
	}
	return false
}

func (m *CSVCMsg_FixAngle) GetAngle() *CMsgQAngle {
	if m != nil {
		return m.Angle
	}
	return nil
}

type CSVCMsg_CrosshairAngle struct {
	Angle            *CMsgQAngle `protobuf:"bytes,1,opt,name=angle" json:"angle,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *CSVCMsg_CrosshairAngle) Reset()                    { *m = CSVCMsg_CrosshairAngle{} }
func (m *CSVCMsg_CrosshairAngle) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_CrosshairAngle) ProtoMessage()               {}
func (*CSVCMsg_CrosshairAngle) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{25} }

func (m *CSVCMsg_CrosshairAngle) GetAngle() *CMsgQAngle {
	if m != nil {
		return m.Angle
	}
	return nil
}

type CSVCMsg_BSPDecal struct {
	Pos               *CMsgVector `protobuf:"bytes,1,opt,name=pos" json:"pos,omitempty"`
	DecalTextureIndex *int32      `protobuf:"varint,2,opt,name=decal_texture_index" json:"decal_texture_index,omitempty"`
	EntityIndex       *int32      `protobuf:"varint,3,opt,name=entity_index" json:"entity_index,omitempty"`
	ModelIndex        *int32      `protobuf:"varint,4,opt,name=model_index" json:"model_index,omitempty"`
	LowPriority       *bool       `protobuf:"varint,5,opt,name=low_priority" json:"low_priority,omitempty"`
	XXX_unrecognized  []byte      `json:"-"`
}

func (m *CSVCMsg_BSPDecal) Reset()                    { *m = CSVCMsg_BSPDecal{} }
func (m *CSVCMsg_BSPDecal) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_BSPDecal) ProtoMessage()               {}
func (*CSVCMsg_BSPDecal) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{26} }

func (m *CSVCMsg_BSPDecal) GetPos() *CMsgVector {
	if m != nil {
		return m.Pos
	}
	return nil
}

func (m *CSVCMsg_BSPDecal) GetDecalTextureIndex() int32 {
	if m != nil && m.DecalTextureIndex != nil {
		return *m.DecalTextureIndex
	}
	return 0
}

func (m *CSVCMsg_BSPDecal) GetEntityIndex() int32 {
	if m != nil && m.EntityIndex != nil {
		return *m.EntityIndex
	}
	return 0
}

func (m *CSVCMsg_BSPDecal) GetModelIndex() int32 {
	if m != nil && m.ModelIndex != nil {
		return *m.ModelIndex
	}
	return 0
}

func (m *CSVCMsg_BSPDecal) GetLowPriority() bool {
	if m != nil && m.LowPriority != nil {
		return *m.LowPriority
	}
	return false
}

type CSVCMsg_SplitScreen struct {
	Type             *ESplitScreenMessageType `protobuf:"varint,1,opt,name=type,enum=dota.ESplitScreenMessageType,def=0" json:"type,omitempty"`
	Slot             *int32                   `protobuf:"varint,2,opt,name=slot" json:"slot,omitempty"`
	PlayerIndex      *int32                   `protobuf:"varint,3,opt,name=player_index" json:"player_index,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *CSVCMsg_SplitScreen) Reset()                    { *m = CSVCMsg_SplitScreen{} }
func (m *CSVCMsg_SplitScreen) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_SplitScreen) ProtoMessage()               {}
func (*CSVCMsg_SplitScreen) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{27} }

const Default_CSVCMsg_SplitScreen_Type ESplitScreenMessageType = ESplitScreenMessageType_MSG_SPLITSCREEN_ADDUSER

func (m *CSVCMsg_SplitScreen) GetType() ESplitScreenMessageType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_CSVCMsg_SplitScreen_Type
}

func (m *CSVCMsg_SplitScreen) GetSlot() int32 {
	if m != nil && m.Slot != nil {
		return *m.Slot
	}
	return 0
}

func (m *CSVCMsg_SplitScreen) GetPlayerIndex() int32 {
	if m != nil && m.PlayerIndex != nil {
		return *m.PlayerIndex
	}
	return 0
}

type CSVCMsg_GetCvarValue struct {
	Cookie           *int32  `protobuf:"varint,1,opt,name=cookie" json:"cookie,omitempty"`
	CvarName         *string `protobuf:"bytes,2,opt,name=cvar_name" json:"cvar_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSVCMsg_GetCvarValue) Reset()                    { *m = CSVCMsg_GetCvarValue{} }
func (m *CSVCMsg_GetCvarValue) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_GetCvarValue) ProtoMessage()               {}
func (*CSVCMsg_GetCvarValue) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{28} }

func (m *CSVCMsg_GetCvarValue) GetCookie() int32 {
	if m != nil && m.Cookie != nil {
		return *m.Cookie
	}
	return 0
}

func (m *CSVCMsg_GetCvarValue) GetCvarName() string {
	if m != nil && m.CvarName != nil {
		return *m.CvarName
	}
	return ""
}

type CSVCMsg_Menu struct {
	DialogType       *int32 `protobuf:"varint,1,opt,name=dialog_type" json:"dialog_type,omitempty"`
	MenuKeyValues    []byte `protobuf:"bytes,2,opt,name=menu_key_values" json:"menu_key_values,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSVCMsg_Menu) Reset()                    { *m = CSVCMsg_Menu{} }
func (m *CSVCMsg_Menu) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_Menu) ProtoMessage()               {}
func (*CSVCMsg_Menu) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{29} }

func (m *CSVCMsg_Menu) GetDialogType() int32 {
	if m != nil && m.DialogType != nil {
		return *m.DialogType
	}
	return 0
}

func (m *CSVCMsg_Menu) GetMenuKeyValues() []byte {
	if m != nil {
		return m.MenuKeyValues
	}
	return nil
}

type CSVCMsg_SendTable struct {
	IsEnd            *bool                         `protobuf:"varint,1,opt,name=is_end" json:"is_end,omitempty"`
	NetTableName     *string                       `protobuf:"bytes,2,opt,name=net_table_name" json:"net_table_name,omitempty"`
	NeedsDecoder     *bool                         `protobuf:"varint,3,opt,name=needs_decoder" json:"needs_decoder,omitempty"`
	Props            []*CSVCMsg_SendTableSendpropT `protobuf:"bytes,4,rep,name=props" json:"props,omitempty"`
	XXX_unrecognized []byte                        `json:"-"`
}

func (m *CSVCMsg_SendTable) Reset()                    { *m = CSVCMsg_SendTable{} }
func (m *CSVCMsg_SendTable) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_SendTable) ProtoMessage()               {}
func (*CSVCMsg_SendTable) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{30} }

func (m *CSVCMsg_SendTable) GetIsEnd() bool {
	if m != nil && m.IsEnd != nil {
		return *m.IsEnd
	}
	return false
}

func (m *CSVCMsg_SendTable) GetNetTableName() string {
	if m != nil && m.NetTableName != nil {
		return *m.NetTableName
	}
	return ""
}

func (m *CSVCMsg_SendTable) GetNeedsDecoder() bool {
	if m != nil && m.NeedsDecoder != nil {
		return *m.NeedsDecoder
	}
	return false
}

func (m *CSVCMsg_SendTable) GetProps() []*CSVCMsg_SendTableSendpropT {
	if m != nil {
		return m.Props
	}
	return nil
}

type CSVCMsg_SendTableSendpropT struct {
	Type             *int32   `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	VarName          *string  `protobuf:"bytes,2,opt,name=var_name" json:"var_name,omitempty"`
	Flags            *int32   `protobuf:"varint,3,opt,name=flags" json:"flags,omitempty"`
	Priority         *int32   `protobuf:"varint,4,opt,name=priority" json:"priority,omitempty"`
	DtName           *string  `protobuf:"bytes,5,opt,name=dt_name" json:"dt_name,omitempty"`
	NumElements      *int32   `protobuf:"varint,6,opt,name=num_elements" json:"num_elements,omitempty"`
	LowValue         *float32 `protobuf:"fixed32,7,opt,name=low_value" json:"low_value,omitempty"`
	HighValue        *float32 `protobuf:"fixed32,8,opt,name=high_value" json:"high_value,omitempty"`
	NumBits          *int32   `protobuf:"varint,9,opt,name=num_bits" json:"num_bits,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CSVCMsg_SendTableSendpropT) Reset()                    { *m = CSVCMsg_SendTableSendpropT{} }
func (m *CSVCMsg_SendTableSendpropT) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_SendTableSendpropT) ProtoMessage()               {}
func (*CSVCMsg_SendTableSendpropT) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{30, 0} }

func (m *CSVCMsg_SendTableSendpropT) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *CSVCMsg_SendTableSendpropT) GetVarName() string {
	if m != nil && m.VarName != nil {
		return *m.VarName
	}
	return ""
}

func (m *CSVCMsg_SendTableSendpropT) GetFlags() int32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *CSVCMsg_SendTableSendpropT) GetPriority() int32 {
	if m != nil && m.Priority != nil {
		return *m.Priority
	}
	return 0
}

func (m *CSVCMsg_SendTableSendpropT) GetDtName() string {
	if m != nil && m.DtName != nil {
		return *m.DtName
	}
	return ""
}

func (m *CSVCMsg_SendTableSendpropT) GetNumElements() int32 {
	if m != nil && m.NumElements != nil {
		return *m.NumElements
	}
	return 0
}

func (m *CSVCMsg_SendTableSendpropT) GetLowValue() float32 {
	if m != nil && m.LowValue != nil {
		return *m.LowValue
	}
	return 0
}

func (m *CSVCMsg_SendTableSendpropT) GetHighValue() float32 {
	if m != nil && m.HighValue != nil {
		return *m.HighValue
	}
	return 0
}

func (m *CSVCMsg_SendTableSendpropT) GetNumBits() int32 {
	if m != nil && m.NumBits != nil {
		return *m.NumBits
	}
	return 0
}

type CSVCMsg_GameEventList struct {
	Descriptors      []*CSVCMsg_GameEventListDescriptorT `protobuf:"bytes,1,rep,name=descriptors" json:"descriptors,omitempty"`
	XXX_unrecognized []byte                              `json:"-"`
}

func (m *CSVCMsg_GameEventList) Reset()                    { *m = CSVCMsg_GameEventList{} }
func (m *CSVCMsg_GameEventList) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_GameEventList) ProtoMessage()               {}
func (*CSVCMsg_GameEventList) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{31} }

func (m *CSVCMsg_GameEventList) GetDescriptors() []*CSVCMsg_GameEventListDescriptorT {
	if m != nil {
		return m.Descriptors
	}
	return nil
}

type CSVCMsg_GameEventListKeyT struct {
	Type             *int32  `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Name             *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSVCMsg_GameEventListKeyT) Reset()                    { *m = CSVCMsg_GameEventListKeyT{} }
func (m *CSVCMsg_GameEventListKeyT) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_GameEventListKeyT) ProtoMessage()               {}
func (*CSVCMsg_GameEventListKeyT) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{31, 0} }

func (m *CSVCMsg_GameEventListKeyT) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *CSVCMsg_GameEventListKeyT) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type CSVCMsg_GameEventListDescriptorT struct {
	Eventid          *int32                       `protobuf:"varint,1,opt,name=eventid" json:"eventid,omitempty"`
	Name             *string                      `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Keys             []*CSVCMsg_GameEventListKeyT `protobuf:"bytes,3,rep,name=keys" json:"keys,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *CSVCMsg_GameEventListDescriptorT) Reset()         { *m = CSVCMsg_GameEventListDescriptorT{} }
func (m *CSVCMsg_GameEventListDescriptorT) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_GameEventListDescriptorT) ProtoMessage()    {}
func (*CSVCMsg_GameEventListDescriptorT) Descriptor() ([]byte, []int) {
	return fileDescriptor30, []int{31, 1}
}

func (m *CSVCMsg_GameEventListDescriptorT) GetEventid() int32 {
	if m != nil && m.Eventid != nil {
		return *m.Eventid
	}
	return 0
}

func (m *CSVCMsg_GameEventListDescriptorT) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CSVCMsg_GameEventListDescriptorT) GetKeys() []*CSVCMsg_GameEventListKeyT {
	if m != nil {
		return m.Keys
	}
	return nil
}

type CSVCMsg_PacketEntities struct {
	MaxEntries                    *int32  `protobuf:"varint,1,opt,name=max_entries" json:"max_entries,omitempty"`
	UpdatedEntries                *int32  `protobuf:"varint,2,opt,name=updated_entries" json:"updated_entries,omitempty"`
	IsDelta                       *bool   `protobuf:"varint,3,opt,name=is_delta" json:"is_delta,omitempty"`
	UpdateBaseline                *bool   `protobuf:"varint,4,opt,name=update_baseline" json:"update_baseline,omitempty"`
	Baseline                      *int32  `protobuf:"varint,5,opt,name=baseline" json:"baseline,omitempty"`
	DeltaFrom                     *int32  `protobuf:"varint,6,opt,name=delta_from" json:"delta_from,omitempty"`
	EntityData                    []byte  `protobuf:"bytes,7,opt,name=entity_data" json:"entity_data,omitempty"`
	PendingFullFrame              *bool   `protobuf:"varint,8,opt,name=pending_full_frame" json:"pending_full_frame,omitempty"`
	ActiveSpawngroupHandle        *uint32 `protobuf:"varint,9,opt,name=active_spawngroup_handle" json:"active_spawngroup_handle,omitempty"`
	MaxSpawngroupCreationsequence *uint32 `protobuf:"varint,10,opt,name=max_spawngroup_creationsequence" json:"max_spawngroup_creationsequence,omitempty"`
	XXX_unrecognized              []byte  `json:"-"`
}

func (m *CSVCMsg_PacketEntities) Reset()                    { *m = CSVCMsg_PacketEntities{} }
func (m *CSVCMsg_PacketEntities) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_PacketEntities) ProtoMessage()               {}
func (*CSVCMsg_PacketEntities) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{32} }

func (m *CSVCMsg_PacketEntities) GetMaxEntries() int32 {
	if m != nil && m.MaxEntries != nil {
		return *m.MaxEntries
	}
	return 0
}

func (m *CSVCMsg_PacketEntities) GetUpdatedEntries() int32 {
	if m != nil && m.UpdatedEntries != nil {
		return *m.UpdatedEntries
	}
	return 0
}

func (m *CSVCMsg_PacketEntities) GetIsDelta() bool {
	if m != nil && m.IsDelta != nil {
		return *m.IsDelta
	}
	return false
}

func (m *CSVCMsg_PacketEntities) GetUpdateBaseline() bool {
	if m != nil && m.UpdateBaseline != nil {
		return *m.UpdateBaseline
	}
	return false
}

func (m *CSVCMsg_PacketEntities) GetBaseline() int32 {
	if m != nil && m.Baseline != nil {
		return *m.Baseline
	}
	return 0
}

func (m *CSVCMsg_PacketEntities) GetDeltaFrom() int32 {
	if m != nil && m.DeltaFrom != nil {
		return *m.DeltaFrom
	}
	return 0
}

func (m *CSVCMsg_PacketEntities) GetEntityData() []byte {
	if m != nil {
		return m.EntityData
	}
	return nil
}

func (m *CSVCMsg_PacketEntities) GetPendingFullFrame() bool {
	if m != nil && m.PendingFullFrame != nil {
		return *m.PendingFullFrame
	}
	return false
}

func (m *CSVCMsg_PacketEntities) GetActiveSpawngroupHandle() uint32 {
	if m != nil && m.ActiveSpawngroupHandle != nil {
		return *m.ActiveSpawngroupHandle
	}
	return 0
}

func (m *CSVCMsg_PacketEntities) GetMaxSpawngroupCreationsequence() uint32 {
	if m != nil && m.MaxSpawngroupCreationsequence != nil {
		return *m.MaxSpawngroupCreationsequence
	}
	return 0
}

type CSVCMsg_TempEntities struct {
	Reliable         *bool  `protobuf:"varint,1,opt,name=reliable" json:"reliable,omitempty"`
	NumEntries       *int32 `protobuf:"varint,2,opt,name=num_entries" json:"num_entries,omitempty"`
	EntityData       []byte `protobuf:"bytes,3,opt,name=entity_data" json:"entity_data,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSVCMsg_TempEntities) Reset()                    { *m = CSVCMsg_TempEntities{} }
func (m *CSVCMsg_TempEntities) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_TempEntities) ProtoMessage()               {}
func (*CSVCMsg_TempEntities) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{33} }

func (m *CSVCMsg_TempEntities) GetReliable() bool {
	if m != nil && m.Reliable != nil {
		return *m.Reliable
	}
	return false
}

func (m *CSVCMsg_TempEntities) GetNumEntries() int32 {
	if m != nil && m.NumEntries != nil {
		return *m.NumEntries
	}
	return 0
}

func (m *CSVCMsg_TempEntities) GetEntityData() []byte {
	if m != nil {
		return m.EntityData
	}
	return nil
}

type CSVCMsg_CreateStringTable struct {
	Name              *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	NumEntries        *int32  `protobuf:"varint,2,opt,name=num_entries" json:"num_entries,omitempty"`
	UserDataFixedSize *bool   `protobuf:"varint,3,opt,name=user_data_fixed_size" json:"user_data_fixed_size,omitempty"`
	UserDataSize      *int32  `protobuf:"varint,4,opt,name=user_data_size" json:"user_data_size,omitempty"`
	UserDataSizeBits  *int32  `protobuf:"varint,5,opt,name=user_data_size_bits" json:"user_data_size_bits,omitempty"`
	Flags             *int32  `protobuf:"varint,6,opt,name=flags" json:"flags,omitempty"`
	StringData        []byte  `protobuf:"bytes,7,opt,name=string_data" json:"string_data,omitempty"`
	UncompressedSize  *int32  `protobuf:"varint,8,opt,name=uncompressed_size" json:"uncompressed_size,omitempty"`
	DataCompressed    *bool   `protobuf:"varint,9,opt,name=data_compressed" json:"data_compressed,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *CSVCMsg_CreateStringTable) Reset()                    { *m = CSVCMsg_CreateStringTable{} }
func (m *CSVCMsg_CreateStringTable) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_CreateStringTable) ProtoMessage()               {}
func (*CSVCMsg_CreateStringTable) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{34} }

func (m *CSVCMsg_CreateStringTable) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CSVCMsg_CreateStringTable) GetNumEntries() int32 {
	if m != nil && m.NumEntries != nil {
		return *m.NumEntries
	}
	return 0
}

func (m *CSVCMsg_CreateStringTable) GetUserDataFixedSize() bool {
	if m != nil && m.UserDataFixedSize != nil {
		return *m.UserDataFixedSize
	}
	return false
}

func (m *CSVCMsg_CreateStringTable) GetUserDataSize() int32 {
	if m != nil && m.UserDataSize != nil {
		return *m.UserDataSize
	}
	return 0
}

func (m *CSVCMsg_CreateStringTable) GetUserDataSizeBits() int32 {
	if m != nil && m.UserDataSizeBits != nil {
		return *m.UserDataSizeBits
	}
	return 0
}

func (m *CSVCMsg_CreateStringTable) GetFlags() int32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *CSVCMsg_CreateStringTable) GetStringData() []byte {
	if m != nil {
		return m.StringData
	}
	return nil
}

func (m *CSVCMsg_CreateStringTable) GetUncompressedSize() int32 {
	if m != nil && m.UncompressedSize != nil {
		return *m.UncompressedSize
	}
	return 0
}

func (m *CSVCMsg_CreateStringTable) GetDataCompressed() bool {
	if m != nil && m.DataCompressed != nil {
		return *m.DataCompressed
	}
	return false
}

type CSVCMsg_UpdateStringTable struct {
	TableId           *int32 `protobuf:"varint,1,opt,name=table_id" json:"table_id,omitempty"`
	NumChangedEntries *int32 `protobuf:"varint,2,opt,name=num_changed_entries" json:"num_changed_entries,omitempty"`
	StringData        []byte `protobuf:"bytes,3,opt,name=string_data" json:"string_data,omitempty"`
	XXX_unrecognized  []byte `json:"-"`
}

func (m *CSVCMsg_UpdateStringTable) Reset()                    { *m = CSVCMsg_UpdateStringTable{} }
func (m *CSVCMsg_UpdateStringTable) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_UpdateStringTable) ProtoMessage()               {}
func (*CSVCMsg_UpdateStringTable) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{35} }

func (m *CSVCMsg_UpdateStringTable) GetTableId() int32 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *CSVCMsg_UpdateStringTable) GetNumChangedEntries() int32 {
	if m != nil && m.NumChangedEntries != nil {
		return *m.NumChangedEntries
	}
	return 0
}

func (m *CSVCMsg_UpdateStringTable) GetStringData() []byte {
	if m != nil {
		return m.StringData
	}
	return nil
}

type CSVCMsg_VoiceData struct {
	Audio            *CMsgVoiceAudio `protobuf:"bytes,1,opt,name=audio" json:"audio,omitempty"`
	Client           *int32          `protobuf:"varint,2,opt,name=client" json:"client,omitempty"`
	Proximity        *bool           `protobuf:"varint,3,opt,name=proximity" json:"proximity,omitempty"`
	Xuid             *uint64         `protobuf:"fixed64,4,opt,name=xuid" json:"xuid,omitempty"`
	AudibleMask      *int32          `protobuf:"varint,5,opt,name=audible_mask" json:"audible_mask,omitempty"`
	Tick             *uint32         `protobuf:"varint,6,opt,name=tick" json:"tick,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *CSVCMsg_VoiceData) Reset()                    { *m = CSVCMsg_VoiceData{} }
func (m *CSVCMsg_VoiceData) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_VoiceData) ProtoMessage()               {}
func (*CSVCMsg_VoiceData) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{36} }

func (m *CSVCMsg_VoiceData) GetAudio() *CMsgVoiceAudio {
	if m != nil {
		return m.Audio
	}
	return nil
}

func (m *CSVCMsg_VoiceData) GetClient() int32 {
	if m != nil && m.Client != nil {
		return *m.Client
	}
	return 0
}

func (m *CSVCMsg_VoiceData) GetProximity() bool {
	if m != nil && m.Proximity != nil {
		return *m.Proximity
	}
	return false
}

func (m *CSVCMsg_VoiceData) GetXuid() uint64 {
	if m != nil && m.Xuid != nil {
		return *m.Xuid
	}
	return 0
}

func (m *CSVCMsg_VoiceData) GetAudibleMask() int32 {
	if m != nil && m.AudibleMask != nil {
		return *m.AudibleMask
	}
	return 0
}

func (m *CSVCMsg_VoiceData) GetTick() uint32 {
	if m != nil && m.Tick != nil {
		return *m.Tick
	}
	return 0
}

type CSVCMsg_PacketReliable struct {
	Tick             *int32 `protobuf:"varint,1,opt,name=tick" json:"tick,omitempty"`
	Messagessize     *int32 `protobuf:"varint,2,opt,name=messagessize" json:"messagessize,omitempty"`
	State            *bool  `protobuf:"varint,3,opt,name=state" json:"state,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSVCMsg_PacketReliable) Reset()                    { *m = CSVCMsg_PacketReliable{} }
func (m *CSVCMsg_PacketReliable) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_PacketReliable) ProtoMessage()               {}
func (*CSVCMsg_PacketReliable) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{37} }

func (m *CSVCMsg_PacketReliable) GetTick() int32 {
	if m != nil && m.Tick != nil {
		return *m.Tick
	}
	return 0
}

func (m *CSVCMsg_PacketReliable) GetMessagessize() int32 {
	if m != nil && m.Messagessize != nil {
		return *m.Messagessize
	}
	return 0
}

func (m *CSVCMsg_PacketReliable) GetState() bool {
	if m != nil && m.State != nil {
		return *m.State
	}
	return false
}

type CSVCMsg_FullFrameSplit struct {
	Tick             *int32 `protobuf:"varint,1,opt,name=tick" json:"tick,omitempty"`
	Section          *int32 `protobuf:"varint,2,opt,name=section" json:"section,omitempty"`
	Total            *int32 `protobuf:"varint,3,opt,name=total" json:"total,omitempty"`
	Data             []byte `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSVCMsg_FullFrameSplit) Reset()                    { *m = CSVCMsg_FullFrameSplit{} }
func (m *CSVCMsg_FullFrameSplit) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_FullFrameSplit) ProtoMessage()               {}
func (*CSVCMsg_FullFrameSplit) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{38} }

func (m *CSVCMsg_FullFrameSplit) GetTick() int32 {
	if m != nil && m.Tick != nil {
		return *m.Tick
	}
	return 0
}

func (m *CSVCMsg_FullFrameSplit) GetSection() int32 {
	if m != nil && m.Section != nil {
		return *m.Section
	}
	return 0
}

func (m *CSVCMsg_FullFrameSplit) GetTotal() int32 {
	if m != nil && m.Total != nil {
		return *m.Total
	}
	return 0
}

func (m *CSVCMsg_FullFrameSplit) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type CSVCMsg_HLTVStatus struct {
	Master           *string `protobuf:"bytes,1,opt,name=master" json:"master,omitempty"`
	Clients          *int32  `protobuf:"varint,2,opt,name=clients" json:"clients,omitempty"`
	Slots            *int32  `protobuf:"varint,3,opt,name=slots" json:"slots,omitempty"`
	Proxies          *int32  `protobuf:"varint,4,opt,name=proxies" json:"proxies,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSVCMsg_HLTVStatus) Reset()                    { *m = CSVCMsg_HLTVStatus{} }
func (m *CSVCMsg_HLTVStatus) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_HLTVStatus) ProtoMessage()               {}
func (*CSVCMsg_HLTVStatus) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{39} }

func (m *CSVCMsg_HLTVStatus) GetMaster() string {
	if m != nil && m.Master != nil {
		return *m.Master
	}
	return ""
}

func (m *CSVCMsg_HLTVStatus) GetClients() int32 {
	if m != nil && m.Clients != nil {
		return *m.Clients
	}
	return 0
}

func (m *CSVCMsg_HLTVStatus) GetSlots() int32 {
	if m != nil && m.Slots != nil {
		return *m.Slots
	}
	return 0
}

func (m *CSVCMsg_HLTVStatus) GetProxies() int32 {
	if m != nil && m.Proxies != nil {
		return *m.Proxies
	}
	return 0
}

type CSVCMsg_ServerSteamID struct {
	SteamId          *uint64 `protobuf:"varint,1,opt,name=steam_id" json:"steam_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSVCMsg_ServerSteamID) Reset()                    { *m = CSVCMsg_ServerSteamID{} }
func (m *CSVCMsg_ServerSteamID) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_ServerSteamID) ProtoMessage()               {}
func (*CSVCMsg_ServerSteamID) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{40} }

func (m *CSVCMsg_ServerSteamID) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

type CSVCMsg_CmdKeyValues struct {
	Data             []byte `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSVCMsg_CmdKeyValues) Reset()                    { *m = CSVCMsg_CmdKeyValues{} }
func (m *CSVCMsg_CmdKeyValues) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_CmdKeyValues) ProtoMessage()               {}
func (*CSVCMsg_CmdKeyValues) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{41} }

func (m *CSVCMsg_CmdKeyValues) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type CMsgIPCAddress struct {
	ComputerGuid     *uint64 `protobuf:"fixed64,1,opt,name=computer_guid" json:"computer_guid,omitempty"`
	ProcessId        *uint32 `protobuf:"varint,2,opt,name=process_id" json:"process_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgIPCAddress) Reset()                    { *m = CMsgIPCAddress{} }
func (m *CMsgIPCAddress) String() string            { return proto.CompactTextString(m) }
func (*CMsgIPCAddress) ProtoMessage()               {}
func (*CMsgIPCAddress) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{42} }

func (m *CMsgIPCAddress) GetComputerGuid() uint64 {
	if m != nil && m.ComputerGuid != nil {
		return *m.ComputerGuid
	}
	return 0
}

func (m *CMsgIPCAddress) GetProcessId() uint32 {
	if m != nil && m.ProcessId != nil {
		return *m.ProcessId
	}
	return 0
}

type CMsgServerPeer struct {
	PlayerSlot         *int32          `protobuf:"varint,1,opt,name=player_slot" json:"player_slot,omitempty"`
	Steamid            *uint64         `protobuf:"fixed64,2,opt,name=steamid" json:"steamid,omitempty"`
	Ipc                *CMsgIPCAddress `protobuf:"bytes,3,opt,name=ipc" json:"ipc,omitempty"`
	TheyHearYou        *bool           `protobuf:"varint,4,opt,name=they_hear_you" json:"they_hear_you,omitempty"`
	YouHearThem        *bool           `protobuf:"varint,5,opt,name=you_hear_them" json:"you_hear_them,omitempty"`
	IsListenserverHost *bool           `protobuf:"varint,6,opt,name=is_listenserver_host" json:"is_listenserver_host,omitempty"`
	XXX_unrecognized   []byte          `json:"-"`
}

func (m *CMsgServerPeer) Reset()                    { *m = CMsgServerPeer{} }
func (m *CMsgServerPeer) String() string            { return proto.CompactTextString(m) }
func (*CMsgServerPeer) ProtoMessage()               {}
func (*CMsgServerPeer) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{43} }

func (m *CMsgServerPeer) GetPlayerSlot() int32 {
	if m != nil && m.PlayerSlot != nil {
		return *m.PlayerSlot
	}
	return 0
}

func (m *CMsgServerPeer) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

func (m *CMsgServerPeer) GetIpc() *CMsgIPCAddress {
	if m != nil {
		return m.Ipc
	}
	return nil
}

func (m *CMsgServerPeer) GetTheyHearYou() bool {
	if m != nil && m.TheyHearYou != nil {
		return *m.TheyHearYou
	}
	return false
}

func (m *CMsgServerPeer) GetYouHearThem() bool {
	if m != nil && m.YouHearThem != nil {
		return *m.YouHearThem
	}
	return false
}

func (m *CMsgServerPeer) GetIsListenserverHost() bool {
	if m != nil && m.IsListenserverHost != nil {
		return *m.IsListenserverHost
	}
	return false
}

type CSVCMsg_PeerList struct {
	Peer             []*CMsgServerPeer `protobuf:"bytes,1,rep,name=peer" json:"peer,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *CSVCMsg_PeerList) Reset()                    { *m = CSVCMsg_PeerList{} }
func (m *CSVCMsg_PeerList) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_PeerList) ProtoMessage()               {}
func (*CSVCMsg_PeerList) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{44} }

func (m *CSVCMsg_PeerList) GetPeer() []*CMsgServerPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

type CSVCMsg_ClearAllStringTables struct {
	Mapname          *string `protobuf:"bytes,1,opt,name=mapname" json:"mapname,omitempty"`
	MapCrc           *uint32 `protobuf:"varint,2,opt,name=map_crc" json:"map_crc,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSVCMsg_ClearAllStringTables) Reset()                    { *m = CSVCMsg_ClearAllStringTables{} }
func (m *CSVCMsg_ClearAllStringTables) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_ClearAllStringTables) ProtoMessage()               {}
func (*CSVCMsg_ClearAllStringTables) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{45} }

func (m *CSVCMsg_ClearAllStringTables) GetMapname() string {
	if m != nil && m.Mapname != nil {
		return *m.Mapname
	}
	return ""
}

func (m *CSVCMsg_ClearAllStringTables) GetMapCrc() uint32 {
	if m != nil && m.MapCrc != nil {
		return *m.MapCrc
	}
	return 0
}

type ProtoFlattenedSerializerFieldT struct {
	VarTypeSym             *int32   `protobuf:"varint,1,opt,name=var_type_sym" json:"var_type_sym,omitempty"`
	VarNameSym             *int32   `protobuf:"varint,2,opt,name=var_name_sym" json:"var_name_sym,omitempty"`
	BitCount               *int32   `protobuf:"varint,3,opt,name=bit_count" json:"bit_count,omitempty"`
	LowValue               *float32 `protobuf:"fixed32,4,opt,name=low_value" json:"low_value,omitempty"`
	HighValue              *float32 `protobuf:"fixed32,5,opt,name=high_value" json:"high_value,omitempty"`
	EncodeFlags            *int32   `protobuf:"varint,6,opt,name=encode_flags" json:"encode_flags,omitempty"`
	FieldSerializerNameSym *int32   `protobuf:"varint,7,opt,name=field_serializer_name_sym" json:"field_serializer_name_sym,omitempty"`
	FieldSerializerVersion *int32   `protobuf:"varint,8,opt,name=field_serializer_version" json:"field_serializer_version,omitempty"`
	SendNodeSym            *int32   `protobuf:"varint,9,opt,name=send_node_sym" json:"send_node_sym,omitempty"`
	VarEncoderSym          *int32   `protobuf:"varint,10,opt,name=var_encoder_sym" json:"var_encoder_sym,omitempty"`
	XXX_unrecognized       []byte   `json:"-"`
}

func (m *ProtoFlattenedSerializerFieldT) Reset()         { *m = ProtoFlattenedSerializerFieldT{} }
func (m *ProtoFlattenedSerializerFieldT) String() string { return proto.CompactTextString(m) }
func (*ProtoFlattenedSerializerFieldT) ProtoMessage()    {}
func (*ProtoFlattenedSerializerFieldT) Descriptor() ([]byte, []int) {
	return fileDescriptor30, []int{46}
}

func (m *ProtoFlattenedSerializerFieldT) GetVarTypeSym() int32 {
	if m != nil && m.VarTypeSym != nil {
		return *m.VarTypeSym
	}
	return 0
}

func (m *ProtoFlattenedSerializerFieldT) GetVarNameSym() int32 {
	if m != nil && m.VarNameSym != nil {
		return *m.VarNameSym
	}
	return 0
}

func (m *ProtoFlattenedSerializerFieldT) GetBitCount() int32 {
	if m != nil && m.BitCount != nil {
		return *m.BitCount
	}
	return 0
}

func (m *ProtoFlattenedSerializerFieldT) GetLowValue() float32 {
	if m != nil && m.LowValue != nil {
		return *m.LowValue
	}
	return 0
}

func (m *ProtoFlattenedSerializerFieldT) GetHighValue() float32 {
	if m != nil && m.HighValue != nil {
		return *m.HighValue
	}
	return 0
}

func (m *ProtoFlattenedSerializerFieldT) GetEncodeFlags() int32 {
	if m != nil && m.EncodeFlags != nil {
		return *m.EncodeFlags
	}
	return 0
}

func (m *ProtoFlattenedSerializerFieldT) GetFieldSerializerNameSym() int32 {
	if m != nil && m.FieldSerializerNameSym != nil {
		return *m.FieldSerializerNameSym
	}
	return 0
}

func (m *ProtoFlattenedSerializerFieldT) GetFieldSerializerVersion() int32 {
	if m != nil && m.FieldSerializerVersion != nil {
		return *m.FieldSerializerVersion
	}
	return 0
}

func (m *ProtoFlattenedSerializerFieldT) GetSendNodeSym() int32 {
	if m != nil && m.SendNodeSym != nil {
		return *m.SendNodeSym
	}
	return 0
}

func (m *ProtoFlattenedSerializerFieldT) GetVarEncoderSym() int32 {
	if m != nil && m.VarEncoderSym != nil {
		return *m.VarEncoderSym
	}
	return 0
}

type ProtoFlattenedSerializerT struct {
	SerializerNameSym *int32  `protobuf:"varint,1,opt,name=serializer_name_sym" json:"serializer_name_sym,omitempty"`
	SerializerVersion *int32  `protobuf:"varint,2,opt,name=serializer_version" json:"serializer_version,omitempty"`
	FieldsIndex       []int32 `protobuf:"varint,3,rep,name=fields_index" json:"fields_index,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *ProtoFlattenedSerializerT) Reset()                    { *m = ProtoFlattenedSerializerT{} }
func (m *ProtoFlattenedSerializerT) String() string            { return proto.CompactTextString(m) }
func (*ProtoFlattenedSerializerT) ProtoMessage()               {}
func (*ProtoFlattenedSerializerT) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{47} }

func (m *ProtoFlattenedSerializerT) GetSerializerNameSym() int32 {
	if m != nil && m.SerializerNameSym != nil {
		return *m.SerializerNameSym
	}
	return 0
}

func (m *ProtoFlattenedSerializerT) GetSerializerVersion() int32 {
	if m != nil && m.SerializerVersion != nil {
		return *m.SerializerVersion
	}
	return 0
}

func (m *ProtoFlattenedSerializerT) GetFieldsIndex() []int32 {
	if m != nil {
		return m.FieldsIndex
	}
	return nil
}

type CSVCMsg_FlattenedSerializer struct {
	Serializers      []*ProtoFlattenedSerializerT      `protobuf:"bytes,1,rep,name=serializers" json:"serializers,omitempty"`
	Symbols          []string                          `protobuf:"bytes,2,rep,name=symbols" json:"symbols,omitempty"`
	Fields           []*ProtoFlattenedSerializerFieldT `protobuf:"bytes,3,rep,name=fields" json:"fields,omitempty"`
	XXX_unrecognized []byte                            `json:"-"`
}

func (m *CSVCMsg_FlattenedSerializer) Reset()                    { *m = CSVCMsg_FlattenedSerializer{} }
func (m *CSVCMsg_FlattenedSerializer) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_FlattenedSerializer) ProtoMessage()               {}
func (*CSVCMsg_FlattenedSerializer) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{48} }

func (m *CSVCMsg_FlattenedSerializer) GetSerializers() []*ProtoFlattenedSerializerT {
	if m != nil {
		return m.Serializers
	}
	return nil
}

func (m *CSVCMsg_FlattenedSerializer) GetSymbols() []string {
	if m != nil {
		return m.Symbols
	}
	return nil
}

func (m *CSVCMsg_FlattenedSerializer) GetFields() []*ProtoFlattenedSerializerFieldT {
	if m != nil {
		return m.Fields
	}
	return nil
}

type CSVCMsg_StopSound struct {
	Guid             *uint32 `protobuf:"fixed32,1,opt,name=guid" json:"guid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSVCMsg_StopSound) Reset()                    { *m = CSVCMsg_StopSound{} }
func (m *CSVCMsg_StopSound) String() string            { return proto.CompactTextString(m) }
func (*CSVCMsg_StopSound) ProtoMessage()               {}
func (*CSVCMsg_StopSound) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{49} }

func (m *CSVCMsg_StopSound) GetGuid() uint32 {
	if m != nil && m.Guid != nil {
		return *m.Guid
	}
	return 0
}

type CBidirMsg_RebroadcastGameEvent struct {
	Posttoserver     *bool   `protobuf:"varint,1,opt,name=posttoserver" json:"posttoserver,omitempty"`
	Buftype          *int32  `protobuf:"varint,2,opt,name=buftype" json:"buftype,omitempty"`
	Clientbitcount   *uint32 `protobuf:"varint,3,opt,name=clientbitcount" json:"clientbitcount,omitempty"`
	Receivingclients *uint64 `protobuf:"varint,4,opt,name=receivingclients" json:"receivingclients,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CBidirMsg_RebroadcastGameEvent) Reset()         { *m = CBidirMsg_RebroadcastGameEvent{} }
func (m *CBidirMsg_RebroadcastGameEvent) String() string { return proto.CompactTextString(m) }
func (*CBidirMsg_RebroadcastGameEvent) ProtoMessage()    {}
func (*CBidirMsg_RebroadcastGameEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor30, []int{50}
}

func (m *CBidirMsg_RebroadcastGameEvent) GetPosttoserver() bool {
	if m != nil && m.Posttoserver != nil {
		return *m.Posttoserver
	}
	return false
}

func (m *CBidirMsg_RebroadcastGameEvent) GetBuftype() int32 {
	if m != nil && m.Buftype != nil {
		return *m.Buftype
	}
	return 0
}

func (m *CBidirMsg_RebroadcastGameEvent) GetClientbitcount() uint32 {
	if m != nil && m.Clientbitcount != nil {
		return *m.Clientbitcount
	}
	return 0
}

func (m *CBidirMsg_RebroadcastGameEvent) GetReceivingclients() uint64 {
	if m != nil && m.Receivingclients != nil {
		return *m.Receivingclients
	}
	return 0
}

type CBidirMsg_RebroadcastSource struct {
	Eventsource      *int32 `protobuf:"varint,1,opt,name=eventsource" json:"eventsource,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CBidirMsg_RebroadcastSource) Reset()                    { *m = CBidirMsg_RebroadcastSource{} }
func (m *CBidirMsg_RebroadcastSource) String() string            { return proto.CompactTextString(m) }
func (*CBidirMsg_RebroadcastSource) ProtoMessage()               {}
func (*CBidirMsg_RebroadcastSource) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{51} }

func (m *CBidirMsg_RebroadcastSource) GetEventsource() int32 {
	if m != nil && m.Eventsource != nil {
		return *m.Eventsource
	}
	return 0
}

type SerializedNetAddressT struct {
	SerializedAddress []byte `protobuf:"bytes,1,req,name=serializedAddress" json:"serializedAddress,omitempty"`
	XXX_unrecognized  []byte `json:"-"`
}

func (m *SerializedNetAddressT) Reset()                    { *m = SerializedNetAddressT{} }
func (m *SerializedNetAddressT) String() string            { return proto.CompactTextString(m) }
func (*SerializedNetAddressT) ProtoMessage()               {}
func (*SerializedNetAddressT) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{52} }

func (m *SerializedNetAddressT) GetSerializedAddress() []byte {
	if m != nil {
		return m.SerializedAddress
	}
	return nil
}

type CBidirMsg_RelayInfo struct {
	Operation               *CBidirMsg_RelayInfo_OperationT `protobuf:"varint,1,req,name=operation,enum=dota.CBidirMsg_RelayInfo_OperationT,def=0" json:"operation,omitempty"`
	SerializedTargetAddress *SerializedNetAddressT          `protobuf:"bytes,2,opt,name=serializedTargetAddress" json:"serializedTargetAddress,omitempty"`
	AdditionalHops          *uint32                         `protobuf:"varint,3,opt,name=additionalHops" json:"additionalHops,omitempty"`
	XXX_unrecognized        []byte                          `json:"-"`
}

func (m *CBidirMsg_RelayInfo) Reset()                    { *m = CBidirMsg_RelayInfo{} }
func (m *CBidirMsg_RelayInfo) String() string            { return proto.CompactTextString(m) }
func (*CBidirMsg_RelayInfo) ProtoMessage()               {}
func (*CBidirMsg_RelayInfo) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{53} }

const Default_CBidirMsg_RelayInfo_Operation CBidirMsg_RelayInfo_OperationT = CBidirMsg_RelayInfo_RIO_REQUEST_RELAY

func (m *CBidirMsg_RelayInfo) GetOperation() CBidirMsg_RelayInfo_OperationT {
	if m != nil && m.Operation != nil {
		return *m.Operation
	}
	return Default_CBidirMsg_RelayInfo_Operation
}

func (m *CBidirMsg_RelayInfo) GetSerializedTargetAddress() *SerializedNetAddressT {
	if m != nil {
		return m.SerializedTargetAddress
	}
	return nil
}

func (m *CBidirMsg_RelayInfo) GetAdditionalHops() uint32 {
	if m != nil && m.AdditionalHops != nil {
		return *m.AdditionalHops
	}
	return 0
}

type SignedPayloadT struct {
	PayloadData       []byte  `protobuf:"bytes,1,req,name=payloadData" json:"payloadData,omitempty"`
	Signature         *uint32 `protobuf:"varint,2,req,name=signature" json:"signature,omitempty"`
	BPayloadEncrypted *bool   `protobuf:"varint,3,req,name=bPayloadEncrypted" json:"bPayloadEncrypted,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *SignedPayloadT) Reset()                    { *m = SignedPayloadT{} }
func (m *SignedPayloadT) String() string            { return proto.CompactTextString(m) }
func (*SignedPayloadT) ProtoMessage()               {}
func (*SignedPayloadT) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{54} }

func (m *SignedPayloadT) GetPayloadData() []byte {
	if m != nil {
		return m.PayloadData
	}
	return nil
}

func (m *SignedPayloadT) GetSignature() uint32 {
	if m != nil && m.Signature != nil {
		return *m.Signature
	}
	return 0
}

func (m *SignedPayloadT) GetBPayloadEncrypted() bool {
	if m != nil && m.BPayloadEncrypted != nil {
		return *m.BPayloadEncrypted
	}
	return false
}

type CBidirMsg_RelayPacket struct {
	Prevhopcount     *uint32                                            `protobuf:"varint,1,req,name=prevhopcount" json:"prevhopcount,omitempty"`
	OriginalSender   *SerializedNetAddressT                             `protobuf:"bytes,2,req,name=originalSender" json:"originalSender,omitempty"`
	SignedPayload    *SignedPayloadT                                    `protobuf:"bytes,3,req,name=signedPayload" json:"signedPayload,omitempty"`
	RecipientList    []*CBidirMsg_RelayPacket_SignedDestinationAddressT `protobuf:"bytes,4,rep,name=recipientList" json:"recipientList,omitempty"`
	XXX_unrecognized []byte                                             `json:"-"`
}

func (m *CBidirMsg_RelayPacket) Reset()                    { *m = CBidirMsg_RelayPacket{} }
func (m *CBidirMsg_RelayPacket) String() string            { return proto.CompactTextString(m) }
func (*CBidirMsg_RelayPacket) ProtoMessage()               {}
func (*CBidirMsg_RelayPacket) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{55} }

func (m *CBidirMsg_RelayPacket) GetPrevhopcount() uint32 {
	if m != nil && m.Prevhopcount != nil {
		return *m.Prevhopcount
	}
	return 0
}

func (m *CBidirMsg_RelayPacket) GetOriginalSender() *SerializedNetAddressT {
	if m != nil {
		return m.OriginalSender
	}
	return nil
}

func (m *CBidirMsg_RelayPacket) GetSignedPayload() *SignedPayloadT {
	if m != nil {
		return m.SignedPayload
	}
	return nil
}

func (m *CBidirMsg_RelayPacket) GetRecipientList() []*CBidirMsg_RelayPacket_SignedDestinationAddressT {
	if m != nil {
		return m.RecipientList
	}
	return nil
}

type CBidirMsg_RelayPacket_SignedDestinationAddressT struct {
	SerializedAddr      *SerializedNetAddressT `protobuf:"bytes,1,req,name=serializedAddr" json:"serializedAddr,omitempty"`
	Signature           *uint32                `protobuf:"varint,2,req,name=signature" json:"signature,omitempty"`
	EncryptedPayloadKey []byte                 `protobuf:"bytes,3,opt,name=encryptedPayloadKey" json:"encryptedPayloadKey,omitempty"`
	XXX_unrecognized    []byte                 `json:"-"`
}

func (m *CBidirMsg_RelayPacket_SignedDestinationAddressT) Reset() {
	*m = CBidirMsg_RelayPacket_SignedDestinationAddressT{}
}
func (m *CBidirMsg_RelayPacket_SignedDestinationAddressT) String() string {
	return proto.CompactTextString(m)
}
func (*CBidirMsg_RelayPacket_SignedDestinationAddressT) ProtoMessage() {}
func (*CBidirMsg_RelayPacket_SignedDestinationAddressT) Descriptor() ([]byte, []int) {
	return fileDescriptor30, []int{55, 0}
}

func (m *CBidirMsg_RelayPacket_SignedDestinationAddressT) GetSerializedAddr() *SerializedNetAddressT {
	if m != nil {
		return m.SerializedAddr
	}
	return nil
}

func (m *CBidirMsg_RelayPacket_SignedDestinationAddressT) GetSignature() uint32 {
	if m != nil && m.Signature != nil {
		return *m.Signature
	}
	return 0
}

func (m *CBidirMsg_RelayPacket_SignedDestinationAddressT) GetEncryptedPayloadKey() []byte {
	if m != nil {
		return m.EncryptedPayloadKey
	}
	return nil
}

type CMsgServerNetworkStats struct {
	Dedicated        *bool                            `protobuf:"varint,1,opt,name=dedicated" json:"dedicated,omitempty"`
	CpuUsage         *int32                           `protobuf:"varint,2,opt,name=cpu_usage" json:"cpu_usage,omitempty"`
	MemoryUsedMb     *int32                           `protobuf:"varint,3,opt,name=memory_used_mb" json:"memory_used_mb,omitempty"`
	MemoryFreeMb     *int32                           `protobuf:"varint,4,opt,name=memory_free_mb" json:"memory_free_mb,omitempty"`
	Uptime           *int32                           `protobuf:"varint,5,opt,name=uptime" json:"uptime,omitempty"`
	SpawnCount       *int32                           `protobuf:"varint,6,opt,name=spawn_count" json:"spawn_count,omitempty"`
	NumClients       *int32                           `protobuf:"varint,8,opt,name=num_clients" json:"num_clients,omitempty"`
	NumBots          *int32                           `protobuf:"varint,9,opt,name=num_bots" json:"num_bots,omitempty"`
	NumSpectators    *int32                           `protobuf:"varint,10,opt,name=num_spectators" json:"num_spectators,omitempty"`
	NumTvRelays      *int32                           `protobuf:"varint,11,opt,name=num_tv_relays" json:"num_tv_relays,omitempty"`
	Fps              *float32                         `protobuf:"fixed32,12,opt,name=fps" json:"fps,omitempty"`
	Ports            []*CMsgServerNetworkStats_Port   `protobuf:"bytes,17,rep,name=ports" json:"ports,omitempty"`
	AvgLatencyOut    *float32                         `protobuf:"fixed32,18,opt,name=avg_latency_out" json:"avg_latency_out,omitempty"`
	AvgLatencyIn     *float32                         `protobuf:"fixed32,19,opt,name=avg_latency_in" json:"avg_latency_in,omitempty"`
	AvgPacketsOut    *float32                         `protobuf:"fixed32,20,opt,name=avg_packets_out" json:"avg_packets_out,omitempty"`
	AvgPacketsIn     *float32                         `protobuf:"fixed32,21,opt,name=avg_packets_in" json:"avg_packets_in,omitempty"`
	AvgLossOut       *float32                         `protobuf:"fixed32,22,opt,name=avg_loss_out" json:"avg_loss_out,omitempty"`
	AvgLossIn        *float32                         `protobuf:"fixed32,23,opt,name=avg_loss_in" json:"avg_loss_in,omitempty"`
	AvgDataOut       *float32                         `protobuf:"fixed32,24,opt,name=avg_data_out" json:"avg_data_out,omitempty"`
	AvgDataIn        *float32                         `protobuf:"fixed32,25,opt,name=avg_data_in" json:"avg_data_in,omitempty"`
	TotalDataIn      *uint64                          `protobuf:"varint,26,opt,name=total_data_in" json:"total_data_in,omitempty"`
	TotalPacketsIn   *uint64                          `protobuf:"varint,27,opt,name=total_packets_in" json:"total_packets_in,omitempty"`
	TotalDataOut     *uint64                          `protobuf:"varint,28,opt,name=total_data_out" json:"total_data_out,omitempty"`
	TotalPacketsOut  *uint64                          `protobuf:"varint,29,opt,name=total_packets_out" json:"total_packets_out,omitempty"`
	Players          []*CMsgServerNetworkStats_Player `protobuf:"bytes,30,rep,name=players" json:"players,omitempty"`
	XXX_unrecognized []byte                           `json:"-"`
}

func (m *CMsgServerNetworkStats) Reset()                    { *m = CMsgServerNetworkStats{} }
func (m *CMsgServerNetworkStats) String() string            { return proto.CompactTextString(m) }
func (*CMsgServerNetworkStats) ProtoMessage()               {}
func (*CMsgServerNetworkStats) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{56} }

func (m *CMsgServerNetworkStats) GetDedicated() bool {
	if m != nil && m.Dedicated != nil {
		return *m.Dedicated
	}
	return false
}

func (m *CMsgServerNetworkStats) GetCpuUsage() int32 {
	if m != nil && m.CpuUsage != nil {
		return *m.CpuUsage
	}
	return 0
}

func (m *CMsgServerNetworkStats) GetMemoryUsedMb() int32 {
	if m != nil && m.MemoryUsedMb != nil {
		return *m.MemoryUsedMb
	}
	return 0
}

func (m *CMsgServerNetworkStats) GetMemoryFreeMb() int32 {
	if m != nil && m.MemoryFreeMb != nil {
		return *m.MemoryFreeMb
	}
	return 0
}

func (m *CMsgServerNetworkStats) GetUptime() int32 {
	if m != nil && m.Uptime != nil {
		return *m.Uptime
	}
	return 0
}

func (m *CMsgServerNetworkStats) GetSpawnCount() int32 {
	if m != nil && m.SpawnCount != nil {
		return *m.SpawnCount
	}
	return 0
}

func (m *CMsgServerNetworkStats) GetNumClients() int32 {
	if m != nil && m.NumClients != nil {
		return *m.NumClients
	}
	return 0
}

func (m *CMsgServerNetworkStats) GetNumBots() int32 {
	if m != nil && m.NumBots != nil {
		return *m.NumBots
	}
	return 0
}

func (m *CMsgServerNetworkStats) GetNumSpectators() int32 {
	if m != nil && m.NumSpectators != nil {
		return *m.NumSpectators
	}
	return 0
}

func (m *CMsgServerNetworkStats) GetNumTvRelays() int32 {
	if m != nil && m.NumTvRelays != nil {
		return *m.NumTvRelays
	}
	return 0
}

func (m *CMsgServerNetworkStats) GetFps() float32 {
	if m != nil && m.Fps != nil {
		return *m.Fps
	}
	return 0
}

func (m *CMsgServerNetworkStats) GetPorts() []*CMsgServerNetworkStats_Port {
	if m != nil {
		return m.Ports
	}
	return nil
}

func (m *CMsgServerNetworkStats) GetAvgLatencyOut() float32 {
	if m != nil && m.AvgLatencyOut != nil {
		return *m.AvgLatencyOut
	}
	return 0
}

func (m *CMsgServerNetworkStats) GetAvgLatencyIn() float32 {
	if m != nil && m.AvgLatencyIn != nil {
		return *m.AvgLatencyIn
	}
	return 0
}

func (m *CMsgServerNetworkStats) GetAvgPacketsOut() float32 {
	if m != nil && m.AvgPacketsOut != nil {
		return *m.AvgPacketsOut
	}
	return 0
}

func (m *CMsgServerNetworkStats) GetAvgPacketsIn() float32 {
	if m != nil && m.AvgPacketsIn != nil {
		return *m.AvgPacketsIn
	}
	return 0
}

func (m *CMsgServerNetworkStats) GetAvgLossOut() float32 {
	if m != nil && m.AvgLossOut != nil {
		return *m.AvgLossOut
	}
	return 0
}

func (m *CMsgServerNetworkStats) GetAvgLossIn() float32 {
	if m != nil && m.AvgLossIn != nil {
		return *m.AvgLossIn
	}
	return 0
}

func (m *CMsgServerNetworkStats) GetAvgDataOut() float32 {
	if m != nil && m.AvgDataOut != nil {
		return *m.AvgDataOut
	}
	return 0
}

func (m *CMsgServerNetworkStats) GetAvgDataIn() float32 {
	if m != nil && m.AvgDataIn != nil {
		return *m.AvgDataIn
	}
	return 0
}

func (m *CMsgServerNetworkStats) GetTotalDataIn() uint64 {
	if m != nil && m.TotalDataIn != nil {
		return *m.TotalDataIn
	}
	return 0
}

func (m *CMsgServerNetworkStats) GetTotalPacketsIn() uint64 {
	if m != nil && m.TotalPacketsIn != nil {
		return *m.TotalPacketsIn
	}
	return 0
}

func (m *CMsgServerNetworkStats) GetTotalDataOut() uint64 {
	if m != nil && m.TotalDataOut != nil {
		return *m.TotalDataOut
	}
	return 0
}

func (m *CMsgServerNetworkStats) GetTotalPacketsOut() uint64 {
	if m != nil && m.TotalPacketsOut != nil {
		return *m.TotalPacketsOut
	}
	return 0
}

func (m *CMsgServerNetworkStats) GetPlayers() []*CMsgServerNetworkStats_Player {
	if m != nil {
		return m.Players
	}
	return nil
}

type CMsgServerNetworkStats_Port struct {
	Port             *int32  `protobuf:"varint,1,opt,name=port" json:"port,omitempty"`
	Name             *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgServerNetworkStats_Port) Reset()         { *m = CMsgServerNetworkStats_Port{} }
func (m *CMsgServerNetworkStats_Port) String() string { return proto.CompactTextString(m) }
func (*CMsgServerNetworkStats_Port) ProtoMessage()    {}
func (*CMsgServerNetworkStats_Port) Descriptor() ([]byte, []int) {
	return fileDescriptor30, []int{56, 0}
}

func (m *CMsgServerNetworkStats_Port) GetPort() int32 {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return 0
}

func (m *CMsgServerNetworkStats_Port) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type CMsgServerNetworkStats_Player struct {
	Steamid          *uint64  `protobuf:"varint,1,opt,name=steamid" json:"steamid,omitempty"`
	RemoteAddr       *string  `protobuf:"bytes,2,opt,name=remote_addr" json:"remote_addr,omitempty"`
	PingStddevMs     *int32   `protobuf:"varint,3,opt,name=ping_stddev_ms" json:"ping_stddev_ms,omitempty"`
	PingAvgMs        *int32   `protobuf:"varint,4,opt,name=ping_avg_ms" json:"ping_avg_ms,omitempty"`
	PacketLossPct    *float32 `protobuf:"fixed32,5,opt,name=packet_loss_pct" json:"packet_loss_pct,omitempty"`
	IsBot            *bool    `protobuf:"varint,6,opt,name=is_bot" json:"is_bot,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CMsgServerNetworkStats_Player) Reset()         { *m = CMsgServerNetworkStats_Player{} }
func (m *CMsgServerNetworkStats_Player) String() string { return proto.CompactTextString(m) }
func (*CMsgServerNetworkStats_Player) ProtoMessage()    {}
func (*CMsgServerNetworkStats_Player) Descriptor() ([]byte, []int) {
	return fileDescriptor30, []int{56, 1}
}

func (m *CMsgServerNetworkStats_Player) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

func (m *CMsgServerNetworkStats_Player) GetRemoteAddr() string {
	if m != nil && m.RemoteAddr != nil {
		return *m.RemoteAddr
	}
	return ""
}

func (m *CMsgServerNetworkStats_Player) GetPingStddevMs() int32 {
	if m != nil && m.PingStddevMs != nil {
		return *m.PingStddevMs
	}
	return 0
}

func (m *CMsgServerNetworkStats_Player) GetPingAvgMs() int32 {
	if m != nil && m.PingAvgMs != nil {
		return *m.PingAvgMs
	}
	return 0
}

func (m *CMsgServerNetworkStats_Player) GetPacketLossPct() float32 {
	if m != nil && m.PacketLossPct != nil {
		return *m.PacketLossPct
	}
	return 0
}

func (m *CMsgServerNetworkStats_Player) GetIsBot() bool {
	if m != nil && m.IsBot != nil {
		return *m.IsBot
	}
	return false
}

func init() {
	proto.RegisterType((*CCLCMsg_ClientInfo)(nil), "dota.CCLCMsg_ClientInfo")
	proto.RegisterType((*CCLCMsg_Move)(nil), "dota.CCLCMsg_Move")
	proto.RegisterType((*CMsgVoiceAudio)(nil), "dota.CMsgVoiceAudio")
	proto.RegisterType((*CCLCMsg_VoiceData)(nil), "dota.CCLCMsg_VoiceData")
	proto.RegisterType((*CCLCMsg_BaselineAck)(nil), "dota.CCLCMsg_BaselineAck")
	proto.RegisterType((*CCLCMsg_ListenEvents)(nil), "dota.CCLCMsg_ListenEvents")
	proto.RegisterType((*CCLCMsg_RespondCvarValue)(nil), "dota.CCLCMsg_RespondCvarValue")
	proto.RegisterType((*CCLCMsg_FileCRCCheck)(nil), "dota.CCLCMsg_FileCRCCheck")
	proto.RegisterType((*CCLCMsg_LoadingProgress)(nil), "dota.CCLCMsg_LoadingProgress")
	proto.RegisterType((*CCLCMsg_SplitPlayerConnect)(nil), "dota.CCLCMsg_SplitPlayerConnect")
	proto.RegisterType((*CCLCMsg_ClientMessage)(nil), "dota.CCLCMsg_ClientMessage")
	proto.RegisterType((*CCLCMsg_SplitPlayerDisconnect)(nil), "dota.CCLCMsg_SplitPlayerDisconnect")
	proto.RegisterType((*CCLCMsg_ServerStatus)(nil), "dota.CCLCMsg_ServerStatus")
	proto.RegisterType((*CCLCMsg_ServerPing)(nil), "dota.CCLCMsg_ServerPing")
	proto.RegisterType((*CCLCMsg_RequestPause)(nil), "dota.CCLCMsg_RequestPause")
	proto.RegisterType((*CCLCMsg_CmdKeyValues)(nil), "dota.CCLCMsg_CmdKeyValues")
	proto.RegisterType((*CSVCMsg_ServerInfo)(nil), "dota.CSVCMsg_ServerInfo")
	proto.RegisterType((*CSVCMsg_ClassInfo)(nil), "dota.CSVCMsg_ClassInfo")
	proto.RegisterType((*CSVCMsg_ClassInfoClassT)(nil), "dota.CSVCMsg_ClassInfo.class_t")
	proto.RegisterType((*CSVCMsg_SetPause)(nil), "dota.CSVCMsg_SetPause")
	proto.RegisterType((*CSVCMsg_VoiceInit)(nil), "dota.CSVCMsg_VoiceInit")
	proto.RegisterType((*CSVCMsg_Print)(nil), "dota.CSVCMsg_Print")
	proto.RegisterType((*CSVCMsg_Sounds)(nil), "dota.CSVCMsg_Sounds")
	proto.RegisterType((*CSVCMsg_SoundsSounddataT)(nil), "dota.CSVCMsg_Sounds.sounddata_t")
	proto.RegisterType((*CSVCMsg_Prefetch)(nil), "dota.CSVCMsg_Prefetch")
	proto.RegisterType((*CSVCMsg_SetView)(nil), "dota.CSVCMsg_SetView")
	proto.RegisterType((*CSVCMsg_FixAngle)(nil), "dota.CSVCMsg_FixAngle")
	proto.RegisterType((*CSVCMsg_CrosshairAngle)(nil), "dota.CSVCMsg_CrosshairAngle")
	proto.RegisterType((*CSVCMsg_BSPDecal)(nil), "dota.CSVCMsg_BSPDecal")
	proto.RegisterType((*CSVCMsg_SplitScreen)(nil), "dota.CSVCMsg_SplitScreen")
	proto.RegisterType((*CSVCMsg_GetCvarValue)(nil), "dota.CSVCMsg_GetCvarValue")
	proto.RegisterType((*CSVCMsg_Menu)(nil), "dota.CSVCMsg_Menu")
	proto.RegisterType((*CSVCMsg_SendTable)(nil), "dota.CSVCMsg_SendTable")
	proto.RegisterType((*CSVCMsg_SendTableSendpropT)(nil), "dota.CSVCMsg_SendTable.sendprop_t")
	proto.RegisterType((*CSVCMsg_GameEventList)(nil), "dota.CSVCMsg_GameEventList")
	proto.RegisterType((*CSVCMsg_GameEventListKeyT)(nil), "dota.CSVCMsg_GameEventList.key_t")
	proto.RegisterType((*CSVCMsg_GameEventListDescriptorT)(nil), "dota.CSVCMsg_GameEventList.descriptor_t")
	proto.RegisterType((*CSVCMsg_PacketEntities)(nil), "dota.CSVCMsg_PacketEntities")
	proto.RegisterType((*CSVCMsg_TempEntities)(nil), "dota.CSVCMsg_TempEntities")
	proto.RegisterType((*CSVCMsg_CreateStringTable)(nil), "dota.CSVCMsg_CreateStringTable")
	proto.RegisterType((*CSVCMsg_UpdateStringTable)(nil), "dota.CSVCMsg_UpdateStringTable")
	proto.RegisterType((*CSVCMsg_VoiceData)(nil), "dota.CSVCMsg_VoiceData")
	proto.RegisterType((*CSVCMsg_PacketReliable)(nil), "dota.CSVCMsg_PacketReliable")
	proto.RegisterType((*CSVCMsg_FullFrameSplit)(nil), "dota.CSVCMsg_FullFrameSplit")
	proto.RegisterType((*CSVCMsg_HLTVStatus)(nil), "dota.CSVCMsg_HLTVStatus")
	proto.RegisterType((*CSVCMsg_ServerSteamID)(nil), "dota.CSVCMsg_ServerSteamID")
	proto.RegisterType((*CSVCMsg_CmdKeyValues)(nil), "dota.CSVCMsg_CmdKeyValues")
	proto.RegisterType((*CMsgIPCAddress)(nil), "dota.CMsgIPCAddress")
	proto.RegisterType((*CMsgServerPeer)(nil), "dota.CMsgServerPeer")
	proto.RegisterType((*CSVCMsg_PeerList)(nil), "dota.CSVCMsg_PeerList")
	proto.RegisterType((*CSVCMsg_ClearAllStringTables)(nil), "dota.CSVCMsg_ClearAllStringTables")
	proto.RegisterType((*ProtoFlattenedSerializerFieldT)(nil), "dota.ProtoFlattenedSerializerField_t")
	proto.RegisterType((*ProtoFlattenedSerializerT)(nil), "dota.ProtoFlattenedSerializer_t")
	proto.RegisterType((*CSVCMsg_FlattenedSerializer)(nil), "dota.CSVCMsg_FlattenedSerializer")
	proto.RegisterType((*CSVCMsg_StopSound)(nil), "dota.CSVCMsg_StopSound")
	proto.RegisterType((*CBidirMsg_RebroadcastGameEvent)(nil), "dota.CBidirMsg_RebroadcastGameEvent")
	proto.RegisterType((*CBidirMsg_RebroadcastSource)(nil), "dota.CBidirMsg_RebroadcastSource")
	proto.RegisterType((*SerializedNetAddressT)(nil), "dota.SerializedNetAddress_t")
	proto.RegisterType((*CBidirMsg_RelayInfo)(nil), "dota.CBidirMsg_RelayInfo")
	proto.RegisterType((*SignedPayloadT)(nil), "dota.SignedPayload_t")
	proto.RegisterType((*CBidirMsg_RelayPacket)(nil), "dota.CBidirMsg_RelayPacket")
	proto.RegisterType((*CBidirMsg_RelayPacket_SignedDestinationAddressT)(nil), "dota.CBidirMsg_RelayPacket.SignedDestinationAddress_t")
	proto.RegisterType((*CMsgServerNetworkStats)(nil), "dota.CMsgServerNetworkStats")
	proto.RegisterType((*CMsgServerNetworkStats_Port)(nil), "dota.CMsgServerNetworkStats.Port")
	proto.RegisterType((*CMsgServerNetworkStats_Player)(nil), "dota.CMsgServerNetworkStats.Player")
	proto.RegisterEnum("dota.CLC_Messages", CLC_Messages_name, CLC_Messages_value)
	proto.RegisterEnum("dota.SVC_Messages", SVC_Messages_name, SVC_Messages_value)
	proto.RegisterEnum("dota.VoiceDataFormatT", VoiceDataFormatT_name, VoiceDataFormatT_value)
	proto.RegisterEnum("dota.RequestPauseT", RequestPauseT_name, RequestPauseT_value)
	proto.RegisterEnum("dota.PrefetchType", PrefetchType_name, PrefetchType_value)
	proto.RegisterEnum("dota.ESplitScreenMessageType", ESplitScreenMessageType_name, ESplitScreenMessageType_value)
	proto.RegisterEnum("dota.EQueryCvarValueStatus", EQueryCvarValueStatus_name, EQueryCvarValueStatus_value)
	proto.RegisterEnum("dota.DIALOG_TYPE", DIALOG_TYPE_name, DIALOG_TYPE_value)
	proto.RegisterEnum("dota.SVC_Messages_LowFrequency", SVC_Messages_LowFrequency_name, SVC_Messages_LowFrequency_value)
	proto.RegisterEnum("dota.Bidirectional_Messages", Bidirectional_Messages_name, Bidirectional_Messages_value)
	proto.RegisterEnum("dota.Bidirectional_Messages_LowFrequency", Bidirectional_Messages_LowFrequency_name, Bidirectional_Messages_LowFrequency_value)
	proto.RegisterEnum("dota.CBidirMsg_RelayInfo_OperationT", CBidirMsg_RelayInfo_OperationT_name, CBidirMsg_RelayInfo_OperationT_value)
}

func init() { proto.RegisterFile("netmessages.proto", fileDescriptor30) }

var fileDescriptor30 = []byte{
	// 4036 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x5a, 0xcd, 0x73, 0x24, 0xc9,
	0x55, 0x9f, 0x6e, 0xb5, 0xbe, 0x9e, 0x5a, 0xad, 0x52, 0xe9, 0xab, 0x47, 0x33, 0xb3, 0xab, 0xa9,
	0xc5, 0xb6, 0x2c, 0xdb, 0xe3, 0xf5, 0x78, 0x77, 0xcd, 0x8e, 0xbd, 0x18, 0x4d, 0xab, 0x35, 0x2b,
	0x46, 0x5f, 0xab, 0xee, 0x11, 0x38, 0x02, 0xc8, 0x28, 0x55, 0xa5, 0x5a, 0x19, 0xaa, 0x2f, 0x57,
	0x66, 0xf7, 0x4c, 0xef, 0x01, 0x08, 0x82, 0x08, 0x4e, 0x04, 0x04, 0x9c, 0x88, 0xe0, 0xea, 0x03,
	0x07, 0x4e, 0x04, 0x07, 0x22, 0xe0, 0x5f, 0xe0, 0x4c, 0xc0, 0x81, 0x0b, 0x1c, 0xf8, 0x2f, 0x88,
	0xf7, 0x32, 0xb3, 0xaa, 0x5a, 0xea, 0x59, 0x73, 0xeb, 0x7a, 0x99, 0xf9, 0xf2, 0xe5, 0xcb, 0xf7,
	0xf5, 0x7b, 0xd9, 0xb0, 0x9a, 0x70, 0x15, 0x73, 0x29, 0xfd, 0x01, 0x97, 0xcf, 0xb2, 0x3c, 0x55,
	0xa9, 0xdb, 0x08, 0x53, 0xe5, 0x6f, 0x6f, 0x26, 0x5c, 0xbd, 0x4d, 0xf3, 0xdb, 0x2b, 0x5f, 0x72,
	0x35, 0xce, 0xec, 0xa8, 0xf7, 0x57, 0x35, 0x70, 0x3b, 0x9d, 0xe3, 0xce, 0x89, 0x1c, 0xb0, 0x4e,
	0x24, 0x78, 0xa2, 0x8e, 0x92, 0xeb, 0xd4, 0xdd, 0x84, 0x96, 0xe4, 0x49, 0xc8, 0x94, 0x7f, 0x15,
	0x71, 0x16, 0xe4, 0x41, 0xbb, 0xb6, 0x53, 0xdb, 0x9d, 0x77, 0xd7, 0xa1, 0x29, 0x79, 0x3e, 0xe2,
	0x39, 0x0b, 0xd2, 0x61, 0xa2, 0xda, 0xf5, 0x9d, 0xda, 0xee, 0xb2, 0xbb, 0x02, 0xf3, 0x42, 0xb2,
	0x9b, 0x48, 0x8d, 0xda, 0x33, 0x3b, 0xb5, 0xdd, 0x05, 0x77, 0x15, 0x16, 0x85, 0x64, 0x39, 0xcf,
	0x22, 0x7f, 0xdc, 0x6e, 0x10, 0xc9, 0x05, 0xb8, 0xce, 0x05, 0x4f, 0x42, 0xc9, 0x44, 0xd8, 0x9e,
	0xa5, 0x75, 0xeb, 0xd0, 0xb4, 0xb4, 0xc4, 0x8f, 0x79, 0x7b, 0x6e, 0xa7, 0xb6, 0xbb, 0xe8, 0xf5,
	0xa0, 0x69, 0x25, 0x3a, 0x49, 0x47, 0xdc, 0x7d, 0x04, 0x6b, 0xc9, 0x30, 0x66, 0x57, 0x7e, 0x70,
	0x3b, 0xcc, 0x58, 0x90, 0xc6, 0xb1, 0x9f, 0x84, 0x92, 0x04, 0x5a, 0x76, 0xdb, 0xe0, 0xe0, 0x60,
	0xc2, 0xdf, 0x96, 0x23, 0x5a, 0xa8, 0x26, 0x34, 0x42, 0x5f, 0xf9, 0x24, 0x51, 0xd3, 0xfb, 0xb7,
	0x1a, 0xb4, 0x90, 0xe5, 0x65, 0x2a, 0x02, 0xbe, 0x3f, 0x0c, 0x45, 0xea, 0xfe, 0x1c, 0xe6, 0xae,
	0xd3, 0x3c, 0xf6, 0x15, 0xb1, 0x6a, 0x3d, 0xdf, 0x7a, 0x86, 0x9a, 0x7a, 0x46, 0x33, 0x0e, 0x7c,
	0xe5, 0x1f, 0xd2, 0x20, 0x53, 0x2f, 0x36, 0x2f, 0xcf, 0x8e, 0x3a, 0xdd, 0x83, 0xfd, 0xfe, 0x3e,
	0x3b, 0x3c, 0xbb, 0x38, 0xd9, 0xef, 0xb3, 0x5e, 0xbf, 0xbb, 0x7f, 0x82, 0x47, 0x1a, 0xe1, 0x64,
	0x46, 0xfb, 0xe0, 0xae, 0x4d, 0xad, 0xb8, 0x5f, 0x0e, 0x79, 0x12, 0x70, 0x76, 0x35, 0x56, 0x5c,
	0xd2, 0xfe, 0xb3, 0x9a, 0x1e, 0x28, 0x91, 0x26, 0x2c, 0x19, 0xc6, 0x57, 0x3c, 0x27, 0xb5, 0x2c,
	0xbb, 0x6b, 0xb0, 0x24, 0xfd, 0x38, 0x8b, 0x38, 0xcb, 0x7d, 0xc5, 0x8d, 0x5e, 0x3c, 0xd8, 0x1e,
	0x26, 0x41, 0x1a, 0x67, 0x39, 0x97, 0x92, 0x87, 0xcc, 0xcc, 0x48, 0xaf, 0xaf, 0x25, 0x57, 0xa4,
	0xa5, 0x65, 0xaf, 0x0f, 0xab, 0x56, 0x4b, 0x85, 0xc4, 0xee, 0x47, 0x30, 0xeb, 0xe3, 0xd9, 0xe8,
	0x44, 0x4b, 0xcf, 0xd7, 0xf5, 0x89, 0xee, 0x9c, 0xbb, 0x09, 0x8d, 0x77, 0x43, 0x11, 0x92, 0xc0,
	0x73, 0xf8, 0xa5, 0x44, 0x70, 0x4b, 0x62, 0x2e, 0x7b, 0xfb, 0xb0, 0x66, 0xb9, 0xbe, 0xf4, 0x25,
	0x8f, 0x44, 0xc2, 0xf7, 0x83, 0x5b, 0x77, 0x03, 0x96, 0xaf, 0xcc, 0x27, 0xa3, 0xd9, 0x35, 0x3a,
	0xd4, 0x1a, 0x2c, 0x15, 0xe4, 0x24, 0x27, 0x86, 0xb3, 0xde, 0x1e, 0xac, 0x5b, 0x16, 0xc7, 0x42,
	0x2a, 0x9e, 0x74, 0x47, 0x3c, 0x51, 0x12, 0xb5, 0xc5, 0xf1, 0x17, 0x8b, 0x7d, 0x89, 0x0c, 0x66,
	0x76, 0xe7, 0xbd, 0xdf, 0x87, 0xb6, 0x9d, 0x7b, 0xc1, 0x65, 0x96, 0x26, 0x61, 0x67, 0xe4, 0xe7,
	0x97, 0x7e, 0x34, 0xe4, 0x6e, 0x0b, 0xe6, 0x82, 0x34, 0xbd, 0x15, 0xbc, 0xdc, 0x4c, 0x2a, 0x5f,
	0x0d, 0x25, 0x0b, 0xd2, 0x90, 0xeb, 0xcd, 0x50, 0x7a, 0xb2, 0x1c, 0x94, 0x7e, 0xd1, 0x5d, 0x86,
	0xd9, 0x11, 0xae, 0x25, 0xdd, 0x2e, 0x7a, 0x71, 0x29, 0xc9, 0xa1, 0x88, 0x78, 0xe7, 0xa2, 0xd3,
	0xb9, 0xe1, 0xc1, 0x2d, 0x5a, 0x27, 0xb2, 0x60, 0x99, 0xaf, 0x6e, 0x0c, 0xf3, 0x26, 0x34, 0xe8,
	0xab, 0x4e, 0x7c, 0x36, 0x60, 0x99, 0x26, 0x5c, 0x8b, 0x88, 0x17, 0xec, 0x67, 0x5d, 0x07, 0x16,
	0x0a, 0x0a, 0xed, 0xe0, 0x2e, 0xc1, 0x0c, 0xfa, 0x06, 0xde, 0xda, 0xbc, 0xf7, 0x3d, 0xd8, 0x2a,
	0x0e, 0x9e, 0xfa, 0xa1, 0x48, 0x06, 0xe7, 0x79, 0x3a, 0xc0, 0x2b, 0xc4, 0x95, 0x99, 0xf9, 0xad,
	0x37, 0xf4, 0x3e, 0x86, 0x6d, 0x3b, 0xb9, 0x97, 0x45, 0x42, 0x9d, 0x47, 0xfe, 0x98, 0xe7, 0x9d,
	0x34, 0x49, 0x78, 0xa0, 0x50, 0x57, 0x19, 0x11, 0x68, 0xaf, 0x1a, 0x9d, 0xe6, 0x27, 0xb0, 0x31,
	0xe9, 0xa8, 0x27, 0xda, 0xcf, 0x91, 0x79, 0x2c, 0x07, 0x0c, 0xbd, 0xba, 0x3c, 0x4d, 0x69, 0x92,
	0xde, 0x0f, 0xe0, 0xc9, 0x94, 0xad, 0x0e, 0x84, 0x0c, 0xcc, 0x6e, 0x4d, 0x68, 0xc8, 0x28, 0x55,
	0x46, 0xb2, 0xca, 0xfd, 0xf5, 0xc8, 0xd5, 0x7b, 0xa4, 0x75, 0x94, 0x49, 0x8a, 0x38, 0x8b, 0xc4,
	0xb5, 0xe0, 0x21, 0xcd, 0x5d, 0xf0, 0xd6, 0xcb, 0xe0, 0xa1, 0xe7, 0x9e, 0x8b, 0x64, 0xe0, 0xb1,
	0x92, 0xc3, 0x05, 0xfa, 0x82, 0x54, 0xe7, 0xfe, 0x50, 0x72, 0xf7, 0x39, 0x40, 0x86, 0x3f, 0x4a,
	0x51, 0x5b, 0xd6, 0x44, 0xab, 0xf3, 0x98, 0x7a, 0xb1, 0x70, 0x71, 0xce, 0xce, 0xf7, 0xdf, 0xf4,
	0xba, 0x78, 0xeb, 0x7a, 0xcd, 0x20, 0x4f, 0x87, 0x99, 0x31, 0xb1, 0xdf, 0x28, 0x37, 0xe8, 0xc4,
	0xe1, 0x6b, 0x3e, 0x26, 0x8b, 0x91, 0xc5, 0xb9, 0x6b, 0x74, 0xee, 0xff, 0x98, 0x01, 0xb7, 0xd3,
	0xbb, 0xac, 0x48, 0x47, 0xa1, 0x4d, 0xdf, 0x85, 0x4a, 0x83, 0x34, 0x32, 0xea, 0x9a, 0x16, 0xd4,
	0x88, 0x2a, 0x24, 0x0b, 0x79, 0x28, 0x02, 0x5f, 0xf1, 0xd0, 0x44, 0xb6, 0x4a, 0xa8, 0x6b, 0xdc,
	0x0f, 0x75, 0xb3, 0x44, 0x6a, 0x42, 0x23, 0x60, 0xa9, 0x24, 0x47, 0x9d, 0xc5, 0x15, 0xb1, 0x9f,
	0x51, 0x0c, 0x9d, 0xa7, 0x18, 0xea, 0x02, 0x04, 0x74, 0x81, 0x44, 0x5b, 0x20, 0x5a, 0x1b, 0x1c,
	0xa9, 0x72, 0x91, 0x0c, 0x2a, 0x11, 0x77, 0x91, 0x46, 0xd6, 0x60, 0x29, 0xf6, 0xdf, 0x31, 0xbd,
	0x42, 0xb6, 0xc1, 0xfa, 0x82, 0x26, 0xfa, 0x52, 0x72, 0xd9, 0x5e, 0xb2, 0x44, 0x6d, 0x34, 0x8c,
	0x6e, 0xb3, 0x49, 0xc4, 0x0d, 0x58, 0x46, 0x87, 0x65, 0x22, 0x51, 0x3c, 0x1f, 0xf9, 0x51, 0x7b,
	0x79, 0xa7, 0xb6, 0x5b, 0x47, 0x25, 0x0c, 0xfc, 0x98, 0xb3, 0x50, 0xe4, 0xed, 0x16, 0x99, 0x32,
	0x5a, 0x91, 0x9f, 0xe9, 0x38, 0xbc, 0x62, 0x29, 0xf2, 0x76, 0xac, 0x29, 0x0e, 0x51, 0x56, 0x61,
	0xf1, 0x26, 0x95, 0x4a, 0x93, 0x56, 0x89, 0xe4, 0x02, 0xf8, 0x61, 0x88, 0x51, 0x0d, 0x69, 0x2e,
	0xd1, 0x3a, 0xb0, 0x46, 0xcc, 0x25, 0x97, 0x12, 0x03, 0x5e, 0x90, 0x26, 0xd7, 0x62, 0xd0, 0x5e,
	0xa3, 0x98, 0xf4, 0x6d, 0x13, 0x93, 0xcc, 0xc5, 0xbc, 0xf2, 0x63, 0xde, 0xd3, 0xf3, 0x3a, 0x34,
	0x6d, 0x98, 0xfb, 0x18, 0x25, 0xdd, 0x27, 0xb0, 0x31, 0xc1, 0x24, 0xf6, 0x13, 0x71, 0xcd, 0xa5,
	0x6a, 0xaf, 0xd3, 0xe5, 0xfe, 0x7d, 0x0d, 0x56, 0x2d, 0x8f, 0x0e, 0xaa, 0x81, 0xee, 0xb6, 0x0d,
	0x4e, 0x90, 0x73, 0x5f, 0x71, 0x86, 0xdb, 0x92, 0xca, 0xb4, 0xa5, 0xba, 0x1f, 0xc3, 0xbc, 0xd5,
	0x56, 0x7d, 0x67, 0x66, 0x77, 0xe9, 0xf9, 0x87, 0x93, 0x72, 0x14, 0x3c, 0x9e, 0xd1, 0x34, 0xa6,
	0xb6, 0xbf, 0x34, 0x2b, 0x98, 0x42, 0x4d, 0xe8, 0x9f, 0x22, 0x34, 0x26, 0xb3, 0x05, 0x2b, 0x68,
	0x69, 0xe6, 0xb6, 0xe8, 0xec, 0x75, 0xab, 0x0f, 0x3d, 0xb5, 0x0c, 0x4b, 0x9e, 0x07, 0x4e, 0x69,
	0x87, 0xc6, 0x17, 0x5a, 0x30, 0x47, 0x76, 0x6d, 0x3d, 0xe9, 0x55, 0x79, 0x1c, 0x0a, 0xd5, 0x47,
	0x89, 0x50, 0x68, 0x3a, 0xbf, 0x1c, 0xfa, 0x91, 0x50, 0x63, 0xb3, 0xed, 0x32, 0xcc, 0x62, 0x60,
	0x0a, 0x8a, 0xcd, 0xe6, 0x47, 0x3c, 0x47, 0xf5, 0xe8, 0x08, 0xf5, 0xa2, 0xf6, 0xb1, 0xf7, 0x04,
	0x96, 0x2d, 0xa3, 0xf3, 0x5c, 0x24, 0xe4, 0xdd, 0x8a, 0xbf, 0x53, 0x26, 0x8a, 0xfc, 0xf7, 0x0c,
	0xb4, 0x0a, 0x61, 0xd2, 0x61, 0x12, 0x4a, 0x4c, 0x4d, 0x39, 0x8f, 0x04, 0x9d, 0x44, 0x22, 0xa9,
	0x50, 0xd9, 0x1c, 0x7d, 0x5a, 0x8d, 0xed, 0x4c, 0x6a, 0x4c, 0xaf, 0x7e, 0x46, 0x53, 0xb4, 0x2e,
	0xb6, 0xff, 0x7c, 0x06, 0x96, 0x2a, 0xdf, 0xa8, 0xb7, 0x34, 0x17, 0x03, 0x91, 0xb0, 0x77, 0xc4,
	0x73, 0xb5, 0x42, 0x19, 0xd3, 0x19, 0xaa, 0x94, 0xaf, 0xe9, 0x10, 0xab, 0xa8, 0x9a, 0x51, 0x1a,
	0x0d, 0x4d, 0x90, 0xa5, 0x14, 0x19, 0xf2, 0xc8, 0x1f, 0x33, 0x1d, 0xdb, 0x67, 0xc9, 0x80, 0xb7,
	0x60, 0xa5, 0xc8, 0xb3, 0x26, 0xa1, 0xce, 0x59, 0xb7, 0xe5, 0x89, 0x12, 0x6a, 0xcc, 0x44, 0x12,
	0xf2, 0x77, 0xe4, 0x73, 0xe4, 0x84, 0xc1, 0x8d, 0x9f, 0x24, 0x3c, 0x22, 0x87, 0x23, 0x4d, 0x66,
	0x42, 0x05, 0x37, 0xe4, 0x65, 0xf4, 0x79, 0x1d, 0xf9, 0x03, 0xeb, 0x5f, 0xab, 0xb0, 0x48, 0xe7,
	0x40, 0xd6, 0xe4, 0x5d, 0x54, 0x68, 0x14, 0x24, 0x76, 0xe3, 0x27, 0x61, 0xc4, 0xc9, 0xc5, 0xe6,
	0x29, 0xb5, 0x67, 0xdc, 0xbf, 0xe5, 0x39, 0xd3, 0x3b, 0x93, 0x8f, 0x91, 0x3f, 0xe6, 0x7e, 0x12,
	0xa6, 0x31, 0x93, 0x9c, 0x87, 0xe4, 0x66, 0x3a, 0x8b, 0x11, 0x9b, 0x88, 0x8f, 0x78, 0x44, 0x9e,
	0x46, 0x44, 0x21, 0x99, 0xe4, 0x89, 0xc2, 0xf3, 0x90, 0xb3, 0x51, 0xc1, 0x24, 0x24, 0xf3, 0xe3,
	0x2b, 0xb2, 0xe2, 0x55, 0x1b, 0x59, 0x06, 0x98, 0xba, 0x5d, 0x12, 0xe9, 0x21, 0xac, 0x6a, 0x5e,
	0x39, 0x97, 0xe9, 0x30, 0x0f, 0x38, 0xda, 0x27, 0x7a, 0xd9, 0x9c, 0xf7, 0x07, 0xa5, 0xc9, 0x9d,
	0xe7, 0xfc, 0x9a, 0xab, 0xe0, 0xa6, 0xdc, 0x5a, 0x2b, 0x46, 0x5b, 0xd4, 0x27, 0xb0, 0x5c, 0xac,
	0xa6, 0xb0, 0x5c, 0xa7, 0xb0, 0xec, 0xea, 0xbb, 0xb6, 0x6b, 0xfb, 0xe3, 0x8c, 0xbf, 0x58, 0x3c,
	0x3f, 0xec, 0xb3, 0xde, 0xd9, 0x9b, 0xd3, 0x03, 0xef, 0x53, 0x58, 0xa9, 0x58, 0xf4, 0xa5, 0xe0,
	0x6f, 0xef, 0xe9, 0xbd, 0xc8, 0x44, 0x14, 0x8c, 0x74, 0xdc, 0xee, 0x96, 0x52, 0x1d, 0x8a, 0x77,
	0xfb, 0xc9, 0x20, 0xa2, 0xec, 0x95, 0xf3, 0xc8, 0x57, 0x62, 0xc4, 0x8d, 0xdd, 0x7d, 0x08, 0xb3,
	0x3e, 0x0e, 0xd1, 0xa2, 0xa5, 0xe7, 0x4e, 0x59, 0xc4, 0x7c, 0x45, 0x4b, 0xbc, 0xcf, 0x61, 0xb3,
	0x70, 0xdb, 0x3c, 0x95, 0xf2, 0xc6, 0x17, 0xb9, 0x66, 0x56, 0x2c, 0xad, 0xbd, 0x67, 0xe9, 0x5f,
	0xd6, 0x4a, 0x11, 0x5e, 0xf6, 0xce, 0x0f, 0x78, 0xe0, 0x47, 0xee, 0x13, 0x98, 0xc9, 0x52, 0x79,
	0x7f, 0xcd, 0x25, 0x0f, 0x54, 0x9a, 0x63, 0xfd, 0x19, 0xe2, 0x3c, 0x86, 0x6e, 0x34, 0xcc, 0xb9,
	0x39, 0x60, 0x7d, 0xaa, 0xb9, 0xcd, 0x14, 0xf1, 0x39, 0x0d, 0x79, 0x64, 0x88, 0x0d, 0x3b, 0x35,
	0x4a, 0xdf, 0xb2, 0x2c, 0x17, 0x69, 0x8e, 0x56, 0x42, 0xc9, 0xc2, 0xfb, 0x63, 0x58, 0x2b, 0x54,
	0x89, 0xd9, 0xb9, 0x17, 0xe4, 0x9c, 0x27, 0xee, 0x01, 0x34, 0x2a, 0x59, 0xf2, 0x89, 0x16, 0xaa,
	0x5b, 0x99, 0x61, 0xb2, 0x3f, 0xdd, 0xcc, 0xd6, 0x49, 0xef, 0x15, 0xeb, 0x9d, 0x1f, 0x1f, 0xf5,
	0x7b, 0x9d, 0x8b, 0x6e, 0xf7, 0x94, 0xed, 0x1f, 0x1c, 0xbc, 0xe9, 0x75, 0x2f, 0x26, 0xd5, 0x8f,
	0x02, 0x98, 0x04, 0x51, 0x91, 0xd5, 0xfb, 0x1c, 0xd6, 0x8b, 0x60, 0xcc, 0xd5, 0xfb, 0xeb, 0x2f,
	0xac, 0x9a, 0x46, 0x7e, 0x5e, 0x09, 0x76, 0xde, 0xcf, 0xa0, 0x69, 0x97, 0x9e, 0xf0, 0x64, 0x48,
	0x9e, 0x2a, 0xfc, 0x28, 0x9d, 0x28, 0x46, 0xb6, 0x60, 0x25, 0xe6, 0xc9, 0x90, 0xdd, 0x72, 0xe3,
	0xc1, 0xd2, 0xd4, 0x25, 0xff, 0x54, 0x2f, 0x63, 0x5e, 0x8f, 0x27, 0x61, 0x1f, 0x23, 0x10, 0x6e,
	0x2b, 0x24, 0xe3, 0x45, 0x14, 0xda, 0x84, 0x56, 0xc2, 0xd5, 0xfd, 0x40, 0xbb, 0x01, 0xcb, 0x09,
	0xe7, 0x21, 0x66, 0x68, 0x0c, 0x89, 0xb9, 0xc9, 0xcf, 0x3f, 0x82, 0xd9, 0x2c, 0x4f, 0x33, 0xd9,
	0x6e, 0x50, 0xcc, 0xf2, 0xee, 0xc4, 0x2c, 0xbb, 0xcd, 0x33, 0x44, 0x37, 0x38, 0x91, 0xa9, 0xed,
	0x7f, 0xa8, 0x01, 0x94, 0x9f, 0x14, 0x2f, 0x4b, 0xe9, 0x1d, 0x58, 0x98, 0x3c, 0x74, 0x19, 0x2a,
	0x8a, 0xa2, 0xb0, 0xb8, 0xd1, 0x86, 0x8d, 0x35, 0xa1, 0xc9, 0x91, 0xb3, 0xb4, 0x62, 0x1d, 0x9a,
	0x18, 0x34, 0x78, 0xc4, 0x63, 0xca, 0xe1, 0x73, 0x56, 0x9f, 0x68, 0x0e, 0x3a, 0xa8, 0xcd, 0x53,
	0x50, 0x73, 0x01, 0x6e, 0xc4, 0xe0, 0xc6, 0xd0, 0x16, 0x6c, 0xa6, 0x26, 0xf4, 0x23, 0x94, 0xd4,
	0xb1, 0xca, 0xfb, 0xcf, 0x1a, 0x6c, 0x54, 0xd3, 0x27, 0xd5, 0xd7, 0x58, 0x6a, 0xbb, 0x5f, 0x60,
	0xa4, 0x94, 0x41, 0x2e, 0x32, 0x95, 0xe6, 0x92, 0x6a, 0xec, 0xa5, 0xe7, 0xbb, 0xf7, 0x13, 0x6e,
	0xb1, 0xe2, 0x59, 0x39, 0x9d, 0xa9, 0xed, 0x8f, 0x60, 0x16, 0x2f, 0xe9, 0xae, 0x0a, 0x6c, 0x8d,
	0x4d, 0xc7, 0xdf, 0xfe, 0x43, 0x68, 0x56, 0x17, 0xe1, 0x69, 0xa9, 0xac, 0x2f, 0x52, 0xe3, 0xc4,
	0x74, 0xf7, 0x87, 0xd0, 0xb8, 0xe5, 0x63, 0x54, 0x16, 0xca, 0xf2, 0xf4, 0x9b, 0x64, 0xa1, 0xbd,
	0xbd, 0xbf, 0xa9, 0x97, 0xde, 0x7d, 0xee, 0x07, 0xb7, 0x5c, 0x75, 0xd1, 0xbf, 0x04, 0x97, 0xb6,
	0xea, 0xe1, 0x89, 0xca, 0x05, 0x97, 0xa5, 0x79, 0x0d, 0xb3, 0x10, 0x2b, 0xb4, 0x62, 0xa0, 0x6e,
	0x2f, 0x86, 0xea, 0xb7, 0xc8, 0x60, 0xc0, 0x85, 0x72, 0x2a, 0xb3, 0xa8, 0xc5, 0xd4, 0x70, 0x0e,
	0x2c, 0x14, 0x94, 0x59, 0x5a, 0xec, 0x02, 0xd0, 0x4a, 0x76, 0x9d, 0xa7, 0xb1, 0xb9, 0xb0, 0x35,
	0x58, 0x32, 0xae, 0x4e, 0x45, 0xe6, 0x3c, 0xe1, 0xbd, 0x6d, 0x70, 0x33, 0x9e, 0x60, 0xb1, 0xcf,
	0xae, 0x87, 0x51, 0xc4, 0xae, 0x73, 0x3c, 0xfb, 0x02, 0xb1, 0xdd, 0x81, 0xb6, 0x1f, 0x60, 0x60,
	0x63, 0x32, 0xf3, 0xdf, 0x26, 0x54, 0xc1, 0xda, 0xd4, 0xb1, 0x48, 0x11, 0xfc, 0x3b, 0xf0, 0x21,
	0x9e, 0xa8, 0x32, 0x4c, 0xe5, 0x8b, 0x48, 0x13, 0x9b, 0xdc, 0x28, 0x21, 0x2d, 0x7b, 0x17, 0xa5,
	0x93, 0xf6, 0x79, 0x9c, 0x15, 0x2a, 0xd1, 0xd1, 0x93, 0x72, 0xb7, 0xf1, 0x97, 0x35, 0x58, 0x22,
	0x63, 0x9b, 0xd0, 0xc5, 0x1d, 0xd1, 0x35, 0x24, 0xfe, 0xdf, 0x1a, 0x3c, 0x2c, 0xe3, 0x28, 0x56,
	0x4d, 0x3d, 0x2a, 0x41, 0xb5, 0x1f, 0xda, 0x6b, 0xa4, 0xb2, 0x61, 0x3a, 0xd7, 0xc7, 0xb0, 0x3e,
	0x94, 0x3c, 0x27, 0x9e, 0xec, 0x5a, 0xbc, 0x43, 0xa4, 0x2a, 0xbe, 0xe6, 0x46, 0xdb, 0x9b, 0xd0,
	0x2a, 0x47, 0x89, 0xae, 0xdd, 0xe3, 0x11, 0xac, 0x4d, 0xd2, 0xb5, 0x6d, 0xcf, 0x4e, 0xe6, 0xe1,
	0xb9, 0x12, 0xf3, 0x51, 0x59, 0x5c, 0x51, 0xf9, 0x43, 0x58, 0x9d, 0x44, 0xc7, 0xc8, 0x7b, 0x61,
	0xa2, 0x2c, 0x2b, 0x47, 0x49, 0xd1, 0x0b, 0x1e, 0x2b, 0x8f, 0xfa, 0x86, 0x4c, 0xa0, 0x7a, 0x54,
	0x07, 0x16, 0x74, 0x78, 0x29, 0x6c, 0xd8, 0xb4, 0x1c, 0xb0, 0x64, 0x18, 0xdc, 0x33, 0xac, 0x3b,
	0x42, 0x69, 0x65, 0xfe, 0x45, 0xed, 0x4e, 0x01, 0xf7, 0xff, 0xc7, 0xe3, 0x18, 0x68, 0x75, 0xa9,
	0x5a, 0xb7, 0x81, 0x21, 0xcb, 0xd3, 0x77, 0x22, 0xc6, 0x90, 0x32, 0x63, 0xf3, 0x3e, 0x41, 0xf6,
	0x06, 0x41, 0xf6, 0x75, 0x68, 0x22, 0x57, 0x94, 0x98, 0xb0, 0xf4, 0xac, 0xf5, 0x3b, 0x82, 0xe6,
	0xba, 0x3d, 0xf0, 0xfa, 0xae, 0x17, 0x5d, 0x18, 0x33, 0x29, 0xe6, 0x15, 0xd8, 0xc7, 0xf6, 0x8b,
	0x48, 0x8f, 0x75, 0x7b, 0x0d, 0x88, 0xb5, 0xcd, 0x55, 0x7a, 0xfd, 0x92, 0xd9, 0xe1, 0x30, 0x8a,
	0x0e, 0xd1, 0xc6, 0x29, 0x15, 0xdd, 0x61, 0xb6, 0x02, 0xf3, 0xa6, 0xc9, 0x51, 0xf2, 0x51, 0xa9,
	0xf2, 0x23, 0x13, 0x2b, 0x2d, 0x3e, 0x6b, 0x90, 0xca, 0xde, 0x94, 0xf0, 0xec, 0xcb, 0xe3, 0xfe,
	0xa5, 0x81, 0x99, 0x2d, 0x98, 0x8b, 0x7d, 0xa9, 0x78, 0x6e, 0x2c, 0x0f, 0x2b, 0x37, 0x83, 0x7d,
	0x4a, 0xd9, 0xa2, 0x54, 0xd9, 0xf8, 0xbb, 0x02, 0xf3, 0xa4, 0x2d, 0x2e, 0xb5, 0x7d, 0x79, 0xdf,
	0x2d, 0xa3, 0xa3, 0xc5, 0xaf, 0xdc, 0x8f, 0x8f, 0x0e, 0x08, 0xcf, 0xe0, 0x4f, 0x7b, 0xcd, 0x0d,
	0xc2, 0x91, 0xd6, 0x01, 0xde, 0x8f, 0x23, 0x7f, 0xaa, 0x3b, 0x47, 0x47, 0xe7, 0x9d, 0xfd, 0x30,
	0x24, 0x38, 0x4f, 0xfd, 0x81, 0x38, 0x1b, 0x2a, 0x9e, 0x33, 0xaa, 0xc7, 0x6a, 0x74, 0x2f, 0x88,
	0xda, 0xf3, 0x34, 0xe0, 0x1a, 0x28, 0x50, 0x17, 0xca, 0xfb, 0x95, 0xe9, 0x3b, 0x19, 0x78, 0xcc,
	0x79, 0x7e, 0x17, 0xa7, 0x95, 0xaa, 0x43, 0xe1, 0x8a, 0xbe, 0xcc, 0x53, 0x98, 0x11, 0x59, 0x40,
	0x87, 0x9c, 0x30, 0x9c, 0x49, 0x31, 0xd4, 0x0d, 0x1f, 0xb3, 0x1b, 0xee, 0xe7, 0x6c, 0x9c, 0x0e,
	0x4d, 0x34, 0xdb, 0x80, 0xe5, 0x71, 0x3a, 0xd4, 0x54, 0x75, 0xc3, 0x63, 0x83, 0x4a, 0x1f, 0xc3,
	0xba, 0x90, 0x2c, 0xa2, 0x96, 0x8c, 0x81, 0xbb, 0x08, 0xe6, 0xc8, 0x5e, 0x16, 0xbc, 0xcf, 0x2a,
	0x05, 0x23, 0xe7, 0x39, 0xa5, 0x13, 0x0f, 0x1a, 0x19, 0xa7, 0x8b, 0x98, 0x99, 0x94, 0xa1, 0x3c,
	0x8c, 0xf7, 0xdb, 0xf0, 0xb8, 0x84, 0x50, 0xdc, 0xcf, 0xf7, 0xa3, 0xa8, 0xe2, 0x5a, 0xd2, 0xa0,
	0xdf, 0x4a, 0x24, 0xa9, 0xc0, 0x61, 0xad, 0xa1, 0xbf, 0xae, 0xc3, 0x87, 0xe7, 0x08, 0xc8, 0x0f,
	0x23, 0x5f, 0x29, 0x9e, 0xf0, 0xb0, 0xc7, 0x73, 0xe1, 0x47, 0xe2, 0x6b, 0x9e, 0x1f, 0x0a, 0x1e,
	0x85, 0x4c, 0xa1, 0x95, 0x62, 0x16, 0xc6, 0xa4, 0xc4, 0xe4, 0x38, 0x2e, 0x6d, 0xd7, 0xe6, 0x66,
	0xa2, 0x16, 0xee, 0x73, 0x25, 0x94, 0x81, 0xf2, 0x33, 0xf7, 0x53, 0x6d, 0x63, 0x4a, 0xaa, 0xd5,
	0x98, 0x82, 0x6a, 0x39, 0xdd, 0xf8, 0xa9, 0xc4, 0xa0, 0xa7, 0xf0, 0xf0, 0x9a, 0xc4, 0x90, 0x85,
	0x58, 0xe5, 0x96, 0x1a, 0x5d, 0xec, 0x40, 0xfb, 0xde, 0x14, 0x0b, 0xcc, 0x16, 0x2c, 0x0c, 0xa7,
	0x7e, 0x6a, 0x82, 0xdc, 0x71, 0xe1, 0xa2, 0x8d, 0x57, 0x78, 0x02, 0xbd, 0x6b, 0x4e, 0x03, 0x04,
	0x40, 0xbc, 0x5b, 0xd8, 0x7e, 0x9f, 0x4e, 0x98, 0xc2, 0xf0, 0x34, 0x4d, 0x18, 0xad, 0x95, 0x6d,
	0x70, 0xa7, 0x88, 0x51, 0x54, 0x80, 0x24, 0xa8, 0x2c, 0x2a, 0xc0, 0x99, 0xdd, 0x59, 0xef, 0xef,
	0x6a, 0xf0, 0xa8, 0xf0, 0xef, 0xfb, 0x1b, 0xba, 0x9f, 0xc2, 0x52, 0xc9, 0xd1, 0x96, 0x15, 0x3b,
	0x16, 0x21, 0xbc, 0x57, 0x4a, 0x34, 0xe9, 0x71, 0x7c, 0x95, 0x46, 0x1a, 0x40, 0x2e, 0xba, 0x9f,
	0xc2, 0x9c, 0xde, 0xdd, 0x54, 0x03, 0xdf, 0xfa, 0x66, 0x16, 0xe6, 0xf2, 0xbd, 0xa7, 0x95, 0x32,
	0x51, 0xa5, 0x19, 0xe1, 0xce, 0x02, 0x09, 0x51, 0x5b, 0xda, 0x1b, 0xc3, 0x07, 0x9d, 0x97, 0x22,
	0x14, 0xb9, 0xee, 0x39, 0x5d, 0xe5, 0xa9, 0x1f, 0x06, 0xbe, 0x54, 0x45, 0x81, 0x41, 0xb5, 0x6f,
	0x2a, 0x95, 0x4a, 0xb5, 0xe9, 0x9b, 0x64, 0xb9, 0x02, 0xf3, 0x57, 0xc3, 0xeb, 0x02, 0xf7, 0x50,
	0x9b, 0x56, 0x47, 0x9b, 0x2b, 0xa1, 0x4a, 0x0b, 0x22, 0xf4, 0x97, 0xf3, 0x80, 0x8b, 0x91, 0x48,
	0x06, 0x36, 0x1c, 0x35, 0x28, 0x86, 0x3c, 0x87, 0x47, 0x53, 0xb7, 0xee, 0x11, 0xa6, 0xa2, 0xcc,
	0x4b, 0xfd, 0x4f, 0xfa, 0x34, 0x2d, 0xb6, 0x1f, 0xc3, 0x66, 0x71, 0xcc, 0xf0, 0x94, 0x2b, 0xe3,
	0xd0, 0x4c, 0x11, 0xa4, 0x2b, 0x46, 0x0c, 0xb9, 0x5d, 0xdb, 0xa9, 0xef, 0x36, 0xbd, 0x7f, 0xae,
	0xc3, 0x5a, 0x75, 0xa7, 0xc8, 0x1f, 0x53, 0xcf, 0xe3, 0x35, 0x2c, 0xa6, 0x19, 0xd7, 0x5d, 0x13,
	0x9a, 0xda, 0xb2, 0x8a, 0x9d, 0x32, 0xfb, 0xd9, 0x99, 0x9d, 0xca, 0xd4, 0x8b, 0xd5, 0x8b, 0xa3,
	0x33, 0x76, 0xd1, 0xfd, 0xea, 0x4d, 0xb7, 0xd7, 0x67, 0x17, 0xdd, 0xe3, 0xfd, 0x5f, 0xb8, 0x5f,
	0xc0, 0x56, 0xb9, 0x7f, 0xdf, 0xcf, 0x07, 0x85, 0x70, 0x06, 0x8d, 0x3d, 0xd6, 0xac, 0xdf, 0x23,
	0xfe, 0x26, 0xb4, 0xfc, 0x30, 0x14, 0xc8, 0xdf, 0x8f, 0xbe, 0xc4, 0x32, 0x5c, 0xb7, 0x95, 0xff,
	0x08, 0x96, 0x2a, 0x1b, 0xbb, 0x1b, 0x70, 0x7f, 0x6b, 0xe7, 0x81, 0xeb, 0x42, 0x0b, 0xc9, 0xbf,
	0x7b, 0x74, 0x7c, 0x6c, 0x68, 0x35, 0xd7, 0x81, 0x26, 0xd2, 0x4e, 0xcf, 0xd8, 0xc5, 0xd9, 0x9b,
	0x7e, 0xd7, 0x41, 0x2f, 0x75, 0xf4, 0xe2, 0xdf, 0xe9, 0x76, 0xec, 0xda, 0x19, 0xf7, 0x31, 0xb4,
	0x91, 0xda, 0xed, 0xf5, 0xf7, 0x5f, 0x1e, 0x1f, 0xf5, 0xbe, 0x64, 0x9d, 0xb3, 0xd3, 0xd3, 0x6e,
	0xa7, 0x7f, 0x74, 0x76, 0xea, 0x34, 0xbc, 0x3e, 0xac, 0xf4, 0xc4, 0x20, 0xe1, 0xe1, 0xb9, 0x3f,
	0x8e, 0x52, 0x1f, 0x43, 0x0a, 0x35, 0x16, 0xe9, 0xe3, 0x40, 0x87, 0xfa, 0xfa, 0x6e, 0x93, 0x70,
	0xbf, 0x18, 0x24, 0x3e, 0xc2, 0xbc, 0x76, 0x7d, 0xa7, 0xae, 0x41, 0xf6, 0x95, 0x59, 0xd5, 0x4d,
	0x82, 0x7c, 0x9c, 0xe9, 0x5e, 0x60, 0x7d, 0x77, 0xc1, 0xfb, 0x9f, 0x3a, 0x6c, 0xdc, 0xd1, 0xb1,
	0xce, 0xb5, 0x64, 0x6d, 0x39, 0x1f, 0xdd, 0xa4, 0x99, 0x36, 0xa2, 0x1a, 0xb1, 0xfa, 0x04, 0x5a,
	0xba, 0xd5, 0xe1, 0x47, 0x08, 0x44, 0x78, 0x4e, 0x5b, 0xfc, 0x3a, 0x9d, 0x7e, 0x1f, 0x96, 0x65,
	0x55, 0x76, 0xda, 0x7c, 0xe9, 0xf9, 0x86, 0x59, 0x74, 0xe7, 0x58, 0x27, 0x88, 0xe7, 0x03, 0x91,
	0x09, 0x53, 0x55, 0x1b, 0x1c, 0xf4, 0xd9, 0x54, 0x8b, 0xd0, 0xd2, 0x1a, 0x1e, 0x07, 0x5c, 0x2a,
	0x91, 0xd0, 0x15, 0x15, 0x9b, 0x6f, 0xff, 0x69, 0x0d, 0xb6, 0xdf, 0x3f, 0x8c, 0x27, 0x9a, 0x34,
	0x57, 0x3a, 0xe9, 0xaf, 0x3b, 0xd1, 0x14, 0x2d, 0x3f, 0x82, 0x35, 0x6e, 0xb5, 0x6b, 0x0e, 0xf3,
	0x9a, 0x8f, 0x4d, 0x6d, 0xf5, 0xab, 0x39, 0xd8, 0x2c, 0xd3, 0xce, 0xa9, 0x7e, 0xc8, 0xc2, 0x72,
	0x41, 0x22, 0xab, 0xb2, 0x43, 0x5b, 0xb3, 0x0d, 0xd9, 0x20, 0x1b, 0xb2, 0x21, 0xd6, 0x34, 0xa5,
	0x57, 0xc7, 0x3c, 0x4e, 0xf3, 0x31, 0x1b, 0x62, 0xc1, 0x18, 0x5f, 0x95, 0x8f, 0x32, 0x86, 0x7e,
	0x9d, 0x73, 0x8e, 0x74, 0x5d, 0xa2, 0xb6, 0x60, 0x6e, 0x98, 0x29, 0x11, 0x5b, 0x34, 0x80, 0x15,
	0x1f, 0x96, 0xe8, 0x26, 0xa9, 0x14, 0xb5, 0x29, 0xd5, 0x88, 0x26, 0x1a, 0x2c, 0x58, 0xd0, 0x41,
	0x68, 0x2d, 0xb5, 0x68, 0x8d, 0xf0, 0xeb, 0x30, 0x66, 0x32, 0xe3, 0x81, 0xf2, 0x09, 0x96, 0x81,
	0xcd, 0x08, 0x48, 0x57, 0x23, 0x96, 0xe3, 0x55, 0xd8, 0x26, 0xee, 0x12, 0xcc, 0x5c, 0x67, 0x92,
	0x3a, 0x4b, 0x75, 0xf7, 0x63, 0x98, 0xcd, 0xd2, 0x5c, 0xc9, 0xf6, 0xea, 0x04, 0x7a, 0x9a, 0xaa,
	0x8a, 0x67, 0xe7, 0x69, 0xae, 0x30, 0xa1, 0xf8, 0xa3, 0x01, 0x8b, 0x7c, 0xc5, 0x93, 0x60, 0xcc,
	0xd2, 0xa1, 0xa2, 0x5e, 0x51, 0x9d, 0x3c, 0xb3, 0x32, 0x20, 0x12, 0x6a, 0x14, 0xd5, 0xed, 0x82,
	0x8c, 0x2c, 0x41, 0xd2, 0x82, 0xf5, 0xea, 0x02, 0x3b, 0x20, 0x92, 0xf6, 0x86, 0x4d, 0x92, 0xc4,
	0x28, 0x95, 0x7a, 0xf6, 0x26, 0x51, 0xd7, 0x60, 0xa9, 0xa0, 0x8a, 0xa4, 0xbd, 0x55, 0x9d, 0x4a,
	0x15, 0x39, 0x4e, 0x6d, 0x57, 0xa7, 0x12, 0x55, 0x24, 0xed, 0x87, 0x44, 0xc4, 0x52, 0x06, 0x0b,
	0xc5, 0x82, 0xbc, 0x8d, 0xc1, 0x15, 0xc3, 0xae, 0x26, 0x57, 0xc4, 0x78, 0x44, 0x23, 0x9b, 0xd0,
	0xaa, 0x2c, 0x40, 0xee, 0x8f, 0x89, 0xfe, 0x10, 0x56, 0x27, 0x57, 0xe0, 0xd0, 0x13, 0x1a, 0xfa,
	0x04, 0xe6, 0x75, 0xdd, 0x25, 0xdb, 0x1f, 0x90, 0x3e, 0x3f, 0xfa, 0x66, 0x7d, 0xd2, 0xdc, 0x6d,
	0x0f, 0x1a, 0xa4, 0xd9, 0x26, 0x34, 0xf0, 0x2e, 0xa6, 0x62, 0xe2, 0x3f, 0xab, 0xc1, 0x9c, 0x9e,
	0x5e, 0xad, 0xe3, 0xa8, 0xc6, 0xa4, 0x2e, 0x20, 0x8f, 0x53, 0xc5, 0x99, 0x8f, 0xfe, 0xa1, 0x51,
	0xf1, 0x26, 0xb4, 0x32, 0x04, 0x10, 0x52, 0x85, 0x21, 0x1f, 0xb1, 0x58, 0x96, 0x7d, 0x23, 0xa2,
	0xa3, 0x82, 0x62, 0x53, 0xd0, 0xe2, 0x15, 0xe9, 0xc3, 0x68, 0xf5, 0x66, 0x81, 0x32, 0xf5, 0x8a,
	0x6e, 0x95, 0x5c, 0xa5, 0xa6, 0x86, 0xdb, 0xfb, 0xaf, 0x3a, 0x34, 0x3b, 0xc7, 0x1d, 0x66, 0x5a,
	0x43, 0x12, 0x03, 0x6a, 0x10, 0x05, 0x95, 0x77, 0x5d, 0x67, 0xdd, 0x6d, 0xc2, 0x02, 0xd2, 0x4e,
	0xd2, 0x11, 0x77, 0x36, 0xdc, 0x55, 0x58, 0xc6, 0xaf, 0x02, 0xb1, 0x38, 0x9b, 0xee, 0x1a, 0xac,
	0x20, 0xa9, 0xf2, 0xfc, 0xe7, 0x6c, 0x61, 0xd0, 0x45, 0x62, 0xf5, 0x41, 0xcf, 0x69, 0xbb, 0x6d,
	0x58, 0x47, 0xea, 0xdd, 0xa7, 0x3b, 0xe7, 0xa1, 0x9d, 0x5f, 0x7d, 0x76, 0x73, 0xb6, 0xdd, 0x2d,
	0x58, 0x23, 0x2e, 0x93, 0xaf, 0x63, 0xce, 0x23, 0x77, 0x1b, 0x36, 0x71, 0xe0, 0xfe, 0x4b, 0x98,
	0xf3, 0x18, 0x93, 0x45, 0x79, 0x08, 0x73, 0x34, 0xe7, 0x89, 0xfb, 0x04, 0x1e, 0xde, 0x59, 0x52,
	0xbe, 0x68, 0x39, 0x1f, 0x58, 0x01, 0xaa, 0x2f, 0x58, 0xce, 0x87, 0x56, 0x21, 0xe5, 0x5b, 0x95,
	0xb3, 0x63, 0x67, 0x56, 0x5f, 0xa0, 0x9c, 0xa7, 0x96, 0x5a, 0x85, 0x05, 0x8e, 0xb7, 0xf7, 0xb7,
	0x0d, 0x68, 0xf6, 0x2e, 0x27, 0x35, 0x2c, 0x47, 0x41, 0xe5, 0x79, 0xc9, 0xd9, 0x75, 0x1f, 0xc1,
	0x16, 0xd2, 0xa6, 0x54, 0x34, 0xce, 0x77, 0x51, 0xe1, 0x38, 0x58, 0x3c, 0x37, 0x38, 0x7b, 0x98,
	0xe2, 0x34, 0x0f, 0xb3, 0xf9, 0xf7, 0xdc, 0x87, 0xb0, 0x41, 0x93, 0xee, 0x82, 0x72, 0xe7, 0xfb,
	0x76, 0xe8, 0x1e, 0x88, 0x75, 0x7e, 0x60, 0x59, 0x17, 0xcf, 0x07, 0xce, 0xb3, 0x09, 0x12, 0x5d,
	0xef, 0x0f, 0xdd, 0x65, 0x58, 0x44, 0x12, 0xbd, 0x0d, 0x38, 0x1f, 0xbb, 0x2d, 0x00, 0xda, 0x9c,
	0x9a, 0xf9, 0xce, 0x8f, 0xdc, 0x15, 0x58, 0x32, 0xc2, 0x5c, 0x0a, 0xfe, 0xd6, 0x79, 0x8e, 0x89,
	0x55, 0x0b, 0x7c, 0xbf, 0xb8, 0x77, 0x7e, 0x8c, 0x6a, 0xa2, 0xd1, 0xaa, 0x9a, 0x3e, 0xb1, 0x27,
	0xb2, 0x0d, 0x56, 0xe7, 0x53, 0x34, 0x2a, 0x62, 0x5b, 0xf6, 0x2f, 0x9d, 0xcf, 0xdc, 0x4d, 0x70,
	0x49, 0x94, 0x89, 0x2e, 0x8f, 0xf3, 0x13, 0xbb, 0xdc, 0x36, 0x9f, 0x9d, 0xdf, 0x44, 0xa3, 0x45,
	0xca, 0x09, 0x4f, 0x86, 0xce, 0xe7, 0x76, 0xd3, 0x6a, 0xb7, 0xd2, 0x79, 0x61, 0xcf, 0x5a, 0x94,
	0x88, 0xce, 0x4f, 0x0b, 0x46, 0x06, 0xd0, 0x38, 0x3f, 0x9b, 0xdc, 0xd2, 0x42, 0x62, 0xe7, 0x0b,
	0x7b, 0x8f, 0x25, 0x0e, 0x75, 0x7e, 0x0b, 0x0d, 0xaf, 0xbc, 0x5b, 0x03, 0x22, 0x9d, 0x9f, 0x5b,
	0x16, 0x93, 0x40, 0xd8, 0x39, 0xdc, 0x3b, 0x86, 0xd5, 0x7b, 0x7f, 0x1d, 0x40, 0xc3, 0x9e, 0xfe,
	0xe7, 0x01, 0xe7, 0x01, 0xda, 0xc9, 0xbd, 0xb1, 0xee, 0xe9, 0xab, 0xa3, 0xd3, 0xae, 0x53, 0xdb,
	0x7b, 0x09, 0xad, 0xc9, 0x37, 0x51, 0xd4, 0x81, 0x7d, 0x15, 0x75, 0x1e, 0xe0, 0xbd, 0x5d, 0x9c,
	0xb3, 0x37, 0xa7, 0xfa, 0xbb, 0x46, 0xb5, 0xd3, 0x39, 0xeb, 0x9f, 0xbd, 0x7a, 0x75, 0xdc, 0xd5,
	0xb4, 0xfa, 0xde, 0x13, 0x68, 0x56, 0x1b, 0xf8, 0x78, 0xf5, 0x45, 0x0b, 0xdf, 0x79, 0xb0, 0x77,
	0x09, 0x5b, 0xef, 0x69, 0x28, 0xa3, 0x68, 0xef, 0x69, 0x29, 0x3b, 0x0f, 0xdc, 0x0f, 0x60, 0xfb,
	0xee, 0xe0, 0x45, 0xf7, 0xe4, 0xec, 0xb2, 0x4b, 0xe3, 0xb5, 0xbd, 0x7f, 0xac, 0xc1, 0x46, 0xf7,
	0xab, 0x21, 0xcf, 0xc7, 0xc5, 0xf5, 0x18, 0x6c, 0xff, 0x2d, 0x78, 0xca, 0xa7, 0x0d, 0x30, 0xfa,
	0x7d, 0x94, 0x28, 0x3f, 0x50, 0xce, 0x03, 0xf7, 0xdb, 0xe0, 0x4d, 0x9f, 0x86, 0xdf, 0xa7, 0xa9,
	0x3a, 0xa4, 0xeb, 0xad, 0xb9, 0x1e, 0x7c, 0x30, 0x7d, 0xde, 0x69, 0xaa, 0xf6, 0x91, 0xe6, 0xd4,
	0xdd, 0xef, 0xc0, 0x47, 0xef, 0xe7, 0x85, 0xc8, 0x83, 0x07, 0x8a, 0x87, 0xce, 0xcc, 0xde, 0x0d,
	0x2c, 0x1d, 0x1c, 0xed, 0x1f, 0x9f, 0xbd, 0x62, 0xfd, 0x5f, 0x9c, 0x77, 0x51, 0xbf, 0xe6, 0xf3,
	0xa4, 0xf7, 0xca, 0x79, 0x80, 0x7e, 0x61, 0xbf, 0xbb, 0xa7, 0x6f, 0x9c, 0x5a, 0x85, 0xd0, 0xef,
	0xfe, 0x5e, 0xdf, 0xa9, 0xa3, 0xb1, 0x19, 0x42, 0xf7, 0xb4, 0x7f, 0x81, 0x35, 0xe9, 0x06, 0xac,
	0x1a, 0xca, 0x7e, 0xef, 0xb5, 0xa9, 0x47, 0x9d, 0xc6, 0xde, 0xf7, 0xe0, 0x61, 0x35, 0x86, 0xb0,
	0xe3, 0xf4, 0xed, 0x61, 0xae, 0xdb, 0x7d, 0x63, 0xb7, 0xa5, 0xdd, 0x33, 0x1c, 0xc6, 0xf1, 0xd8,
	0xf9, 0xf7, 0xc6, 0x9e, 0x0f, 0x9b, 0x54, 0xb3, 0xe9, 0xb6, 0x8a, 0x1f, 0x95, 0xa1, 0xe7, 0x11,
	0x6c, 0x5d, 0x89, 0xa9, 0x60, 0xc7, 0x71, 0x30, 0x32, 0x4f, 0x0e, 0x6a, 0x38, 0xe2, 0xac, 0xa2,
	0x98, 0x57, 0xa2, 0xec, 0xbc, 0x3a, 0xee, 0xde, 0x09, 0x7c, 0x34, 0x7d, 0x8b, 0x49, 0xc9, 0x56,
	0x69, 0x61, 0x81, 0x24, 0x9c, 0x7f, 0xc1, 0x74, 0xd5, 0xb2, 0x24, 0xed, 0x51, 0xce, 0xbf, 0xce,
	0xbe, 0x9c, 0xf9, 0x93, 0xda, 0x83, 0xff, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x3c, 0xc1, 0x07, 0x4b,
	0x88, 0x24, 0x00, 0x00,
}
